# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-23 08:25-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/spack.rst:2
# c8c15ff3061447b88269f1b1fd7fb39d
msgid "spack package"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:5
# 754a9b41538f408c85197e20e4854d14
msgid "Subpackages"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:22
# e8a5fc693d844b71ada653953b5a358c
msgid "Submodules"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:25
# 67fca62910ee4ea8b25831e4d3230522
msgid "spack.abi module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/abi.py:docstring of spack.abi.ABI:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Arch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.OperatingSystem:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Platform:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Target:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/caches.py:docstring of spack.caches.MirrorCache:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/compiler.py:docstring of spack.compiler.Compiler:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigScope:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.ForbiddenLock:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.Dependency:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FsCache:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.AsciiGraph:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackCommand:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.when:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.InstallPhase:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageViewMixin:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Lexer:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Parser:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Token:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/reporter.py:docstring of spack.reporter.Reporter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/resource.py:docstring of spack.resource.Resource:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec_set.py:docstring of spack.spec_set.CombinatorialSpecSet:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.DIYStage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.Store:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.Context:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList:1
# cbfc4f51c3144264967afeb3389b03f8
# 9ed697f58c414b849aefa51bbcb853eb
# e50b2533aa17499a83a1063e85c68e7f
# dc263330c18d42b89a88fed5f341e282
# 72a25ad50ad04ee08b7aeb722096362d
# 201cf2d237a24c9dbbd079c0b1af74bb
# 80bc0ac342e54591b0ba75e7871cea01
# 0889e1161bbc4c43a50d8d7d0fbb9a59
# 7c536dd954f34284ac60e2e869d0b186
# bd02a81381aa457ea50bebd58fecd2e6
# 562eddd050304c1e98100cda7a9e90a2
# 3b4cdf6ba63248a48a2819fe8ed3d00e
# 90184d5588c5424a9a1426cfcd989cd3
# df0fb7a91a4d453295fccb1719d7d90e
# 3326ad8b94f14b32b76d59fe543431b0
# 08a0c4fbf5e048f6bbf73f86bd6ea89a
# 61564a5d29314b05a603911c938a18f1
# 0eda8969aae14388afba9f986f587539
# af7643c5655a46ae88331b207dda9080
# 889c205d5f054a7ea308f5a4c41dd84b
# 148ec9a986f644bc9d8ea1555b17eddd
# c65fc867bda94ebdba27e2d692343edb
# e341b58230b1490cbc5d46ea7e9d5bda
# b256331bb8af48229246213854dd96c2
# fed4766171b04bdb9006bb8fef7ea733
# 555fef57b2494818aa8a3dfbdd7a8d26
# c826bda896434b9292031f67fb1594a2
# 8b7de13b62894b078699754b924657fc
# e184f63b5cc442fa8ec6cbcb596c4960
# dc30332460ae463e9a406d1652448962
# 0eabaf745b1c4c09a35e3e8ae68344a0
# 5b4772ee8b564615a021355067f7a05e
# 30508c4daf1141998631fd725e43abfe
# 94edeb8815394258a7f35a8d36505197
# ac4185521e5846a0ba5629cd6eec92b9
# 488615aaffe945c8ac0aa29e3008c456
# 89be39c324fb4f7ca7b2f54f9580263c
# 8ec2a268b40a464eada99c05c673c285
# 9d7730ba5f2e4d469847b1ed53a50edd
# f93fd59b6ea54bc983737d12dc50e65a
# 03b0f3cf931b4723a59a9518f149ab25
# 21c0849bce93473d940cdc5a79e78aae
# 99dd171dbd6a4ea29c275c075fdd16cd
# ccad189ea41e422f905d701a92af4017
# f65109c198cb4d84a365e3e1757d0799
# b2431a67c984401c82b13bea6c921766
# 1b0a368bd23a4fb0894e7de5d4b84a79
# 645ecccf9b7846f082c1840ffd054943
# 34e26f9f9b25454c89eae189b58e4711
# 32c74b1fda4c44d0a24c7b62ace30c6f
# 9aa4bf62ccbd49ce8c316b7b7d5f7374
msgid "Bases: :class:`object`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/abi.py:docstring of spack.abi.ABI:1
# 3fd09a5f1e754fd09109dc47ca287e1e
msgid "This class provides methods to test ABI compatibility between specs. The current implementation is rather rough and could be improved."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/abi.py:docstring of spack.abi.ABI.architecture_compatible:1
# 2bb7ac421d5549c18f3312ae8ff8e4ee
msgid "Return true if parent and child have ABI compatible targets."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/abi.py:docstring of spack.abi.ABI.compatible:1
# 83cab98c78c44e018c40db7680e75a78
msgid "Returns true iff a parent and child spec are ABI compatible"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/abi.py:docstring of spack.abi.ABI.compiler_compatible:1
# cabc5dd05d134d368b73bcb7b5cf1631
msgid "Return true if compilers for parent and child are ABI compatible."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:33
# f3acbde63f0640d8a3fa628ea8e05d81
msgid "spack.architecture module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:1
# d539a7796f434db8b28c7181ce11da1a
msgid "This module contains all the elements that are required to create an architecture object. These include, the target processor, the operating system, and the architecture platform (i.e. cray, darwin, linux, bgq, etc) classes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:5
# 575ee2217d9749ff94b33965065eaa2f
msgid "On a multiple architecture machine, the architecture spec field can be set to build a package against any target and operating system that is present on the platform. On Cray platforms or any other architecture that has different front and back end environments, the operating system will determine the method of compiler detection."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:14
# 80e24b5df9c74c0a88c9bdb5da76558b
msgid "There are two different types of compiler detection:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:13
# 5e03cf2c43ba4cce96a3d5ac50d01b44
msgid "Through the $PATH env variable (front-end detection)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:14
# c9876760487b4f4297f86b0b4beabb7b
msgid "Through the tcl module system. (back-end detection)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:16
# cb07a1a072d646fc82e57428e0ef2022
msgid "Depending on which operating system is specified, the compiler will be detected using one of those methods."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:19
# f2a2d8e82aa04c10a62c095bf6ad717c
msgid "For platforms such as linux and darwin, the operating system is autodetected and the target is set to be x86_64."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:22
# eea246b4a41d488282d74ae7b4d79c0e
msgid "The command line syntax for specifying an architecture is as follows:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:24
# 97b80360fd654d238c6becd89bbd88a9
msgid "target=<Target name> os=<OperatingSystem name>"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:26
# 91fd3091e71540a38f469769a77cd77f
msgid "If the user wishes to use the defaults, either target or os can be left out of the command line and Spack will concretize using the default. These defaults are set in the 'platforms/' directory which contains the different subclasses for platforms. If the machine has multiple architectures, the user can also enter front-end, or fe or back-end or be. These settings will concretize to their respective front-end and back-end targets and operating systems. Additional platforms can be added by creating a subclass of Platform and adding it inside the platform directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:35
# 133686b5aafa450687ef6d791252d521
msgid "Platforms are an abstract class that are extended by subclasses. If the user wants to add a new type of platform (such as cray_xe), they can create a subclass and set all the class attributes such as priority, front_target, back_target, front_os, back_os. Platforms also contain a priority class attribute. A lower number signifies higher priority. These numbers are arbitrarily set and can be changed though often there isn't much need unless a new platform is added and the user wants that to be detected first."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:43
# c3865fc0a0ba4554be777c9dfea795e0
msgid "Targets are created inside the platform subclasses. Most architecture (like linux, and darwin) will have only one target (x86_64) but in the case of Cray machines, there is both a frontend and backend processor. The user can specify which targets are present on front-end and back-end architecture"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture:48
# 2add4e789f88442c9621ba0255c6ad9a
msgid "Depending on the platform, operating systems are either auto-detected or are set. The user can set the front-end and back-end operating setting by the class attributes front_os and back_os. The operating system as described earlier, will be responsible for compiler detection."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Arch:1
# ed30273e4cac4a2d970434dd8cf35379
msgid "Architecture is now a class to help with setting attributes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Arch:3
# fe36fe5db0fe47c5a64e98c49c97a64e
msgid "TODO: refactor so that we don't need this class."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.NoPlatformError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NewLayoutException:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoChecksumException:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoGpgException:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoKeyException:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoVerifyException:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.PickKeyException:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.InstallError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.InsufficientArchitectureInfoError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.NoBuildError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.NoCompilersForArchError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.NoValidVersionError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.UnavailableCompilerVersionError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.CorruptDatabaseError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.ForbiddenLockError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InvalidDatabaseVersionError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.MissingDependenciesError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.NonConcreteSpecAddError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.UpstreamDatabaseLockingError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayoutError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.SpackEnvironmentError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.NoHeadersError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.NoLibrariesError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.SpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.UnsupportedPlatformError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.MirrorError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.MultiMethodError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.NoSuchMethodError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.DependencyConflictError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.FetchError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.InstallError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.VirtualInPackagesYAMLError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.ParseError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.NoSuchPatchError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchDirectiveError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndexError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.InstallRootStringException:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.spec.SpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.StageError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.UrlParseError:1
# 274e06f647b8452a8948e845301fc36c
# 95be6521a63d4624adb2739033aebf70
# 5ab7e5149e88412185e61a2209cd37ed
# 91a8c71c01974025af36bf0ef9c5b9c9
# 6438767c91714ea9b320f6b3f156c173
# 28090e834510424b832ada42256952a0
# eb3da013890b42dd9e89cc50868570bd
# 55528fae86c0402ca6092fc98290f84d
# 33835879e9904319ab82a72891114264
# 97230f9c294a4996b789df61b8d1cb34
# f9c5d8270c374e02abeaeca909f6190f
# b45506aa1edc42d0bfca3614d4a34546
# ec5a80067239461db10fb3ca4c8c805f
# 9e50e4e21b8d4e35bc90ab349aa2dd8e
# eefaa719341d47ae9f1ec38c61ec6d5e
# 358d91acfac140198eaf11d197e13708
# 528c7b58e1e541ffa83e4c7b450d1d03
# 9569f547d97946409266a240086d3919
# 21d13cbcb8d0425295e53a30c8fddf3a
# 3ecbce3de6df41a7a05f8e1f25e1473f
# 5e669a5d7a574119a701213fb58cc6ae
# b484c6a725da416ea902e14f7cd93e6a
# 4209d87e60e840c89d3f5674be390d65
# c3a2223557bd4879bb4aa85a47e501da
# cae0928721ee4993bc59c3a35f6d74d7
# 3cd0c10b20634acd955e6e078545c3ad
# 0b9c1f740dd84556893fe2df66f4cd34
# ae12800429e34cbeaf47ea36a8f31ba7
# 925b0a2d0db34383816101762cda47c8
# 8aab785852454e0fbb3913e892bc26f0
# bfbd8a7186094b1587353d5b1be6240d
# 3a4f1b0746274bb983b0ae66e1408f87
# e7fef501d508434681d0383d1fab24cb
# b6f77b18016a437daa25eebb57ea170d
# 335bc10828de432ead1e7cfc0b164649
# c2841dba95654cc7bc61d99d478238e8
# 88b6884cfdfa45659668c2e6a094bca4
# d729c780f5934c8d9be1e91637e69ef9
# e0a68208c13a494f8393ef14728974ac
# 432f4d3a64e64635a80f92c72b6db90d
# e9c60d42000848178447bf0246a750eb
# e214f3ed3a9749349c0475ac196d035a
# 69a4b57ad98b472d8d5c43d26d4602de
# 9ba32f99d1df474389966d8b630ecc3b
msgid "Bases: :class:`spack.error.SpackError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.OperatingSystem:1
# 355828abed2f49aa88ac283599621d7f
msgid "Operating System will be like a class similar to platform extended by subclasses for the specifics. Operating System will contain the compiler finding logic. Instead of calling two separate methods to find compilers we call find_compilers method for each operating system"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.OperatingSystem.find_compiler:1
# 01d4a94b3e8e486ea16c03e6379a39b6
msgid "Try to find the given type of compiler in the user's environment. For each set of compilers found, this returns compiler objects with the cc, cxx, f77, fc paths and the version filled in."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.OperatingSystem.find_compiler:6
# 8be2646d9c3a4ce8a01ed25ab5b47b03
msgid "This will search for compilers with the names in cc_names, cxx_names, etc. and it will group them if they have common prefixes, suffixes, and versions.  e.g., gcc-mp-4.7 would be grouped with g++-mp-4.7 and gfortran-mp-4.7."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.OperatingSystem.find_compilers:1
# 7cb508c2b5db4b8c9571b5ae1a73b340
msgid "Return a list of compilers found in the supplied paths. This invokes the find() method for each Compiler class, and appends the compilers detected to a list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Platform:1
# ed16798394614a3a88b2a2a9cc258ea7
msgid "Abstract class that each type of Platform will subclass. Will return a instance of it once it is returned."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Platform.add_operating_system:1
# 7dbd180833c44f14b948ad46028ce52d
msgid "Add the operating_system class object into the platform.operating_sys dictionary"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Platform.add_target:1
# e712e5ffc36c4cd28eb2ed4c0aa3dda7
msgid "Used by the platform specific subclass to list available targets. Raises an error if the platform specifies a name that is reserved by spack as an alias."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Platform.detect:1
# 4737da0d88ca41ab8ebd6eab2f08d079
msgid "Subclass is responsible for implementing this method. Returns True if the Platform class detects that it is the current platform and False if it's not."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Platform.setup_platform_environment:1
# d410415d763b4b01a14379fa7c35a1bb
msgid "Subclass can override this method if it requires any platform-specific build environment modifications."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Platform.target:1
# f4e7e5737e194e0abaaae36b5832d05d
msgid "This is a getter method for the target dictionary that handles defaulting based on the values provided by default, front-end, and back-end. This can be overwritten by a subclass for which we want to provide further aliasing options."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.Target:1
# 510eda63b0774a3f94a288859ca13431
msgid "Target is the processor of the host machine. The host machine may have different front-end and back-end targets, especially if it is a Cray machine. The target will have a name and also the module_name (e.g craype-compiler). Targets will also recognize which platform they came from using the set_platform method. Targets will have compiler finding strategies"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.arch_for_spec:1
# 09d7436edd3544aca0d8ea6f56941339
msgid "Transforms the given architecture spec into an architecture objct."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.get_platform:1
# 256e8af53f1c4336beffeac11ea61e39
msgid "Returns a platform object that corresponds to the given name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.platform:1
# 1081959d62d0445e88ddbbb51588eb3d
msgid "Detects the platform for this machine."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.platform:3
# 4a6d24f81925444ca38b8ff8702cecfe
msgid "Gather a list of all available subclasses of platforms. Sorts the list according to their priority looking. Priority is an arbitrarily set number. Detects platform either using uname or a file path (/opt/cray...)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.sys_type:1
# 0049995eb4cb4f6d917a96b6353a7a44
msgid "Print out the \"default\" platform-os-target tuple for this machine."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.sys_type:3
# ba625b39505f45d495b153b8f74d7199
msgid "On machines with only one target OS/target, prints out the platform-os-target for the frontend.  For machines with a frontend and a backend, prints the default backend."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.sys_type:7
# 39e344a5f3d64c3593a8e6c2705c3c44
msgid "TODO: replace with use of more explicit methods to get *all* the backends, as client code should really be aware of cross-compiled architectures."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/architecture.py:docstring of spack.architecture.verify_platform:1
# 05d2def03ded43108cb2370299abe621
msgid "Determines whether or not the platform with the given name is supported in Spack.  For more information, see the 'spack.platforms' submodule."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:41
# bf0513466c0c4f899d126c20cbaf3f0d
msgid "spack.binary\\_distribution module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NewLayoutException:1
# 37c620f9080c41b4b199d1a8f1f32887
msgid "Raised if directory layout is different from buildcache."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoChecksumException:1
# 5a49aacd657f4aa6ba3a3bf5e42e2b4e
msgid "Raised if file fails checksum verification."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoGpgException:1
# 180143b2d45446b6b0297fe3519be597
msgid "Raised when gpg2 is not in PATH"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoKeyException:1
# 6ee86480ba4b472e8bd24f2de1d5841e
msgid "Raised when gpg has no default key added."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoOverwriteException:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.SpackError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackCommandError:1
# cbff4aeb696c4c5e8ba3947e9a934bbb
# 867bd08b84504175a7634e090d183699
# bc9919c12a5c4aea98083290db776e1b
msgid "Bases: :class:`Exception`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoOverwriteException:1
# c64025ac14bc44f8b121d81b56ed7e51
msgid "Raised when a file exists and must be overwritten."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.NoVerifyException:1
# 37628003fab74c4ab233393c5a73fa1f
msgid "Raised if file fails signature verification."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.PickKeyException:1
# 82c8b484322c45bdbf35858fccea514a
msgid "Raised when multiple keys can be used to sign."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.build_tarball:1
# 7dd4a8d4703040929ab33625dc3fb983
msgid "Build a tarball from given spec and put it into the directory structure used at the mirror (following <tarball_directory_name>)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.buildinfo_file_name:1
# f2cebd002a1a41cfbe148b0b5dcf7c09
msgid "Filename of the binary package meta-data file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.check_specs_against_mirrors:1
# 3e8d1b9af41342988fc0fc7347f45f01
msgid "Check all the given specs against buildcaches on the given mirrors and determine if any of the specs need to be rebuilt.  Reasons for needing to rebuild include binary cache for spec isn't present on a mirror, or it is present but the full_hash has changed since last time spec was built."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.check_specs_against_mirrors:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_package_context:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.load_external_modules:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.set_build_environment_variables:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.concretize_specs_together:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.override:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.validate:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.canonical_deptype:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.conflicts:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.depends_on:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.concretize:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.deactivate:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.extension_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.get_module:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.load_command_extension:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.path_for_extension:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackArgumentParser.format_help_sections:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.main:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.print_setup_info:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.check_for_unfinished_installation:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.possible_dependencies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.on_package_attributes:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.FilePatch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch.apply:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache.patch_for_package:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.apply_patch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.file_is_relocatable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_binary:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_relocatable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.mime_type:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex.add_indexer:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.get_repo:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndex.update_package:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.additional_repository:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concretize:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.Store:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.compatible:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultiValuedVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.compatible:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_variant:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.validate_or_raise:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.substitute:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.any_combination_of:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.auto_or_any_combination_of:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.disjoint_sets:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.implicit_variant_conversion:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.substitute_abstract_variants:0
# 6026905b15c24800af8ce8a3ed6aa742
# 0d57ee6cb791453bbec10b79e022800d
# 3ab3646181a049ffadcbe844ba08b933
# 7a9af73d6f014e43946a943d7fd3c96c
# bf60718172fd4604b1e4dc1a0856aa71
# 799b2d077d3b45b7be1f5e4c189f8667
# 22c258a79ae44a3f92114f28bdc74969
# 4ee36238d96644ac8a667f1a42dba776
# 052c5dcf09e84f36aa85d8984730ab69
# 661b8eef3a23403686a9fedd3ea5dc6e
# 62057500312545bfaef2c64515ff38fa
# 87d32739430e47de9b54525c54f1a59d
# fea49833ab1f4bbdb4014a56e943a058
# 351d3f205f8c4dd3b21d8ab38dba5962
# 4b4abfb37a5945bfaba4be736424b4dc
# e14df390f7a9482a80efdacdc85ce76f
# bb3299b4775f46d6873e429938dd0893
# 499afbf0f29d4289a970fe0b0ef62e66
# 14968a40566147d7b3e7605a00a6b9b1
# de78cc8dae734cec80058bf98c7ba53a
# 324246c59b23427691cb7c299e616d3a
# de78d5e114444250a29397f65f97fc05
# 72237b054a154dab9061e4f49a8e83a6
# b6dc7231fb84499caf33fb12de136c3b
# 5a2e336526f742d49db4c7a7ba7252db
# 3a1235d6d7f046a187d71348909916cc
# b329d671d8fc47bc809b7d1a48967405
# bb78f2e03ac5438298b7d0f510536f0f
# f15ddc99d740467583342be76921e8f3
# 5ef7b525129d4a59a43359c6e4eff53a
# c42b1218a54a4680a6790b972627aab1
# 417cf0d886e04c9eaf02521020271c77
# 488dea303d4c4d958fd3eadad69f1b86
# 7703789af02f4914a520e81b9b27bc94
# 264f8c79384b4ede8b906b0c461358d8
# a4699c02ab6f4dea990b7e0bfcae6724
# 72476753e3524f7590d53765bb166ddf
# cc222828518d41b98e3e17e7ba0fb677
# 38bab14be2924e91837ad86a1cccb5f7
# 2abd3bae83d748cfa5451e856f12029b
# 64f0417023b0476bb5c3087a99fa493f
# f8d1058bce44421387c7f7bcd86544ca
# cc4bf23244aa4d90a2e763f1169556fa
# 925ce221f5394b329d9f8ee986da6324
# ba714b05980d4da19fed9f85e95a7e79
# 1193dc50db8249e38c047cbdd89461c9
# b4efdf07913a4ddd8cd9b38ae1b60277
# db6b8904dee449708c45603f6f32befa
# 22755752ddf5474a95837fdd472633da
# 33b5ec6a6f6545018f6f6be6cd3b72f6
# 4097cbc3d7e6428aac591df177a45bb9
# 10d0e757481e44c7ae5c1f7877b145e0
# e8e255b7b88042baa6bae528daf0fd73
# 654d53e264584dc3955d1ac50b0246e3
# 1ebe227a5e08468a90f6db639b0fdcbc
# 34e33c060f32438e898b647e832eb5ad
# 379bfa220eef4dffab73610f685b5f8a
# 599f6f90f9eb467490cbaaaacf00009b
# b88bc990fb09431a9941dd832451fa4c
# 4c7916a6002e417e949d3cefc85787d4
# ffa68711889346d4981e2d17e9d71b0b
# c3adff43d3d649bf90e97d1fdbc10415
# 32fc79085861402da40999b940140f46
# 5d6b3a31b72f49cc994fa914e6b01510
# 061b8e4e8f5e4d41b937c35b90cbfbdd
# 75e1a5887fcb4ad18efadbcf40e97410
# fad7e2b55da44828a9a50f84a6102765
# 8fb8c253c5a24af7a32fa115343f5e50
# 6449437662a440e4aad611012b704b7b
# 4c1ec504aaac409393e33439d2005ffd
# 32fa918f71e94d03ad9915b82310c277
# 2c4ca5e55a0b45139aad58689a32b519
# 3742b30afeb940149f12d94449d2d4f9
# 3726dce47da1401c95dc18fdf8197dc4
# 7ef4463d66484dbc90e9cf6ea79de0fc
# fdbadc888ad54416b3606ccc83ac8e81
# 8e0240d8710e44c38fcfaf8e419aa691
# 7c5b9bdd012c4c5aa38279fc900438f0
# a14f207743ea40d3bfd72901f157a4c4
# 7b06a7a9647c4b5dbdc038c8133008e9
# a255012527104854a0af9d18ee868926
# 1b122369b87b48279849dfdf9f806881
# dbf4adfdc9544465b4f40e4f050426ef
# 9e89c17241024a3a8dea870ab6066cb2
# e981b7b2fe8047bcafbbe4d14e9484f4
# d6c0745b4ae74e749e1818189da1842d
# eb32295826f144e1962a8a2543a5ccb5
# 15dc0df907a847ec9a8c55fd4b68736f
# b18a01a44b9548cab81f23b787ab01d0
msgid "Parameters"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.check_specs_against_mirrors:6
# 0342cf5f829c4dbfb0081f14a3b3be43
msgid "Mirrors to check against"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.check_specs_against_mirrors:8
# 2b9f6132d81e43f9b3119409eed73717
msgid "Specs to check against mirrors"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.check_specs_against_mirrors:10
# 812303f7e9574a02bddff0686be2aaf4
msgid "Path to output file to be written.  If provided, mirrors with missing or out-of-date specs will be formatted as a JSON object and written to this file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.check_specs_against_mirrors:14
# efc73c8bd06544dc875bcc42bed29ed7
msgid "Treat any errors encountered while checking specs as a signal to rebuild package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.check_specs_against_mirrors:18
# 93e1399f1cab498ebb0de6444d363013
msgid "Returns: 1 if any spec was out-of-date on any mirror, 0 otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.download_tarball:1
# d14a103b13a14d059f5b49937f783b65
msgid "Download binary tarball for given package into stage area Return True if successful"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.extract_tarball:1
# 957253d3d9a74ff5bf3926bf0d9ff97b
msgid "extract binary tarball for given package into install area"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.get_keys:1
# 254d86fdf4d64810ac09b6becb530e29
msgid "Get pgp public keys available on mirror"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.get_specs:1
# fa5f5658a559490a8c19052dc407ddc3
msgid "Get spec.yaml's for build caches available on mirror"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.make_package_placeholder:1
# 087d8dca023247eca19f54b57d3a1d38
msgid "Change paths in binaries to placeholder paths"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.make_package_relative:1
# b4cf29f6709b4990aad2fa5be711b838
msgid "Change paths in binaries to relative paths. Change absolute symlinks to relative symlinks."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.read_buildinfo_file:1
# a6851fbe2df64efaae9ede3908ea2495
msgid "Read buildinfo file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.relocate_package:1
# feddc5900313411cbd534719bbb1a1a7
msgid "Relocate the given package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.tarball_directory_name:1
# a810d79c0d9d420e9867fa32cf712288
msgid "Return name of the tarball directory according to the convention <os>-<architecture>/<compiler>/<package>-<version>/"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.tarball_name:1
# 6896ef24eece4fd8814db4d7b36f9b7c
msgid "Return the name of the tarfile according to the convention <os>-<architecture>-<package>-<dag_hash><ext>"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.tarball_path_name:1
# b5c57f6e461141d795d10dfe0981408e
msgid "Return the full path+name for a given spec according to the convention <tarball_directory_name>/<tarball_name>"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/binary_distribution.py:docstring of spack.binary_distribution.write_buildinfo_file:1
# 112ab99def974f60830ddc254899fac7
msgid "Create a cache file containing information required for the relocation"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:49
# 40d327b92f75487db401c5982d50eb41
msgid "spack.build\\_environment module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment:1
# 73fe30953f97413eab21dfd0041c114b
msgid "This module contains all routines related to setting up the package build environment.  All of this is set up by package.py just before install() is called."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment:5
# 8ae6b24f7ce0434391b943b1af84235b
msgid "There are two parts to the build environment:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment:7
# 3d88bba6d6a343daad4e1fc7a1a33277
msgid "Python build environment (i.e. install() method)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment:9
# 1493b5101053465a8ae6afc015adbce0
msgid "This is how things are set up when install() is called.  Spack takes advantage of each package being in its own module by adding a bunch of command-like functions (like configure(), make(), etc.) in the package's module scope.  Ths allows package writers to call them all directly in Package.install() without writing 'self.' everywhere.  No, this isn't Pythonic.  Yes, it makes the code more readable and more like the shell script from which someone is likely porting."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment:18
# 15e064f443ca4127bbe636924e9e4be5
msgid "Build execution environment"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment:20
# 8ebb92b31f71497b85fbf50feddcafea
msgid "This is the set of environment variables, like PATH, CC, CXX, etc. that control the build.  There are also a number of environment variables used to pass information (like RPATHs and other information about dependencies) to Spack's compiler wrappers. All of these env vars are also set up here."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment:26
# b655c7446c86446e8278fd15157a8e04
msgid "Skimming this module is a nice way to get acquainted with the types of calls you can make from within the install() function."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:1
# 094dd950e10140929f85787fc5d6b02f
msgid "Bases: :class:`spack.build_environment.InstallError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:2
# d50b2f01c51947c6b906d75ec11e25b0
msgid "Special exception class for wrapping exceptions from child processes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:2
# 560afa952a40403e8b14935dedb17afc
msgid "in Spack's build environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:4
# 1e2ec84221fa429fa9cf5d9075e0c53d
msgid "The main features of a ChildError are:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:6
# e85838df94b3461895a26dd83667fb06
msgid "They're serializable, so when a child build fails, we can send one of these to the parent and let the parent report what happened."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:9
# 922e1c9f97834a92a7886b1b57b712f1
msgid "They have a ``traceback`` field containing a traceback generated on the child immediately after failure.  Spack will print this on failure in lieu of trying to run sys.excepthook on the parent process, so users will see the correct stack trace from a child."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:14
# ae1788f55a024cb7952f469bf6d479b0
msgid "They also contain context, which shows context in the Package implementation where the error happened.  This helps people debug Python code in their packages.  To get it, Spack searches the stack trace for the deepest frame where ``self`` is in scope and is an instance of PackageBase.  This will generally find a useful spot in the ``package.py`` file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:21
# 315e6b1f48904a0198c1347634ec105d
msgid "The long_message of a ChildError displays one of two things:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:23
# 2655a9d7c9674f328c7401d3e5476da6
msgid "If the original error was a ProcessError, indicating a command died during the build, we'll show context from the build log."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:26
# 1335f70bb0bd4bb391ff48aefed21fda
msgid "If the original error was any other type of error, we'll show context from the Python code."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.ChildError:29
# 711889df6f0d4644aed74ee465ef8112
msgid "SpackError handles displaying the special traceback if we're in debug mode with spack -d."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.InstallError:1
# ccdf1eaf43814fa69f269a9a82e80da0
msgid "Raised by packages when a package fails to install."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.InstallError:3
# e72e88a08d454aafb2ce793d380ef95f
msgid "Any subclass of InstallError will be annotated by Spack wtih a ``pkg`` attribute on failure, which the caller can use to get the package for which the exception was raised."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.MakeExecutable:1
# 6ff2d46204ea4848a6e2f381f2983869
msgid "Bases: :class:`spack.util.executable.Executable`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.MakeExecutable:1
# 059a004f80da4ff39458b79675a0a2be
msgid "Special callable executable object for make so the user can specify parallelism options on a per-invocation basis.  Specifying 'parallel' to the call will override whatever the package's global setting is, so you can either default to true or false and override particular calls. Specifying 'jobs_env' to a particular call will name an environment variable which will be set to the parallelism level (without affecting the normal invocation with -j)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.MakeExecutable:10
# e95c73b1ad654a4e8aff3eac4f03db0b
msgid "Note that if the SPACK_NO_PARALLEL_MAKE env var is set it overrides everything."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:1
# 2fe012e98a91434d9f847f491fa7c0ec
msgid "Fork a child process to do part of a spack build."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:3
# b0836d56385445f5a1c3852deafb28dc
msgid "package whose environment we should set up the forked process for."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:6
# 971dc9f8e45946849a005709103518e1
msgid "argless function to run in the child process."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:9
# 102cc54d8e5849f487bd60a921e4b52c
msgid "If True, do NOT clean the environment before building."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:12
# 524b90e98a7a4b4683db8b19a58d1115
msgid "If True, skip package setup b/c it's not a real build"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:15
# e6f3da65db174f988b0258ad3d27017d
msgid "Usage::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:21
# 1cdf783a909e4c1da0b727d6aaf4d2e7
msgid "Forked processes are run with the build environment set up by spack.build_environment.  This allows package authors to have full control over the environment, etc. without affecting other builds that might be executed in the same spack call."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.fork:26
# daca94c9eea64bb9b10431a26c50164c
msgid "If something goes wrong, the child process catches the error and passes it to the parent wrapped in a ChildError.  The parent is expected to handle (or re-raise) the ChildError."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_package_context:1
# f1728b1a85a14c9190355c9353218600
msgid "Return some context for an error message when the build fails."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_package_context:3
# 64851aa54ec3490d865afdcb66876d93
msgid "A traceback from some exception raised during install"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_package_context:6
# d032cd45009c4b5fb3510cb85ab7b712
msgid "Lines of context to show before and after the line where the error happened"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_package_context:10
# cbcdcf7f15df4b21ba000e982026ddc3
msgid "This function inspects the stack to find where we failed in the package file, and it adds detailed context to the long_message from there."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_rpath_deps:1
# 297f346bb9754e2ab99cbfda46642f2c
msgid "Return immediate or transitive RPATHs depending on the package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_rpaths:1
# 62e7086ebcb24a5d90f1432dbaee369e
msgid "Get a list of all the rpaths for a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:1
# 8d92e5798d914a029442a499d4c42ab5
msgid "List of standard arguments used if a package is a CMakePackage."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.concretize_specs_together:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.add:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.deactivate:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.extension_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.load_command_extension:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.path_for_extension:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.CacheURLFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.all_urls:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.check_for_unfinished_installation:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.fetch_remote_versions:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.installed:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.unit_test_check:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.version_urls:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.file_is_relocatable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_binary:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_relocatable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.mime_type:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.needs_update:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.needs_update:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.compatible:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.copy:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.value:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.yaml_entry:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultiValuedVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.compatible:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.yaml_entry:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.allowed_values:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_default:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_variant:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.concrete:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.copy:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.any_combination_of:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.auto_or_any_combination_of:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.disjoint_sets:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dashed:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dotted:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.joined:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.underscored:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.up_to:0
# 8cd9976f84d94dfbbbee486a05910d78
# 7cc7e1c4b60e4fb1aa620bf45173341b
# f7ab527336484bb191cd3766566a0584
# 7c9541448e234baab1353a97f54b4693
# 23b8296c96914580a17bdcd031b8038b
# 10736b63c5e04392b99de0f4ed2f02bc
# 921ef98a8365430c8658ca00bab08662
# 3699fbbec61d4b5cb22a030d5d650a3b
# add7cead3d70466ea481aea45bd24709
# f234cd78696841a3af37fa0c5fe18ed6
# b4ce9aa88d504a64bf699f6544dd887d
# df9b6e8de98442e79ce66f9dc850356f
# b818899b9df74aa990243060a66b8ab4
# ac40ad83194745edb82b994bc04abb46
# 27e048054e0c42af847692e8e777a3c5
# 02b8a5f13adb4fefb283199aea3ec4a3
# 6f49129e503f417fa08e15140a57c6ce
# c21d42533e8442428a88bbc55e9592c8
# 4ddf6d82fa3144a087badb97720f2dff
# 13780cc0aab34913803f06e206ebe500
# d0600f27b7bf486da724f4a23100e607
# f50d673b97274bea801ae07b483dd621
# 9ed8b524f24847b5b1c399c92e74e040
# 278c5b3c8198435e9c3a04f5aecd17bb
# 48cba5e126054d2ea217a82927465770
# 7f88eb5be95f4b5f9cdf890497d41937
# df9379ceca684c8aa611e148b69cdd7c
# 1c61c02edcdb47179dcc4f9eb483d1ab
# 5fd905b6a71747e193b3de84caba132f
# 3fd5868bee424b6e883da04026eb123d
# 1e356baf98ea41fcb790ed8c20cf2730
# 01fdad523f4a4c0285205a4f0043a0b6
# 5df3714b3e7043729383d3672ab95f87
# f64f7d7adcec4038b17e19b6f5f2e2d3
# 16caf820ad674ca8846fa6fccb0c4360
# 76bcb65ff3a34532a135d229929d24c1
# 3c4bead7ff634475a6a45852e5039771
# 928e18a6384d4275af0b3a243b00fb84
# cb4c851c66b04a6290bd8a8ed4827f50
# b5e0652f8a7c4801989cf8f3bd86e1aa
# 10f2af822d9f43668b1d738e1c01f86f
# 1cb4d666e129462ca056355bd7356cae
# 77654e7fd6774aaeab529e62b779c4c9
# 7c1f2cb3048c47b19a45941a6f602ba9
# bedaedd6b0444520974f409df4e897bc
# 7214da47776249afbee64240b69e9968
# 3f0c139e0ac94865a1e5617fcbfe76a2
# b3ef297657424cee951d2d6a7f32c6b8
# f70f324f9ff245ca9471f7e90a023f73
# 3df2da2474c2491a9502ac657e8d888d
# 42b210d08bda42a2b2d508f4b0165169
# 76a4ba1d3ad248c592b6b4b3de43261e
# 4f073a03f1834edc85ff5dafb407cb78
# f383f30d3c7c490fb188558e5541a79d
# 59869eea2f3c46fb8639776eb5d100bb
# dee599e960394dc79bd8a003ce7379b9
# dbf03614dd144494bcfc3c749743d2f8
# 4b555a9f6c4345eb960c9659c519d4a5
# aac78583ae374dd1b0316300f126932f
# ae8ccb5abffd4bb9bc9caedb577d8d6a
# efce0a8a222b4aacb8d14bf1175b1f5e
# 12c7c084e60345daa576aa9cbddcc79e
# 8436176d6a78422289176e84699cb368
# 8583626d28794e16880402c7cb342339
# 7b61188e33e74d2ebc28cd4b3b3330ae
# c6302a3bc4564a8aa2294363d726c48f
# fd74ae79dce542eb870638153d76b6c9
# 21e13f0a7e014840bb77e50534866066
# dacec97ac21e47f095e74184d14644d2
# 5e6f047fab4e423486b789ee44c96293
# 0b37ec54c6cd472dbb3b1119dc1e1481
# 98ac1a1fc5e4431483eb26f10ace40d6
# 8b732aefa09a4b7ea82617d7e53c5f78
msgid "Returns"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:3
# 467ef607ff5c4d238639829f5bd24985
msgid "standard arguments that would be used if this package were a CMakePackage instance."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.add:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.deactivate:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.CacheURLFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.cachable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.fetch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.all_urls:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.fetch_remote_versions:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.unit_test_check:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.needs_update:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.needs_update:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.compatible:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.copy:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.value:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.yaml_entry:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultiValuedVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.compatible:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.yaml_entry:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.allowed_values:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_default:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_variant:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.concrete:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.constrain:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.copy:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.satisfies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dashed:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dotted:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.joined:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.underscored:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.up_to:0
# 22d503f7ebe64071a7b35edcb6c9b6e8
# 0da966dafc54448c85ebaa80faea96cf
# 7b4df01e348d43a6847da3b7e5ce8d55
# 1485991f32c34d85a2f14c502f17e83d
# ca82050550684806b7ed7f151f79755e
# 261a13d59d8f4bcdb0287757ca8c9c6c
# c7703e2464964b57b411f92fdb28b027
# a7186a7faebb433faed6e4c50a6e7310
# a434b547f9e248e59391ec139ca183fc
# 302468831def416dbaa538a5723b8bde
# 0787d9d093af45f399e3972b0c6b319f
# 8f3bfe29af994c7fa22cd81670459668
# cc27dbe9293e42d2819c652f76609309
# e2777bc96c244efa9a6f6e1e4732d607
# 4c53a3408cb74935a354a29a27390957
# f0386e1ccc1e401a8958a83769951947
# 1e4bf2b7a07644eca56d59ffe4d7c73d
# 584293070b1a493bafa493dea56413de
# 84b0c703104e4deea0aa7b77825e0f64
# 1211ca9a06c44907ae5175edb4105fc9
# ba33bc594e13487ab39f9832f511e5c5
# 2805329a15174226939a766ba11c718f
# 944dc4de499f456493587aa3d6ba1d83
# 179c0d8230f94554948db4163e5a29f4
# 13c43d945bdb4f5484745527358f7f71
# 377d4901ad0e4116b3b72ee071c3e438
# 71f7a8e428d244a5a6b689df5fc835ca
# 7df01fafda7d42f880a23d2934ebc242
# 69eaf1938eb743da9ee1b17608dd2437
# 776a4f320b0b4d7fa770fd7763087c02
# 9ad72b4223b74fe6bddc947c9e98eda1
# d0c8c3eb02b649c89f8e534b01a5131d
# c3cf17abf5c949ad94a083481d59a3b1
# 0c2efb95e0cb4004adc72e53f86980aa
# c81a38bc6330420a9ad397cc0ea8ae94
# d0bbe2ff70b5405495d217e1ad207dcc
# 3fcfb188322a4695a2c34ec149e2354f
# dabf1f028af34eb08d4fa120f66a4fca
# 99ff72f04f554d68b2ddfa4e7206e6da
# a6b3bae601084147aa77c3579879bf6d
# 3d71851225264e2087d6c8adb0a4f77b
# 4d10bee03a4542e487efff0c360ed9b6
# 6e9f25e1145b43e9946d36211416d9ff
# 8be00e85ce244357a2d37d43aefa141d
# 4f99fc01af6649c8aae0781ca2fe337d
# 59f4c5f1321b4e949f75a7556f9a5bad
# 26225bc87055462b957edf5ac6ee1282
# 3e99054934484f7ebbd7c666f7aa2247
# 6856afe183864f4aa13f1056dff957d6
# 7fe8d082af3f4d8da926493f4e94d1b7
# 5be5e088343f437f8b913fad61d68dab
# e81ba965015944a4a7fa977afce45ed3
# 47bfda7e9388412095829f0bec0f5f93
# b729801cbe7b4688998a12cc23a085bd
# 2abc8bbcb3754fc2a57cf4c273037220
# 14f21a8ddaa947a3b5e06b6ad0e27a75
# d6f45cd676524c1cb2461f2584bd65f6
# fb8f429ebe7d4c2393b8821d5f116e32
msgid "Return type"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:7
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:7
# 8705097c0b5f41cb91da54692bed2258
# 1bd771f5e7ec49a5ba0e15583e8c007b
msgid "package under consideration"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_cmake_args:10
# e98a15ec6ad64d38bf65f18c5de112fa
msgid "arguments for cmake"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:1
# f09008b8d56f4f4fb6e0ec2880e31a4a
msgid "List of standard arguments used if a package is a MesonPackage."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:3
# fea9a9a757ab441990236a73a88995e6
msgid "standard arguments that would be used if this package were a MesonPackage instance."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.get_std_meson_args:10
# 5e5e8dca977e44dab7644a2e0c2e5ce8
msgid "arguments for meson"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.load_external_modules:1
# 9200a8c9951e41828e5896c88bc7c8ab
msgid "Traverse a package's spec DAG and load any external modules."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.load_external_modules:3
# 10cf981e62fc4dec847f4955a5b69214
msgid "Traverse a package's dependencies and load any external modules associated with them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.load_external_modules:6
# 8a4d6f1f3b6540159889252368940796
msgid "package to load deps for"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.parent_class_modules:1
# 0b473f46c0fe4559acd721f26c4c2522
msgid "Get list of superclass modules that descend from spack.package.PackageBase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.parent_class_modules:3
# f20c734150ca46d6b4744d140919154d
msgid "Includes cls.__module__"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.set_build_environment_variables:1
# 420d9f5ea16040f98e36c8f1e1a87406
msgid "Ensure a clean install environment when we build packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.set_build_environment_variables:3
# 3681116842904d0fbc56b9f42c4b4f7c
msgid "This involves unsetting pesky environment variables that may affect the build. It also involves setting environment variables used by Spack's compiler wrappers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.set_build_environment_variables:7
# ef152360943a475a87d4feea3101457a
msgid "The package we are building"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.set_build_environment_variables:8
# b3d020d36c274f1bbf28b57cf7904d89
msgid "The build environment"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.set_build_environment_variables:9
# b94a6722bbce44579e4f477822ce21d9
msgid "Skip unsetting the user's environment settings"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.set_module_variables_for_package:1
# 4f4fbe9036aa4c5eae8155b719d73f15
msgid "Populate the module scope of install() with some useful functions. This makes things easier for package writers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_environment.py:docstring of spack.build_environment.setup_package:1
# 4898c6de6a7a40d99e2dfd1a432113c1
msgid "Execute all environment setup routines."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:57
# 9eb02a89608b427ba61f9c0eb6d8fb38
msgid "spack.caches module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/caches.py:docstring of spack.caches:1
# 226e92b1c26344a397146a454a5ecf07
msgid "Caches used by Spack to store data"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/caches.py:docstring of spack.caches.fetch_cache:1
# 18df7198dae345d9bf59bb79bb7fbe15
msgid "Spack's local cache for downloaded source archives"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/caches.py:docstring of spack.caches.misc_cache:1
# ad5d81e75c5b47f2abc49bb049253788
msgid "Spack's cache for small data"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:65
# 8a1f8677b5d34292a07b8c5d885dd9d6
msgid "spack.compiler module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/compiler.py:docstring of spack.compiler.Compiler:1
# 43c6ea755d0641d6b4f4c1b15d3ea61a
msgid "This class encapsulates a Spack \"compiler\", which includes C, C++, and Fortran compilers.  Subclasses should implement support for specific compilers, their possible names, arguments, and how to identify the particular type of compiler."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/compiler.py:docstring of spack.compiler.Compiler.default_version:1
# f4079a5a71564fe7a958b6f7ae28af25
msgid "Override just this to override all compiler version functions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/compiler.py:docstring of spack.compiler.Compiler.extract_version_from_output:1
# abe8712277de4816a8b1b3cea3df86a6
msgid "Extracts the version from compiler's output."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/compiler.py:docstring of spack.compiler.Compiler.setup_custom_environment:1
# 66d9607fc0364566b63a26cd27668250
msgid "Set any environment variables necessary to use the compiler."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/compiler.py:docstring of spack.compiler.Compiler.version_argument:1
# b27d9869338845a299d5fa87c03dc5bc
msgid "Compiler argument that produces version information"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/compiler.py:docstring of spack.compiler.Compiler.version_regex:1
# c6c9efe99d714488b02590fa9bede070
msgid "Regex used to extract version from compiler's output"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:73
# 80b42ef7dfb6449bb7b5016d1aca35ff
msgid "spack.concretize module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize:1
# b11756b91e6f4c518682794110b35e39
msgid "Functions here are used to take abstract specs and make them concrete. For example, if a spec asks for a version between 1.8 and 1.9, these functions might take will take the most recent 1.9 version of the package available.  Or, if the user didn't specify a compiler for a spec, then this will assign a compiler to the spec based on defaults or user preferences."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize:10
# 6bfa9220fd41497880ec5fb30038998e
msgid "TODO: make this customizable and allow users to configure"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize:9
# 8d1f988b8beb4527b5b152a44c2c3fc5
msgid "concretization  policies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer:1
# 26857405a69848578ee43620b8a0abda
msgid "You can subclass this class to override some of the default concretization strategies, or you can override all of them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.choose_virtual_or_external:1
# 81292e4fc5df4fab92f2b064b8c2ee21
msgid "Given a list of candidate virtual and external packages, try to find one that is most ABI compatible."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.concretize_architecture:1
# 1708ad3cce454ff98e344e2cd9ed00c7
msgid "If the spec is empty provide the defaults of the platform. If the architecture is not a string type, then check if either the platform, target or operating system are concretized. If any of the fields are changed then return True. If everything is concretized (i.e the architecture attribute is a namedtuple of classes) then return False. If the target is a string type, then convert the string into a concretized architecture. If it has no architecture and the root of the DAG has an architecture, then use the root otherwise use the defaults on the platform."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.concretize_compiler:1
# 8c5443e1725e400ea8a9076ed9afa958
msgid "If the spec already has a compiler, we're done.  If not, then take the compiler used for the nearest ancestor with a compiler spec and use that.  If the ancestor's compiler is not concrete, then used the preferred compiler as specified in spackconfig."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.concretize_compiler:7
# 4f7284aae15140da8873df770f969d7d
msgid "Intuition: Use the spackconfig default if no package that depends on this one has a strict compiler requirement.  Otherwise, try to build with the compiler that will be used by libraries that link to this one, to maximize compatibility."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.concretize_compiler_flags:1
# 976375766e9e40f898eb2c9f814b0211
msgid "The compiler flags are updated to match those of the spec whose compiler is used, defaulting to no compiler flags in the spec. Default specs set at the compiler level will still be added later."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.concretize_variants:1
# 68d5c3bf8f6a4117aa213ba23543e02b
msgid "If the spec already has variants filled in, return.  Otherwise, add the user preferences from packages.yaml or the default variants from the package specification."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.concretize_version:1
# f45fd79344744443bbb80967824d68d6
msgid "If the spec is already concrete, return.  Otherwise take the preferred version from spackconfig, and default to the package's version if there are no available versions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.concretize_version:11
# a746d1a6cc9447ea8239e3b65894123e
msgid "TODO: In many cases we probably want to look for installed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.Concretizer.concretize_version:6
# 72d4807b27434b8f9d07f89c478ba486
msgid "versions of each package and use an installed version if we can link to it.  The policy implemented here will tend to rebuild a lot of stuff becasue it will prefer a compiler in the spec to any compiler already- installed things were built with.  There is likely some better policy that finds some middle ground between these two extremes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.InsufficientArchitectureInfoError:1
# 379db2f26d2c43899857d0b47f0cf863
msgid "Raised when details on architecture cannot be collected from the system"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.NoBuildError:1
# 4e61590d663c4debb01101e185492a4a
msgid "Raised when a package is configured with the buildable option False, but no satisfactory external versions can be found"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.NoValidVersionError:1
# 44b2ce413ebb4ab6b7668b8346825403
msgid "Raised when there is no way to have a concrete version for a particular spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.UnavailableCompilerVersionError:1
# 55d4e44c294241bea4c01174402fe849
msgid "Raised when there is no available compiler that satisfies a compiler spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.concretize_specs_together:1
# b7914cc4b7f343e4b9f7e6a8fff191f5
msgid "Given a number of specs as input, tries to concretize them together."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.concretize_specs_together:3
# 510d3eeec56b4185a426536a6c1260fe
msgid "abstract specs to be concretized, given either as Specs or strings"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.concretize_specs_together:6
# d68bed959fbc4fb68c509b2768b303f1
msgid "List of concretized specs"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.concretizer:1
# 4f64f81043e6479ca0b68db6201cd3ae
msgid "Concretizer singleton"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/concretize.py:docstring of spack.concretize.find_spec:1
# cfd28407e5274827b08bd2a9c483e196
msgid "Searches the dag from spec in an intelligent order and looks for a spec that matches a condition"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:81
# 98b2af9e76da4ef9bf97f0ab7f0a4c9c
msgid "spack.config module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:1
# adeecc46abb54709b18293beb7ad33ca
msgid "This module implements Spack's configuration file handling."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:3
# 6f1fb05583a54ec4962732a7d94279d6
msgid "This implements Spack's configuration system, which handles merging multiple scopes with different levels of precedence.  See the documentation on :ref:`configuration-scopes` for details on how Spack's configuration system behaves.  The scopes are:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:8
# fd276733b9084b7f9cf63643eaa02e50
msgid "``default``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:9
# 62af33fd500c47a98ef0821617b2ad60
msgid "``system``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:10
# 2cd7a74285624dbda81873be55a6c936
msgid "``site``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:11
# 0c7d54fd727d4944af1fd54b429a618e
msgid "``user``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:13
# 1034b9bcbc374282b79403e1d6081f09
msgid "And corresponding :ref:`per-platform scopes <platform-scopes>`. Important functions in this module are:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:16
# 549b865f13a6443d95379e20322bc43f
msgid ":py:func:`get_config`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:17
# 6c7f9f24c6a64840a300505f26a94dcf
msgid ":py:func:`update_config`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:19
# 841787499ed04b1a966c25528ef88137
msgid "``get_config`` reads in YAML data for a particular scope and returns it. Callers can then modify the data and write it back with ``update_config``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config:23
# 14de0086bc6d4d09aa7c363c002a38f7
msgid "When read in, Spack validates configurations with jsonschemas.  The schemas are in submodules of :py:mod:`spack.schema`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigError:1
# f1f3f8a2471f4891b88234d53e1f40b0
msgid "Superclass for all Spack config related errors."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigFileError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigFormatError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigSectionError:1
# d63b6b5775a346a695670013e395bc11
# 5af7bb4dc5ad499b8710fc7e484e02c0
# 35e3b110a13b45a1bfb832e90d294df7
msgid "Bases: :class:`spack.config.ConfigError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigFileError:1
# e4235595a0254d5fa8b4b6945d9a1040
msgid "Issue reading or accessing a configuration file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigFormatError:1
# 829c37ad998c45b59d831c867f625dce
msgid "Raised when a configuration format does not match its schema."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigScope:1
# 1d1dd01fc037459eb8630565b2c30346
msgid "This class represents a configuration scope."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigScope:3
# 14b3c3c08e74401098d7018bd6666ec0
msgid "A scope is one directory containing named configuration files. Each file is a config \"section\" (e.g., mirrors, compilers, etc)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigScope.clear:1
# 6853e7db4f764f96b77026f77c2771d4
msgid "Empty cached config information."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ConfigSectionError:1
# fce1d1ea810741e9aa0db54086cc60a7
msgid "Error for referring to a bad config section name in a configuration."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration:1
# ab0d3a6e881f466ab4c711a0bc72c50f
msgid "A full Spack configuration, from a hierarchy of config files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration:3
# 2ce546a2d09d46cc91a10d1a1db92643
msgid "This class makes it easy to add a new scope on top of an existing one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.clear_caches:1
# 04f3125c345146aa9a72b9dadc26bbdc
msgid "Clears the caches for configuration files,"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.clear_caches:3
# 32028ec186df4d2c8d7ae5c2d2831e15
msgid "This will cause files to be re-read upon the next request."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.file_scopes:1
# 71149950ef8c40af99c16e6ed514112a
msgid "List of writable scopes with an associated file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get:1
# 1b4597d6bd13470b88d2703abb1ce5b6
msgid "Get a config section or a single value from one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get:3
# 19d4f1de50e0444b82917379a7950e0c
msgid "Accepts a path syntax that allows us to grab nested config map entries.  Getting the 'config' section would look like::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get:8
# e5b8f610fbb543fba5ec3aa4ea9307d5
msgid "and the ``dirty`` section in the ``config`` scope would be::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get:12
# 22c0d0ea6f254dbfa6348e07bc614ea5
msgid "We use ``:`` as the separator, like YAML objects."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get_config:1
# 50740b8d2a4d4204bf0e94f94b840c6a
msgid "Get configuration settings for a section."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get_config:3
# 63d2b453a0dc40a5b4f00f34975974a3
msgid "If ``scope`` is ``None`` or not provided, return the merged contents of all of Spack's configuration scopes.  If ``scope`` is provided, return only the confiugration as specified in that scope."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get_config:7
# 2685eb00170e428ab4a4cdf476f5ee49
msgid "This off the top-level name from the YAML section.  That is, for a YAML config file that looks like this::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get_config:15
# 1a58284d32834514a567743e40855451
msgid "``get_config('config')`` will return::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.get_config_filename:1
# 09cd2e4507e94fdc84162a2962f185d8
msgid "For some scope and section, get the name of the configuration file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.highest_precedence_scope:1
# 6f945025d6eb4703b56bd0790602a05d
msgid "Non-internal scope with highest precedence."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.pop_scope:1
# 2c481c302def43428bc913adceed8883
msgid "Remove the highest precedence scope and return it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.print_section:1
# a3a924dfbc9e455bafad6be4d2ae4397
msgid "Print a configuration to stdout."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.push_scope:1
# a03d765f4f2e466c8afa9e7d318b1f4f
msgid "Add a higher precedence scope to the Configuration."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.set:1
# 441320ab0e3e46839a907dd1d8bea9df
msgid "Convenience function for setting single values in config files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.set:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.set:3
# 981c86dd47d94189bb5048bf5e20b4d8
# 22c93528737c44dc8382b72c427a4215
msgid "Accepts the path syntax described in ``get()``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.update_config:1
# 70018665a78f4731b2ce0e250a473b7b
msgid "Update the configuration file for a particular scope."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.update_config:3
# 7a4f5b11b5d84d1483a91e2c78cefee0
msgid "Overwrites contents of a section in a scope with update_data, then writes out the config file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.Configuration.update_config:6
# e88cb0080dcb4393bcf2e80e61c7296e
msgid "update_data should have the top-level section name stripped off (it will be re-added).  Data itself can be a list, dict, or any other yaml-ish structure."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ImmutableConfigScope:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.InternalConfigScope:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.SingleFileScope:1
# 06a551f6b51b4b46b3702da4a31f0a3f
# 1b5604b23df74eae8908da66b8e87268
# bc22099069854bc0a6c83cc1458c32eb
msgid "Bases: :class:`spack.config.ConfigScope`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ImmutableConfigScope:1
# 908eaebc15284722ae71b7ab27a5e2de
msgid "A configuration scope that cannot be written to."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.ImmutableConfigScope:3
# 35b833c9e3fe48348cc0aa83c05e73ec
msgid "This is used for ConfigScopes passed on the command line."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.InternalConfigScope:1
# 30402b9f061940f48db59859b5ba2c0c
msgid "An internal configuration scope that is not persisted to a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.InternalConfigScope:3
# e57251b1e7fe4543baa1e0430b3a5dc1
msgid "This is for spack internal use so that command-line options and config file settings are accessed the same way, and Spack can easily override settings from files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.InternalConfigScope.get_section:1
# 8a9661d3bae940179dd65b7f4044526d
msgid "Just reads from an internal dictionary."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.InternalConfigScope.write_section:1
# b7c3c5bd16184401b00d331e71323b44
msgid "This only validates, as the data is already in memory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.SingleFileScope:1
# 566ed7c74a694799944556077bf8e016
msgid "This class represents a configuration scope in a single YAML file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.command_line_scopes:1
# 50347d76ac3c4995ac3b3e635f5d5827
msgid "configuration scopes added on the command line set by ``spack.main.main()``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.config:1
# 9d9d6bb9b8fc47cfa197fd73b533b168
msgid "This is the singleton configuration instance for Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.config_defaults:1
# 3dee532018e9424cbd4ba4119c1e5602
msgid "Hard-coded default values for some key configuration options. This ensures that Spack will still work even if config.yaml in the defaults scope is removed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.configuration_paths:1
# 090060d9ac3e4768adfe2791a233175f
msgid "Builtin paths to configuration files in Spack"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.default_list_scope:1
# 18ec708797484364848c971a0974dca6
msgid "Return the config scope that is listed by default."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.default_list_scope:3
# 4b6bf5e6441c4523a8c68f543e5fce38
msgid "Commands that list configuration list *all* scopes (merged) by default."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.default_modify_scope:1
# 579be8a679a943f796a04ced8bd3e0a3
msgid "Return the config scope that commands should modify by default."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.default_modify_scope:3
# 3589a3a5d54846fa8086cd79969a00d7
msgid "Commands that modify configuration by default modify the *highest* priority scope."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.first_existing:1
# 7ade2a13ff5d44f595f068b0912f46d0
msgid "Get the value of the first key in keys that is in the dictionary."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.get:1
# 3d961c3fc83c4f359e600d42a21efb11
msgid "Module-level wrapper for ``Configuration.get()``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.override:1
# 8ff21704e1c4469bada2f65a98d5d169
msgid "Simple way to override config settings within a context."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.override:3
# 6b0244a1b1f6427987b1a0c6e3341f2f
msgid "scope or single option to override"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.override:5
# 4bc1a9380ea548b685f73721a8d2e472
msgid "value for the single option"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.override:8
# 1fe1ca8760c44888af2fe62c0621a7f9
msgid "Temporarily push a scope on the current configuration, then remove it after the context completes. If a single option is provided, create an internal config scope for it and push/pop that scope."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.scopes:1
# b1bd7bd4aad34b1b9323ad8a80e6c817
msgid "Convenience function to get list of configuration scopes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.scopes_metavar:1
# c4758c32ba884c17b57ee42ad91853a3
msgid "metavar to use for commands that accept scopes this is shorter and more readable than listing all choices"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.section_schemas:1
# 7cb56f3a063e46738b7046a9154b9832
msgid "Dict from section names -> schema for that section"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.set:1
# 9e271dd72b424794a87b0446f8ddf31a
msgid "Convenience function for getting single values in config files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.validate:1
# a62cbf70134443f4acb707a8dcdf6840
msgid "Validate data read in from a Spack YAML file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.validate:3
# 37fe73e7dc2b47328ea0bd8b96304602
msgid "data read from a Spack YAML file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.validate:5
# e97c0b63ff91400193ad2f896be5662f
msgid "jsonschema to validate data"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.validate:7
# ef4f6822b9b44898bb6b89143c548bd8
msgid "whether to set defaults based on the schema"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/config.py:docstring of spack.config.validate:10
# b4194f08290b4c6f9714b99f47009352
msgid "This leverages the line information (start_mark, end_mark) stored on Spack YAML structures."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:89
# e627a6205c3c4884b59446f980077a3e
msgid "spack.database module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database:1
# ec9cc840a3994c33a1b8a728edf656a7
msgid "Spack's installation tracking database."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database:3
# 3baf96ac071b4701827138a99b480d80
msgid "The database serves two purposes:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database:5
# 15ceecec83db44c787dc2268e78a1f7a
msgid "It implements a cache on top of a potentially very large Spack directory hierarchy, speeding up many operations that would otherwise require filesystem access."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database:9
# 9a57e780317f447089353e9fcf3c6447
msgid "It will allow us to track external installations as well as lost packages and their dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database:12
# ad4a2994db564edaa09f313529547196
msgid "Prior to the implementation of this store, a directory layout served as the authoritative database of packages in Spack.  This module provides a cache and a sanity checking mechanism for what is in the filesystem."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.CorruptDatabaseError:1
# 8c1ce6d995fb452884a4405c4b9f0834
msgid "Raised when errors are found while reading the database."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database:1
# 8fe3aae5b3cf484f91b861d06ec78b82
msgid "Per-process lock objects for each install prefix."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.prefix_lock:1
# 54cc49733a444e7ab8ed74a44466bc3a
msgid "Get a lock on a particular spec's installation directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.prefix_lock:3
# f9a230e8b228457890fc1f98ca16fb19
msgid "NOTE: The installation directory **does not** need to exist."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.prefix_lock:5
# 2f5f7c79447348c1a640ca00bb0e9e73
msgid "Prefix lock is a byte range lock on the nth byte of a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.prefix_lock:7
# a90c73389f124c0ea08048829cb45613
msgid "The lock file is ``spack.store.db.prefix_lock`` -- the DB tells us what to call it and it lives alongside the install DB."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.prefix_lock:10
# 42afa9caed6d4ecda20508e37d0cec1e
msgid "n is the sys.maxsize-bit prefix of the DAG hash.  This makes likelihood of collision is very low AND it gives us readers-writer lock semantics with just a single lockfile, so no cleanup required."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.query_one:1
# 65e771cd3ace414393ed66ef85ddaf99
msgid "Query for exactly one spec that matches the query spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.query_one:3
# f27dad95110f43ecb82affd0fff15da8
msgid "Raises an assertion error if more than one spec matches the query. Returns None if no installed package matches."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.read_transaction:1
# 38658bb14a364dc8a71b090bd05691f6
msgid "Get a read lock context manager for use in a `with` block."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.reindex:1
# fdd87a238a6d47e8963a4c2686f62318
msgid "Build database index from scratch based on a directory layout."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.reindex:3
# 5d7f7a4bfec94ed39b62bdad2af72543
msgid "Locks the DB if it isn't locked already."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.Database.write_transaction:1
# 140873ea6d2849a885bc2b19e52e062d
msgid "Get a write lock context manager for use in a `with` block."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.ForbiddenLockError:1
# b13a3e1726dd4c8fb3ee32432c337951
msgid "Raised when an upstream DB attempts to acquire a lock"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:1
# e423e9bd3ae64db7a9725549a73f8a1f
msgid "A record represents one installation in the DB."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:3
# 610468091d4343c5890c89bf54eae3a3
msgid "The record keeps track of the spec for the installation, its install path, AND whether or not it is installed.  We need the installed flag in case a user either:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:7
# 58471c808f96426ba65f3772c3d96341
msgid "blew away a directory, or"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:8
# 1925d83f0d374712a0e0a2598bb53f58
msgid "used spack uninstall -f to get rid of it"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:10
# 8d7fc3b3653a48ddb721ba647bbd813d
msgid "If, in either case, the package was removed but others still depend on it, we still need to track its spec, so we don't actually remove from the database until a spec has no installed dependents left."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:15
# e060da2c93884d89b017058108e3e999
msgid "spec tracked by the install record"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:17
# 25e12e3fca4c409cb58234793c086f2b
msgid "path where the spec has been installed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:19
# e1141062c41043a9b4c66e55dc1951f2
msgid "whether or not the spec is currently installed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:21
# 3bb98b3f1b9148a1bded45e70419040e
msgid "number of specs that depend on this one"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:23
# 341d40a1bd73408891ec13dfdc405eb2
msgid "whether or not this spec was explicitly installed, or pulled-in as a dependency of something else"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.InstallRecord:26
# 110a0c6727dd4b4dbc23aecb6e2a8d2a
msgid "time of the installation"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.MissingDependenciesError:1
# b50627fd46104811b6f750f50f67d766
msgid "Raised when DB cannot find records for dependencies"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.NonConcreteSpecAddError:1
# 25cf630979414285b2ca5fa7c1bc5f84
msgid "Raised when attemptint to add non-concrete spec to DB."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/database.py:docstring of spack.database.UpstreamDatabaseLockingError:1
# 5308c10357c248419eb12cda1c8a19fd
msgid "Raised when an operation would need to lock an upstream database"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:97
# 7a96536485d3471590c9b85c68d59de6
msgid "spack.dependency module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency:1
# 5081ef870efd4a36b4ea8e096645f061
msgid "Data structures that represent Spack's dependency relationships."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.Dependency:1
# 81b0c09fc30c461db8d4b2f3a264c056
msgid "Class representing metadata for a dependency on a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.Dependency:3
# cfb53a231afb4187b6fea4f50e4cb97c
msgid "This class differs from ``spack.spec.DependencySpec`` because it represents metadata at the ``Package`` level. ``spack.spec.DependencySpec`` is a descriptor for an actual package configuration, while ``Dependency`` is a descriptor for a package's dependency *requirements*."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.Dependency:9
# e52f409f00a8499a85772b7cb01a9bce
msgid "A dependency is a requirement for a configuration of another package that satisfies a particular spec.  The dependency can have *types*, which determine *how* that package configuration is required, e.g. whether it is required for building the package, whether it needs to be linked to, or whether it is needed at runtime so that Spack can call commands from it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.Dependency:16
# 2976acd8a223481981a8a804197d1cb1
msgid "A package can also depend on another package with *patches*. This is for cases where the maintainers of one package also maintain special patches for their dependencies.  If one package depends on another with patches, a special version of that dependency with patches applied will be built for use by the dependent package.  The patches are included in the new version's spec hash to differentiate it from unpatched versions of the same package, so that unpatched versions of the dependency package can coexist with the patched version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.Dependency.merge:1
# f6ea8db502674afe8b6687a5273f567e
msgid "Merge constraints, deptypes, and patches of other into self."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.Dependency.name:1
# 42637dec712044ecb57b083bf2c369ad
msgid "Get the name of the dependency package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.all_deptypes:1
# d23e6f58683d4b58b47689ecc9ff92b9
msgid "The types of dependency relationships that Spack understands."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.canonical_deptype:1
# 0469db32122140f5a5f331c3247d5c92
msgid "Convert deptype to a canonical sorted tuple, or raise ValueError."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.canonical_deptype:3
# 86fa214ccfdb4ce99debb3b0e17c92ac
msgid "string representing dependency type, or a list/tuple of such strings.  Can also be the builtin function ``all`` or the string 'all', which result in a tuple of all dependency types known to Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/dependency.py:docstring of spack.dependency.default_deptype:1
# 8a97990d845140b39859e4d4db6ba1fc
msgid "Default dependency type if none is specified"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:105
# 624a341723dd43218f763ac6b6f01db0
msgid "spack.directives module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:1
# 624f31ae1603496badce4fe6a0384a96
msgid "This package contains directives that can be used within a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:3
# 0f63987567464966a90e3ef0243e17bf
msgid "Directives are functions that can be called inside a package definition to modify the package, for example:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:9
# 29acf451d33448e497d0a42765c66877
msgid "class OpenMpi(Package):"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:7
# e23c07fe44604f30ad74048dce173421
msgid "depends_on(\"hwloc\") provides(\"mpi\") ..."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:11
# 0d9671ddb7df4784a391e68cd1b33e64
msgid "``provides`` and ``depends_on`` are spack directives."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:13
# a78dcd9123bf4993849967bbc79a4b75
msgid "The available directives are:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:15
# eb9827b50750468d8bf8f912dc17705f
msgid "``version``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:16
# a385d5a924234ac783487951db650f37
msgid "``depends_on``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:17
# 266329aa21e84472a09f59345b5c29e6
msgid "``provides``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:18
# e8b78c6bf3bf4934b4645a9b6676e410
msgid "``extends``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:19
# 1f6bcd5569654c6d9ddbc83d7dc182b1
msgid "``patch``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:20
# ff0618e7ceee4a089905aa09984b95eb
msgid "``variant``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives:21
# b1c6b2af6a654b7582675d332b2af4a4
msgid "``resource``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.version:1
# 6d5520c777b04b1185d47e3db77cb949
msgid "Adds a version and metadata describing how to fetch its source code."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.version:3
# 891031cb7cab4c9390abf8b601e193fb
msgid "Metadata is stored as a dict of ``kwargs`` in the package class's ``versions`` dictionary."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.version:6
# e1e4201f15004e84adcb830308f330a5
msgid "The ``dict`` of arguments is turned into a valid fetch strategy later. See ``spack.fetch_strategy.for_package_version()``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.conflicts:1
# 3367ced80cc74e8cbdc191843ab634d0
msgid "Allows a package to define a conflict."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.conflicts:3
# a90d75877fb546cea2784834cef3ecd0
msgid "Currently, a \"conflict\" is a concretized configuration that is known to be non-valid. For example, a package that is known not to be buildable with intel compilers can declare::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.conflicts:9
# 1308de5a0ea84cb79dbd97bc59595736
msgid "To express the same constraint only when the 'foo' variant is activated::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.conflicts:14
# 4b80f35e90a7460abccc24deca1fc01e
msgid "constraint defining the known conflict"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.conflicts:16
# b3bb87b75d6c44909387bf8da3532f55
msgid "optional constraint that triggers the conflict"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.conflicts:18
# 31329c81548449f9a78ce2884ecd998a
msgid "optional user defined message"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.depends_on:1
# 149b124b37f9493481dd952338fa1b7b
msgid "Creates a dict of deps with specs defining when they apply."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.depends_on:3
# f06e4eecb87543f1bd629268acc6a30b
msgid "the package and constraints depended on"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.depends_on:5
# 04594be2ae794a9ba1656d8aa96f7075
msgid "when the dependent satisfies this, it has the dependency represented by ``spec``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.depends_on:8
# 60abbc6b8f4940e79c8269de0e19f0f9
msgid "str or tuple of legal Spack deptypes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.depends_on:10
# 9e9e118e8e2c4566897a445ed9cf0c7f
msgid "single result of ``patch()`` directive, a ``str`` to be passed to ``patch``, or a list of these"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.depends_on:14
# 9611a49ba1254c49bf6f4d2ec328d06d
msgid "This directive is to be used inside a Package definition to declare that the package requires other packages to be built first. @see The section \"Dependency specs\" in the Spack Packaging Guide."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.extends:1
# 0f8b95007c4b4c1caf6ac27b64f25ddd
msgid "Same as depends_on, but allows symlinking into dependency's prefix tree."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.extends:4
# e3131948115a453d854f4013a389a15e
msgid "This is for Python and other language modules where the module needs to be installed into the prefix of the Python installation. Spack handles this by installing modules into their own prefix, but allowing ONE module version to be symlinked into a parent Python install at a time, using ``spack activate``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.extends:10
# e8cf4ab4721c4ebb87f0eea527ceb72b
msgid "keyword arguments can be passed to extends() so that extension packages can pass parameters to the extendee's extension mechanism."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.provides:1
# 68f3375597ac4efd832992fcc2cccea6
msgid "Allows packages to provide a virtual dependency.  If a package provides 'mpi', other packages can declare that they depend on \"mpi\", and spack can use the providing package to satisfy the dependency."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:1
# ec183396cdee4c858a742ab325c33a64
msgid "Packages can declare patches to apply to source.  You can optionally provide a when spec to indicate that a particular patch should only be applied when the package's spec meets certain conditions (e.g. a particular version)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:6
# 13b3d9a2043a4257a809297752b5ea3d
msgid "url or relative filename of the patch"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:8
# 7bd14a8a828a4e13990b9a10b6dfb2e3
msgid "patch level (as in the patch shell command)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:10
# 753b670d26e04707aaa53fc71a54c1a8
msgid "optional anonymous spec that specifies when to apply the patch"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:13
# c68c98fcbefc4a00b650b0a354439f3e
msgid "dir to change to before applying"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:0
# 578d23da0a934c28ad0b75d9f14fc694
# 1b820636361044e991d34342512bb44f
# fcfef0da8fe941fe81acb4d8b0bf034b
# b6fbd4803e574c00bd42371067b518dd
msgid "Keyword Arguments"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:16
# de611bee32e447fabc1eb26b10a4f33d
msgid "sha256 sum of the patch, used to verify the patch (only required for URL patches)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.patch:19
# 6a070529ff164145af39bbe3beb8cfd9
msgid "sha256 sum of the *archive*, if the patch is compressed (only required for compressed URL patches)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:1
# d0847afcdf924bc9883429cb62c92732
msgid "Define a variant for the package. Packager can specify a default value as well as a text description."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:4
# 1fdc62366e6741ff8fe566bd046b0227
msgid "name of the variant"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:6
# 895a38ab6752467b88e5948a92b82e72
msgid "default value for the variant, if not specified otherwise the default will be False for a boolean variant and 'nothing' for a multi-valued variant"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:10
# cd4cb409fb4a4144bf89bab34bcb9417
msgid "description of the purpose of the variant"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:12
# 428662ae4c9c4dcaaf2fa9d942d30030
msgid "either a tuple of strings containing the allowed values, or a callable accepting one value and returning True if it is valid"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:16
# e05be6d8ecc742c0b2f8194d991a7dbc
msgid "if False only one value per spec is allowed for this variant"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:19
# 06a5f6c42a9f4a8cb2cd6964465fbd15
msgid "optional group validator to enforce additional logic. It receives the package name, the variant name and a tuple of values and should raise an instance of SpackError if the group doesn't meet the additional constraints"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.suggest_archive_basename:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.file_is_relocatable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_relocatable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.validate_or_raise:0
# 2f89e16ce5394e2cb06a0477c3e83ffe
# 6f7774a78b864ce693aa19af47f32c1d
# bc1fc595ec0a432aa3f3450ab834a91d
# dcd4d28bc6e84e11a1b33c892cbc7221
# 82ae20e3d7f04c929a3311396c471c4d
# 80ef9054f9894f00b1e4b616ff48cb75
# d08338c48804428da12a0f8da65cfe3f
# 31e7fd537b3a47168a2762949b432ccd
# 18a8358cbbaa4c40b5064f4fadec1e76
# b31e04431949426c8f80dafbe2c51827
# ed9a00b2a3d54fb8bb5e7ee1a78e3e06
# 460da1ea829e4b6bb61d607f7e36b665
msgid "raises"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.variant:25
# c491914c87564eca87193126d109ec21
msgid ":exc:`DirectiveError` -- if arguments passed to the directive are invalid"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.resource:1
# 652f6c5a62f54acba77573be67ca4d71
msgid "Define an external resource to be fetched and staged when building the package. Based on the keywords present in the dictionary the appropriate FetchStrategy will be used for the resource. Resources are fetched and staged in their own folder inside spack stage area, and then moved into the stage area of the package that needs them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.resource:7
# 414e37d88bee40008ce425a4e56dd826
msgid "List of recognized keywords:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.resource:9
# 8d729309143c49a68e547aa6a17b6c63
msgid "'when' : (optional) represents the condition upon which the resource is needed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.resource:11
# 2bdc8365c2b642b2be1457a4830d23d5
msgid "'destination' : (optional) path where to move the resource. This path must be relative to the main package stage area."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directives.py:docstring of spack.directives.resource:13
# 59aaa0898bca4e0c87c1b20f2e0dec74
msgid "'placement' : (optional) gives the possibility to fine tune how the resource is moved into the main package stage area."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:113
# 5984be79fff64438bb8dcb01ef3e1ae9
msgid "spack.directory\\_layout module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout:1
# 325e992c24744a4a942703d7ee4d56cc
msgid "A directory layout is used to associate unique paths with specs. Different installations are going to want differnet layouts for their install, and they can use this to customize the nesting structure of spack installs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.all_specs:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.all_specs:1
# 56c2a0ac5ece43dabed48fc2f7db4a8f
# b8c44926e27f4aa9ab2bc21f82e8ad78
msgid "To be implemented by subclasses to traverse all specs for which there is a directory within the root."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.check_installed:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.check_installed:1
# efe05ec3481a469daef525938b0a1ff0
# 82ebce20422145ccafb7e00398422fa7
msgid "Checks whether a spec is installed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.check_installed:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.check_installed:3
# c80c4588ed214c8a949f6890a7647091
# 1c6309f1e1c64fd1b2ed67027326ba2a
msgid "Return the spec's prefix, if it is installed, None otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.check_installed:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.check_installed:5
# de6f09c728ec48cd9b0ddd531b59e806
# 9197f41b1e8a4d6685c9f123a547235e
msgid "Raise an exception if the install is inconsistent or corrupt."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.create_install_directory:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.create_install_directory:1
# b3a14959e0704257a8a42ef84acbd07b
# d5911521cf6749c6b6dc00f550b939d2
msgid "Creates the installation directory for a spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.hidden_file_paths:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.hidden_file_paths:1
# 4989e42b4eed45b49fcf537868645949
# edd3df14d79a4c829b26638971dd38aa
msgid "Return a list of hidden files used by the directory layout."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.hidden_file_paths:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.hidden_file_paths:3
# 8af0d2843c864dedba91855f2c77f620
# 0af3948d19e54097993be3b61ea3abe8
msgid "Paths are relative to the root of an install directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.hidden_file_paths:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.hidden_file_paths:5
# d1242ee1530f47e78588c56b849463a2
# e443c3b2be904898866dce6b1800088a
msgid "If the directory layout uses no hidden files to maintain state, this should return an empty container, e.g. [] or (,)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.path_for_spec:1
# c93f60af07404b32a0b6fee0abb83b08
msgid "Return absolute path from the root to a directory for the spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.relative_path_for_spec:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.relative_path_for_spec:1
# b7fc4a82287e4f1792cc6ed4723b0888
# c3059f086a4945bea2889c5fb0c979f0
msgid "Implemented by subclasses to return a relative path from the install root to a unique location for the provided spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayout.remove_install_directory:1
# 5a43904d29264ce98a943c40b602c0d4
msgid "Removes a prefix and any empty parent directories from the root. Raised RemoveFailedError if something goes wrong."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.DirectoryLayoutError:1
# 5f34c641cba44ed28d4a4524b40535e0
msgid "Superclass for directory layout errors."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionAlreadyInstalledError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionConflictError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.InconsistentInstallDirectoryError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.InstallDirectoryAlreadyExistsError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.InvalidDirectoryLayoutParametersError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.InvalidExtensionSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.NoSuchExtensionError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.RemoveFailedError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.SpecHashCollisionError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.SpecReadError:1
# 477e0e410ab04685abd517ade01e8ca7
# 28ff8b3724ae4bbda1faa362dee90350
# b7e389fe54f64aa9b455a5a0195d4931
# 90dc02bf71564013900382ac1a042f63
# f7dbc7c4d0334aa7b1165b005c0c098c
# f152592af9834d8f8baee92a13205839
# f58fb0089a284c0688e2846e109aa329
# 5c6bc4e567cc4da8940aa4322ff9a06d
# 4036ea85e33b41fea29fdf056a3187d0
# fe37bd1a97e64c328f7f25587595150f
msgid "Bases: :class:`spack.directory_layout.DirectoryLayoutError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionAlreadyInstalledError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionConflictError:1
# 098438f0dccc433bbf8040eabfc8960f
# 4dabc12c924f41799c95902846813ed0
msgid "Raised when an extension is added to a package that already has it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout:1
# f988de20e8094e42a288f2df630210e3
msgid "A directory layout is used to associate unique paths with specs for package extensions. Keeps track of which extensions are activated for what package. Depending on the use case, this can mean globally activated extensions directly in the installation folder - or extensions activated in filesystem views."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.add_extension:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout.add_extension:1
# 285c6f2eaf6a4544894b4aaebf2d5054
# 0dbdc94d1a4d47488e6445b9895d30e7
msgid "Add to the list of currently installed extensions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.check_activated:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout.check_activated:1
# da9afd9c8d3e4cbbbcb1f47cf0d06ff6
# cc09019f8f224c92b9a4f0d2fdb81400
msgid "Ensure that ext_spec can be removed from spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.check_activated:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout.check_activated:3
# 0284c64902a64ec3897f03cf7e3ea4dd
# d287e3fd1da44a07a0e220b517fe9a62
msgid "If not, raise NoSuchExtensionError."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.check_extension_conflict:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout.check_extension_conflict:1
# a08e058145954be0a9b9633ff77474b8
# dbd477b8e46f44e8a5aa08c824d4539c
msgid "Ensure that ext_spec can be activated in spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.check_extension_conflict:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout.check_extension_conflict:3
# c2e485da460c4fbc9a4e31eae4eb0b6c
# 49b6f6630bc542bd9cd6afc81bb3f506
msgid "If not, raise ExtensionAlreadyInstalledError or ExtensionConflictError."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.extendee_target_directory:1
# 466f788008ef4701b7483d6d607f38f8
msgid "Specify to which full path extendee should link all files from extensions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.extension_map:1
# 2ab55744b1b64cf8915fe5eabfef45ff
msgid "Get a dict of currently installed extension packages for a spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.extension_map:3
# 9b61bbb454af49a39c9bd0877a75408a
msgid "Dict maps { name : extension_spec } Modifying dict does not affect internals of this layout."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.ExtensionsLayout.remove_extension:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout.remove_extension:1
# 9d038e6ce8d14b98bf21bb514e6f7946
# adff52e9ee644aae92589e3c545b5465
msgid "Remove from the list of currently installed extensions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.InconsistentInstallDirectoryError:1
# 065b4bee409e4cda891df004ddce9a21
msgid "Raised when a package seems to be installed to the wrong place."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.InstallDirectoryAlreadyExistsError:1
# f08222c0ab0e4ef887758cebdf3bd61f
msgid "Raised when create_install_directory is called unnecessarily."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.InvalidDirectoryLayoutParametersError:1
# 21b4a189c881493883078fa87ba30606
msgid "Raised when a invalid directory layout parameters are supplied"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.InvalidExtensionSpecError:1
# 769b6e26a3544e258eacc20a64f6d5b8
msgid "Raised when an extension file has a bad spec in it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.NoSuchExtensionError:1
# fdfd94fd79684909a0b70c41184d7b45
msgid "Raised when an extension isn't there on deactivate."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.RemoveFailedError:1
# 45fe82b1ef2b4501bdf96a0ec17e6487
msgid "Raised when a DirectoryLayout cannot remove an install prefix."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.SpecHashCollisionError:1
# f165e0897c5d4b089dfc35bd99ec1650
msgid "Raised when there is a hash collision in an install layout."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.SpecReadError:1
# 7bf2ce41c3c5481cb246389f1038dd99
msgid "Raised when directory layout can't read a spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout:1
# 768b49f078874b0c9d268623aca8adde
msgid "Bases: :class:`spack.directory_layout.DirectoryLayout`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout:5
# d3082a1529924478988ee0c6b5098cab
msgid "By default lays out installation directories like this::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout:5
# 093cd818c5824af695d66c0d6dcf1152
msgid "<install root>/"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout:5
# 074a62380aad42ab816242a9be92b486
msgid "<platform-os-target>/"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout:5
# 43848df91327461a8da413d24e989a45
msgid "<compiler>-<compiler version>/"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout:5
# 79814d56a02a465f8173f57ccd53fea0
msgid "<name>-<version>-<hash>"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout:7
# 0446eaad21c54dc3a258aaceb0a1f26e
msgid "The hash here is a SHA-1 hash for the full DAG plus the build spec.  TODO: implement the build spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout:10
# 9dd82a4dee404c42b6c5165ac5e57834
msgid "The installation directory scheme can be modified with the arguments hash_len and path_scheme."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.read_spec:1
# a2e5d1494c014e5e9010e28d8083999d
msgid "Read the contents of a file and parse them as a spec"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.spec_file_path:1
# f086537599f74b42a855441abed49e97
msgid "Gets full path to spec file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlDirectoryLayout.write_spec:1
# 279eba86fd804386b0f6adc72f94dc74
msgid "Write a spec out to a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout:1
# 1cd230bab84a44f384ee92033609f97f
msgid "Bases: :class:`spack.directory_layout.ExtensionsLayout`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout:1
# 87f9d06d453749f9bbfdd33a91987d64
msgid "Maintain extensions within a view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout.extension_file_path:1
# 88338d3cb4e34ad49ac17d6bde0945d0
msgid "Gets full path to an installed package's extension file, which keeps track of all the extensions for that package which have been added to this view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/directory_layout.py:docstring of spack.directory_layout.YamlViewExtensionsLayout.extension_map:1
# 7cced08ac755472eaa63ab12cfde86f7
msgid "Defensive copying version of _extension_map() for external API."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:121
# 79b4ef011b87464c8cad413ee8d82fea
msgid "spack.environment module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.active:1
# 9014e3f9f9904db9913f3c4a34ba40e1
msgid "True if this environment is currently active."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.add:1
# f1bf0d019e404ab1befbc5c2025520c6
msgid "Add a single user_spec (non-concretized) to the Environment"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.add:3
# bae37b6b954b42ee9d3dd0219d887c25
msgid "True if the spec was added, False if it was already     present and did not need to be added"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.add:5
# 94fd31c16af348faa559c11eb6eae04e
msgid "True if the spec was added, False if it was already"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.add:6
# c4c4becab8c24235b59cfeaf1e5dd507
msgid "present and did not need to be added"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.added_specs:1
# 8460cbb85dc64eaab8be4c7437b47377
msgid "Specs that are not yet installed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.added_specs:3
# 715f8d3d7963458bb4db790f476962cf
msgid "Yields the user spec for non-concretized specs, and the concrete spec for already concretized but not yet installed specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.all_hashes:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.all_specs:1
# 09629cc184414037a1cbf6c43e43c0d0
# 85e82a461ee2498b87c2d0b7e0a580e9
msgid "Return all specs, even those a user spec would shadow."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.all_specs_by_hash:1
# 3c7489d74aa149fe8231bfe1707ff510
msgid "Map of hashes to spec for all specs in this environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.concretize:1
# 02d2235e1df34491b36c82384b914e46
msgid "Concretize user_specs in this environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.concretize:3
# e9fb1fba0f7247c5a57f06c9299fd252
msgid "Only concretizes specs that haven't been concretized yet unless force is ``True``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.concretize:6
# aa0675e5546f4077a1a7368bb43e94dd
msgid "This only modifies the environment in memory. ``write()`` will write out a lockfile containing concretized specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.concretize:9
# 9fed3031b39c4ab9907cb3976a25a069
msgid "re-concretize ALL specs, even those that were already concretized"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.concretized_specs:1
# 9b5d643cb1c34a28bc6bb0dc73597c5d
msgid "Tuples of (user spec, concrete spec) for all concrete specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.config_scopes:1
# cf0802a4cbe94f7fbe55e07f04869488
msgid "A list of all configuration scopes for this environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.destroy:1
# 6a4fd810d3ef4cecb606bf7291698a3d
msgid "Remove this environment from Spack entirely."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.env_file_config_scope:1
# 4a2bdc01aaf04dd4aaeb359d25576783
msgid "Get the configuration scope for the environment's manifest file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.env_file_config_scope_name:1
# 0631aa1795d240189581030f9a9b6bb6
msgid "Name of the config scope of this environment's manifest file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.env_subdir_path:1
# 7a9aa3d5161d4d4ab23d8c5ef5e5b970
msgid "Path to directory where the env stores repos, logs, views."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.included_config_scopes:1
# 1e505bd698cd491b8fae1d97829f6711
msgid "List of included configuration scopes from the environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.included_config_scopes:3
# d9422ab88e8f4ec789dfe981c628ca07
msgid "Scopes are listed in the YAML file in order from highest to lowest precedence, so configuration from earlier scope will take precedence over later ones."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.included_config_scopes:7
# acc56d2392ff4d5db500266f950e6f0a
msgid "This routine returns them in the order they should be pushed onto the internal scope stack (so, in reverse, from lowest to highest)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.install:1
# 230ce344fa2048308a788d14c30754b4
msgid "Install a single spec into an environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.install:3
# 31788862b5bb457b87608604d7ec8a9d
msgid "This will automatically concretize the single spec, but it won't affect other as-yet unconcretized specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.install_all:1
# 5944b593ea224c0c9fad0db1c81fd76a
msgid "Install all concretized specs in an environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.internal:1
# cb50bb955b8541248ee25287fa9f3d89
msgid "Whether this environment is managed by Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.lock_path:1
# 789f0d899e7043b1a53eb6009aac23e9
msgid "Path to spack.lock file in this environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.manifest_path:1
# 8d62b2e6e81149438bc5b915b90a4ee4
msgid "Path to spack.yaml file in this environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.name:1
# c535531fa5624ce9b4ac0ce99845eae4
msgid "Human-readable representation of the environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.name:3
# 913e308158d741c89776b485d2a0e74d
msgid "This is the path for directory environments, and just the name for named environments."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.remove:1
# b6fbc013b4a3463283cd52add36ccc74
msgid "Remove specs from an environment that match a query_spec"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.removed_specs:1
# 808696a607a14c3da2788b6bf4b6cd91
msgid "Tuples of (user spec, concrete spec) for all specs that will be removed on nexg concretize."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.roots:1
# dad90b97c7934af387b21eee5ea88fd7
msgid "Specs explicitly requested by the user *in this environment*."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.roots:3
# 72a816b6ebe1450fb9f7ffc7b4655b92
msgid "Yields both added and installed specs that have user specs in `spack.yaml`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.write:1
# 0b5766838c96485f9a16c171fe315968
msgid "Writes an in-memory environment to its location on disk."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.Environment.write:3
# 912c79ee132d4513b361db3ee5573da7
msgid "This will also write out package files for each newly concretized spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.SpackEnvironmentError:1
# a3e95df7209049e7a4a59c6255ab3d21
msgid "Superclass for all errors to do with Spack environments."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:1
# 83372753130d4e0f94ad30d141fd3ca2
msgid "Activate an environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:3
# db87e359888f425e8093fc5e3e513027
msgid "To activate an environment, we add its configuration scope to the existing Spack configuration, and we set active to the current environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:7
# ad4578f824274f38bc6a4acaf23b8ee9
msgid "the environment to activate"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:9
# 51afa6b11b434ad887f676c3e9ed1db8
msgid "use the packages exactly as they appear in the environment's repository"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:12
# bdb2206f47034cf7bf022f8e3636864d
msgid "generate commands to add view to path variables"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:14
# 68e670b614074d1784a35cd2a85e6647
msgid "One of `sh`, `csh`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:16
# b7cb5bceb97241cb950c30d0b542bbb5
msgid "string to add to the users prompt, or None"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:19
# 74c0855956b84703a428db197694ab5b
msgid "Shell commands to activate environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.activate:22
# a2f6b1eff5e84720b972abdb7e3f87d0
msgid "TODO: environment to use the activated spack environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.active:1
# 3e773f1e393748958f0e9705050b9f0b
msgid "True if the named environment is active."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.all_environment_names:1
# e34154def3e146d4a1e5c0a7e58a2fbb
msgid "List the names of environments that currently exist."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.all_environments:1
# ad038fd3734647d3b08f0b4a9b2a71d3
msgid "Generator for all named Environments."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.config_dict:1
# dcf9ba125a7a4127b6e00e0f2500ca2d
msgid "Get the configuration scope section out of an spack.yaml"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.create:1
# ed4c6df2ad6c4390afe3d629eb1d0131
msgid "Create a named environment in Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.deactivate:1
# 4233b3415b6740a39340cd08a182d839
msgid "Undo any configuration or repo settings modified by ``activate()``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.deactivate:3
# fccd0df2e25142c28fb9e4b0bf5f09aa
msgid "One of `sh`, `csh`. Shell style to use."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.deactivate:6
# 6a90e461abf14aa5ae7455ed6923d5fe
msgid "shell commands for `shell` to undo environment variables"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.deactivate_config_scope:1
# a191533daef9449ca5f95abefc954636
msgid "Remove any scopes from env from the global config path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.default_manifest_yaml:1
# bee03200304149f4af62240733333bb0
msgid "default spack.yaml file to put in new environments"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.env_path:1
# 2fd06ccf814d458893495fd2c97470c9
msgid "path where environments are stored in the spack tree"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.env_schema_keys:1
# 1c96db76541447228d7d31b44b1510c7
msgid "legal first keys in the spack.yaml manifest file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.env_subdir_name:1
# bd5ddf3b3f27482080ef22ee550d92dc
msgid "Name of the directory where environments store repos, logs, views"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.exists:1
# 43e0b06a8ac4452692a8cabea0a34351
msgid "Whether an environment with this name exists or not."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:1
# 0eeb96dd8ae84552bf31b225afdcb5a8
msgid "Find active environment from args, spack.yaml, or environment variable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:3
# 0c2d6ca67f334e768970e561d7942f33
msgid "This is called in ``spack.main`` to figure out which environment to activate."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:9
# b1055a5f7c174650b3dacb72fc3f8775
msgid "Check for an environment in this order:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:7
# 00d4799417e6443b85297cb7d86ca4c9
msgid "via ``spack -e ENV`` or ``spack -D DIR`` (arguments)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:8
# b7ab19e6612642d591fecb6f005e6442
msgid "as a spack.yaml file in the current directory, or"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:9
# f9faabec04ad4f829bc164f5389cbced
msgid "via a path in the SPACK_ENV environment variable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:11
# 38098dabc686446a975f3a3720f9b8c0
msgid "If an environment is found, read it in.  If not, return None."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:13
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:15
# 0783ea78525c4da390ce71c7a0d9a229
# 148e21b4844e47098fa937c92f9d779b
msgid "argparse namespace wtih command arguments"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.find_environment:16
# 2f581a4d25f44a379d6fdedaac1878a7
msgid "a found environment, or ``None``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:1
# f1027d751fb341b58879370beb6035b1
msgid "Used by commands to get the active environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:3
# c0c074864478401a86d4411db9089294
msgid "This first checks for an ``env`` argument, then looks at the ``active`` environment.  We check args first because Spack's subcommand arguments are parsed *after* the ``-e`` and ``-D`` arguments to ``spack``.  So there may be an ``env`` argument that is *not* the active environment, and we give it precedence."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:9
# f21257f783d94ea499f463e8b83d19c0
msgid "This is used by a number of commands for determining whether there is an active environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:12
# 6ae02bff68d54e409b2908ca2d7ff5d1
msgid "If an environment is not found *and* is required, print an error message that says the calling command *needs* an active environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:17
# d6888b6f2f1d4fbc954f46997454400e
msgid "name of calling command"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:19
# 72fe080f06984c0a87277a255b68c0ea
msgid "if ``True``, raise an exception when no environment is found; if ``False``, just return ``None``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.get_env:23
# 29fac16c8cbf4b589b06f86a0918151d
msgid "if there is an arg or active environment"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.is_env_dir:1
# 644793c99f654586979c629756dce0f5
msgid "Whether a directory contains a spack environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.lockfile_format_version:1
# f6e870ab29a84dfbadf8754c28771a0b
msgid "version of the lockfile format. Must increase monotonically."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.lockfile_name:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.manifest_name:1
# f1eebe3002e94cf9a7de9f4c07aaebfc
# 9b376d657642459ea0740ae43b5ab0e0
msgid "Name of the input yaml file for an environment"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.make_repo_path:1
# 4221d3af110947168a7f3d4a100aa2fb
msgid "Make a RepoPath from the repo subdirectories in an environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.prepare_config_scope:1
# d21610c7827141ad972d0f551be2e48c
msgid "Add env's scope to the global configuration search path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.read:1
# 937aa170a09c48aa956087125982d3e6
msgid "Get an environment with the supplied name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.root:1
# 8d021aa8da3b44a2b45addd044cb270d
msgid "Get the root directory for an environment by name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.spack_env_var:1
# 2f79e927991744f3ac58b4fe8f654af0
msgid "environment variable used to indicate the active environment"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/environment.py:docstring of spack.environment.valid_environment_name_re:1
# 5c7f280205504e5cb89a33ba587ad888
msgid "regex for validating enviroment names"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:129
# 7665bd867ab14911ac1aef2a47246dcc
msgid "spack.error module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.NoHeadersError:1
# decd0d81a28e44f29ca2cd2bb43cd434
msgid "Raised when package headers are requested but cannot be found"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.NoLibrariesError:1
# 8552070243854d21b77cb69416d3499f
msgid "Raised when package libraries are requested but cannot be found"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.SpackError:1
# 87915b30c212409b983973e51d883d01
msgid "This is the superclass for all Spack errors. Subclasses can be found in the modules they have to do with."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.SpackError.print_context:1
# 40069c2acba54351904946712a2a9302
msgid "Print extended debug information about this exception."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.SpackError.print_context:3
# b7b313c18fde47ddb976d6f9782e5a76
msgid "This is usually printed when the top-level Spack error handler calls ``die()``, but it can be called separately beforehand if a lower-level error handler needs to print error context and continue without raising the exception to the top level."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.SpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.spec.SpecError:1
# a009a885c6174642bf6994cabca14857
# c77e5d1b784f484d8933250b522f1673
msgid "Superclass for all errors that occur while constructing specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.UnsatisfiableSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.SpecParseError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.DuplicateDependencyError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.spec.DuplicateVariantError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.DuplicateCompilerSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsupportedCompilerError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.spec.UnknownVariantError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.DuplicateArchitectureError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.InconsistentSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.InvalidDependencyError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.NoProviderError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.MultipleProviderError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.spec.UnsatisfiableSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.AmbiguousHashError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.InvalidHashError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.NoSuchHashError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.RedundantSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DuplicateVariantError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.InconsistentValidationError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.InvalidVariantValueError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.UnknownVariantError:1
# 41903e4720db4a3d92457d232dff7232
# 11e06d0e6f5947f2a49deccbb4c3107e
# 5e3518ea366c465ca4e2ccc5b0cb2b09
# c3500c0269964b4ba2ab397cb0c2431a
# 0a1bc08f4258459da280923122109998
# c6c44f5383dc41debd676d1486d8ae5a
# da73822b8d654d45aad3991fe86b96a1
# 125683c9733e4cd0be93d8ff7e6d534b
# 5ff8c6f80b1840d3add79fa00f92ad96
# ab95a0d7b1644d788fd4def0c5167dda
# c921c5a6ea9d4e7384e288e7e3707489
# 109daeb65aef49a49a7d5b469b059d3c
# 6631757b2ead42cd9dc41c573155de4e
# e4348fb3001e4a6487f15e44733f5b23
# 110d2876737e496d8afc34e0bf8affc1
# beddc879d9fc422096b84a5281f730e8
# 10012213385144f3a4891cd343428bd6
# be9173a024504171b19c61929b1b43ba
# 8fd248fd36ee4514901f82650193bfc7
# 68be52dce8e54c8ca7d1818dd7374bea
# a8ed8dfa557642fe8789ed9a2ca1ef7b
msgid "Bases: :class:`spack.error.SpecError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.UnsatisfiableSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.spec.UnsatisfiableSpecError:1
# add50eff87824c26a139e31279b6a249
# 993f04e283c843b48770fdcf05523bf9
msgid "Raised when a spec conflicts with package constraints. Provide the requirement that was violated when raising."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.UnsupportedPlatformError:1
# e3fcc5bd85374ba28f02037a6bbdc342
msgid "Raised by packages when a platform is not supported"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/error.py:docstring of spack.error.debug:1
# 0628444c969b42e282893880ba175e9a
msgid "whether we should write stack traces or short error messages this is module-scoped because it needs to be set very early"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:137
# f514033c176a44c5b5607e4eff608ec5
msgid "spack.extensions module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions:1
# 1038adf732c1463b836461f4a0915153
msgid "Service functions and classes to implement the hooks for Spack's command extensions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.extension_name:1
# 394db2b4ed6748f1b24712db29149be0
msgid "Returns the name of the extension in the path passed as argument."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.extension_name:3
# 1f946081f14449599b547cb2d06b7d2c
msgid "path where the extension resides"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.extension_name:6
# c24fe2230a9d4e90ac76715297e47560
msgid "The extension name or None if path doesn't match the format for Spack's extension."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.get_command_paths:1
# 67d9b4eefc8b452cbd3f8a809c4376e3
msgid "Return the list of paths where to search for command files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.get_module:1
# d0842c3a0bac431dbefc7b7c3cf28aa6
msgid "Imports the extension module for a particular command name and returns it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.get_module:4
# d991c4e523494cc6abe34107431759e6
msgid "name of the command for which to get a module (contains ``-``, not ``_``)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.get_template_dirs:1
# 805e15583782419b801ebc406b38cdc0
msgid "Returns the list of directories where to search for templates in extensions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.load_command_extension:1
# a7a3313c38d4421da4dc312699bab52e
msgid "Loads a command extension from the path passed as argument."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.load_command_extension:3
# f181847365504c15bdd126648d3da3a6
msgid "name of the command"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.load_command_extension:5
# 2e4049eb25404e89a90c2baebf160939
msgid "base path of the command extension"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.load_command_extension:8
# ecbb057238f34c1194b814f7e59430df
msgid "A valid module object if the command is found or None"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.path_for_extension:1
# cc3c6e05ac244c0b8daeee02facf6eff
msgid "Return the test root dir for a given extension."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.path_for_extension:3
# 59c21ad66fa4499db8477fe8c25e46c7
msgid "name of the extension to test"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.path_for_extension:5
# ce404a59faf946f7866d05cc86e08d93
msgid "paths where the extensions reside"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/extensions.py:docstring of spack.extensions.path_for_extension:7
# e50c851881fa477b835a0ebb232aaf29
msgid "Root directory where tests should reside or None"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:145
# ab836358f7454f77bdc5780e2964e5a2
msgid "spack.fetch\\_strategy module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:1
# 9cd3a280331347d8b2a97ab18b277cfe
msgid "Fetch strategies are used to download source code into a staging area in order to build it.  They need to define the following methods:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:4
# 5159946dfac445f3b5336655c22cef86
msgid "fetch()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:5
# 82c85ac67de74a06adcbd950f273b712
msgid "This should attempt to download/check out source from somewhere."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:7
# 95e219959fba4334907b63edd6565056
msgid "check()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:7
# 20b82b38324b44a9875e0425d128bee3
msgid "Apply a checksum to the downloaded source code, e.g. for an archive. May not do anything if the fetch method was safe to begin with."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:9
# 892d3493b1a24cc9afc4c36fd5b35e24
msgid "expand()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:10
# e3abd528fe5a499c9f0f4336fabede56
msgid "Expand (e.g., an archive) downloaded file to source."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:13
# 10c94673435f4562a5a57d3ed52b8af4
msgid "reset()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:12
# b45e9a89950a4af4868a8e952820f7f8
msgid "Restore original state of downloaded code.  Used by clean commands. This may just remove the expanded source and re-expand an archive, or it may run something like git reset --hard."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:17
# 772e4ac5767c48c59ae1e9bd9dfc6806
msgid "archive()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy:16
# cf4828e440234e3abcd861af281774a5
msgid "Archive a source directory, e.g. for creating a mirror."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.CacheURLFetchStrategy:1
# 2ce959f3b7854f26b46624aaa7c3e763
msgid "Bases: :class:`spack.fetch_strategy.URLFetchStrategy`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.CacheURLFetchStrategy:1
# c63caf2e13bc45b292cc1b6f0465d2fa
msgid "The resource associated with a cache URL may be out of date."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.CacheURLFetchStrategy.fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy.fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.fetch:1
# a196cc17eaed4fc9b44393b51f28eafa
# 533f637e48d642b3b0ed19af803d2b0c
# b929eae83d4e4307af89f4c03a39cf84
# e8e2bbd187b14810b79007d369d37cb8
# 2a706bcb219e474db9e3a7ec61c222d7
# 5daaefc0177844a59b58ba969fa3347f
# 3cd9dbfe9ede4e63a9fbb23cbfde7319
msgid "Fetch source code archive or repo."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.CacheURLFetchStrategy.fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy.fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.fetch:3
# 15205389d5cf4f4d860b2f33a927c2f1
# 8b10e1a892954d90be7e07156fba68ee
# 191c663edfdb42e397ca3db8f042025d
# c8bb312927af4cc6bfab72a3db237561
# cdedaee058114486b0c4bea1c8559685
# 644b33b942f741efa53258c00b87a7cf
# b11c0b86520242d388a3b0057b922970
msgid "True on success, False on failure."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.ChecksumError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.ExtrapolationError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FailedDownloadError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetcherConflict:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.InvalidArgsError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.NoArchiveFileError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.NoCacheError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.NoDigestError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.NoStageError:1
# 1c886d2a66d04933a39d58c6f1c099ad
# 94ef5d4cc6cc428c95cef8ebd42d573d
# b0b276d48f8c4e23904cb999aba8d54c
# 780c9e478d104ce7b36f3ae5092ce379
# b40bb9fb27ec4bfda68cf3a30fdbdb2e
# 00b3874f736d4620a800832d2460153b
# 92f5269703e54b3ebca740b4b5d01d8a
# 994d844948d941528fda3a5487b7f827
# a617571e83c34527b24c05d9ccf514f2
msgid "Bases: :class:`spack.fetch_strategy.FetchError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.ChecksumError:1
# 0ebf59266b684253bb1cadaa4ded081b
msgid "Raised when archive fails to checksum."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.ExtrapolationError:1
# d07890b3ffdf4984b704bad4e0731f5c
msgid "Raised when we can't extrapolate a version for a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FSMeta:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.ContextMeta:1
# faabb71fe3ea4c2da9dd93b15f274002
# 37be14cad6834ecca5ddd1ad01457e3a
msgid "Bases: :class:`type`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FSMeta:1
# f4ac36908ae4416aaaeac1d565125da1
msgid "This metaclass registers all fetch strategies in a list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FailedDownloadError:1
# 382f0bab5a1845159d0396d3da0687eb
msgid "Raised wen a download fails."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchError:1
# 89e4d91d04f1453f94f5c32cd519ac2a
msgid "Superclass fo fetcher errors."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy:1
# 62b2556617e04ba4a827bf6a81880d27
msgid "Superclass of all fetch strategies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.archive:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.archive:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy.archive:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.archive:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.archive:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.VCSFetchStrategy.archive:1
# b23bc885e7c94993b701e27dae38b49e
# f3083cdde6704a1c9641f6775c91c160
# c6e0689cb7f6425f87ba7e4f49ff5e08
# c0c9136ee69a4cabbdda0a9e5aef4de4
# 4f3ae79a27504eb3a510a78d76bf339c
# 188728c02d454aa5b910790db2ecee66
msgid "Create an archive of the downloaded data for a mirror."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.archive:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.archive:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy.archive:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.archive:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.archive:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.VCSFetchStrategy.archive:3
# 03df8e27e13c4087b2f8a17a0b0697c0
# 32f6226e56384acb96edc221a965e183
# fc0d7f16a34a4229919091dd66caf5b2
# 56892cfbb3cd4d02be32a1a810beeb8d
# c01750cbd2fb4ecbb3db398b357b4d6f
# 75df4b5bb1d94e989a3f94689917d632
msgid "For downloaded files, this should preserve the checksum of the original file. For repositories, it should just create an expandable tarball out of the downloaded repository."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.cachable:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.cachable:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.cachable:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.cachable:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.cachable:1
# 2a2078d1ef7a460893a1243ba281e016
# 5c74242cd23f4ab0bb31644da6fb1e10
# 03917d72800445619aadd1d41ad63140
# 979f3d867b174d45adbe4bab22dca2ef
# 27a01684a2a9429a88a6a1aabe041aab
msgid "Whether fetcher is capable of caching the resource it retrieves."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.cachable:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.cachable:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.cachable:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.cachable:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.cachable:3
# ce35b2ccc7b24cc89ec5ba2f5173af32
# d1bb780cecb04d07bf692ba73a3a42ac
# 5f21de9fa1fa41f4a3f2d06312efbabc
# 90a21e655b5e473daac3a523ac91475c
# bd8c7bdab8df4d8493ca4f21381fd4f2
msgid "This generally is determined by whether the resource is identifiably associated with a specific package version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.cachable:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.cachable:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.cachable:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.cachable:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.cachable:6
# 604fcf3347bf40c2a665d272dfab847b
# c06f1423bff348c6a2b519a3e3901be0
# dafd89d0878146d0b89debde5c8e01d2
# f745e84e81f645fc821986677f1fc5fa
# 6538873ecc2744939e80ccfcf6024bfa
msgid "True if can cache, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.check:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.VCSFetchStrategy.check:1
# 4c9ac202dd78415bb823428a50495ebf
# cc546c2cb98747ab9080be2b086b6e32
msgid "Checksum the archive fetched by this FetchStrategy."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.expand:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.expand:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.VCSFetchStrategy.expand:1
# ea69a99b1194475cbcfba6da48eb8551
# 6a6add2f9ec84382ac9b5a640869fefe
# bce93f3209164bf496d260f1d14aad69
msgid "Expand the downloaded archive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.optional_attrs:1
# aac4372d819b4a99959bd2f9d5c29b57
msgid "classes have multiple ``url_attrs`` at the top-level."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.optional_attrs:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.hg:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.fullname:0
# 335b61d759c24ca7ae15bbb857f9dfe9
# 7a78112fdd13431eafb6f5d221867fbd
# cd47c01e971f42649da7b7a895bb0f22
msgid "type"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.optional_attrs:3
# edbf65f015564352a108635f0e0f4418
msgid "Optional attributes can be used to distinguish fetchers when"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.reset:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.reset:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy.reset:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.reset:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.reset:1
# 57552c5ab12b4315af94ef465bf85b64
# e9f4decf2d644309b6333c667295bea7
# 99be40f0bd174e499a6c3e9628eaef71
# 90862754d9334ca29f0169d9969b0c26
# 792102b678654b818b3115e7eabff83a
msgid "Revert to freshly downloaded state."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.reset:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.reset:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy.reset:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.reset:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.reset:3
# 3c9391c48a6e4556addeb4827f141218
# cb19349e47014a3ab48974498f1fda57
# 3ef2ffeda08d4b16b2a86d7fef2d7cca
# a1a8e5e75931408da879a825dfe67f11
# 7cb0c30eed8447ee884bb4cfba199fd9
msgid "For archive files, this may just re-expand the archive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.set_stage:1
# 6d5100511a9244c3bae21a5ec8be44de
msgid "This is called by Stage before any of the fetching methods are called on the stage."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.source_id:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.source_id:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.source_id:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.source_id:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.source_id:1
# 913d53141e3c46b491d072ba90799361
# e6fbd9c5a0b04ddc94fc29c07d305ee0
# fcf5df08becd4fb9aba667c2d80e4060
# fe9833301add46ff8390a9b3bb8ed916
# 3f571aac5fd5405b9b6289363c820a0c
msgid "A unique ID for the source."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.source_id:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy.source_id:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.source_id:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy.source_id:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.source_id:3
# 844d10e96e8a4b97840f1b3a84470fba
# 18f082e7304f4f8cae9c179c70b865d2
# 07f85ff483364ea4a58ab9e60e7ab6f8
# 19876cddc17b47b4ad34826ed0d1fa2e
# fcf9be6ff04d40fdbc034dbf8a80b8b0
msgid "The returned value is added to the content which determines the full hash for a package using `str()`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetchStrategy.url_attr:1
# 6f80e04a3a884f39983a598c9b4fe591
msgid "The URL attribute must be specified either at the package class level, or as a keyword argument to ``version()``.  It is used to distinguish fetchers for different versions in the package DSL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.FetcherConflict:1
# 66bf8dd25f96482b9a29a2c2575a105b
msgid "Raised for packages with invalid fetch attributes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy:1
# aea6ddbca07848f18c40c34529e7e47f
# 51c5cc1453f94b9388610c511c19a149
# c6331b3ffe6a42db8df92da055ae7164
# e6fe854f3e044e19b3a83260e64d3394
msgid "Bases: :class:`spack.fetch_strategy.VCSFetchStrategy`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:1
# 7dc7032751d94bb0814ac22f1ca1e4b0
msgid "Fetch strategy that gets source code from a git repository. Use like this in a package:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:4
# 94927b24300d46f98749457c4a99e840
msgid "version('name', git='https://github.com/project/repo.git')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:6
# e9794bc7b4b840ecbd2f394e225113af
msgid "Optionally, you can provide a branch, or commit to check out, e.g.:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:8
# 20e5e3b0359e4709a771bd056f1a3682
msgid "version('1.1', git='https://github.com/project/repo.git', tag='v1.1')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:10
# f8c760f0ee8a4cbcbf5a40a8be798c90
msgid "You can use these three optional attributes in addition to ``git``:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:12
# 7cf5d10ab19745c4ada2e10ce7b4edd9
msgid "``branch``: Particular branch to build from (default is the"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:13
# 3e8daa84c34343a886debdff6c88d8f0
msgid "repository's default branch)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:14
# 0ba9fd86378a4ae1a1ee64729fb84b36
msgid "``tag``: Particular tag to check out"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GitFetchStrategy:15
# e9e39fe24c2441d2a391269a60968419
msgid "``commit``: Particular commit hash in the repo"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy:1
# 6feff3452f3b4279829aebfaff617a2a
msgid "Fetch strategy that employs the `go get` infrastructure."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy:3
# 377b056e4cc8403a906a80420a2c52d5
msgid "Use like this in a package:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy:6
# aca54e1690f841eeb8f8a88fd836754a
msgid "version('name',"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy:6
# 698ec9e620f84b5291e17dc67a051c4a
msgid "go='github.com/monochromegane/the_platinum_searcher/...')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.GoFetchStrategy:8
# 6052a222f9a740fdab99016c37b48dcf
msgid "Go get does not natively support versions, they can be faked with git"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy:1
# b92c84dd09d44fe4b23733b6ebd38b06
msgid "Fetch strategy that gets source code from a Mercurial repository. Use like this in a package:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy:4
# 22b59434820740c48409caf724b784d6
msgid "version('name', hg='https://jay.grs.rwth-aachen.de/hg/lwm2')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy:6
# 54fe5b91c0334c7dbb6724a92ae9f35a
msgid "Optionally, you can provide a branch, or revision to check out, e.g.:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy:9
# 7cfd0ceec32f46e4a3870de30c91b881
msgid "version('torus',"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy:9
# b30d6b79ce824b6d9bda391f81079a8c
msgid "hg='https://jay.grs.rwth-aachen.de/hg/lwm2', branch='torus')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy:11
# 9e9325983ce941e9a7433affbf7b49b3
msgid "You can use the optional 'revision' attribute to check out a branch, tag, or particular revision in hg.  To prevent non-reproducible builds, using a moving target like a branch is discouraged."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy:16
# 1c7966119a9440749ce8e3e3d83f26e3
msgid "``revision``: Particular revision, branch, or tag."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.hg:1
# 9970938b524f4e0b9ac36fd9c9f67f8a
msgid "The hg executable :rtype: Executable"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.HgFetchStrategy.hg:4
# 0738fbb5e0ef482e95e0a483be3bbbb6
msgid "returns"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.InvalidArgsError:1
# 19ad806ef52a4f6cb282fc20d7bc7d4d
msgid "Raised when a version can't be deduced from a set of arguments."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.NoArchiveFileError:1
# ed2217c518eb47a6aea5be6fc494d361
msgid "\"Raised when an archive file is expected but none exists."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.NoCacheError:1
# 8b7db11190a347e79028c04a6ee882f8
msgid "Raised when there is no cached archive for a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.NoDigestError:1
# 59ca19a63e5249658a6e288f1e20e6e1
msgid "Raised after attempt to checksum when URL has no digest."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.NoStageError:1
# 8efaafd110d74b1985f66bce5e4ea832
msgid "Raised when fetch operations are called before set_stage()."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy:1
# edddfea1f63f4517ba7dc840ad93eab9
msgid "Fetch strategy that gets source code from a subversion repository. Use like this in a package:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy:4
# 0c04aac0b66d420a9b6f18a39fa9bc7f
msgid "version('name', svn='http://www.example.com/svn/trunk')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy:6
# b2faccb3ff8147d785db06b37884e903
msgid "Optionally, you can provide a revision for the URL:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy:10
# 7e04823f69bf4759b4abe304602ca96b
msgid "version('name', svn='http://www.example.com/svn/trunk',"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.SvnFetchStrategy:9
# 3d9b2fded9134a7288d5a9898c0bd672
msgid "revision='1641')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.VCSFetchStrategy:1
# 2b61f9c127bd4e7d95acf661163ca260
# c4c6ce2fbdcd44038e42ef054810f7e6
msgid "Bases: :class:`spack.fetch_strategy.FetchStrategy`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy:1
# da7fc929d4bc458aa84ff0ae103a13f0
msgid "FetchStrategy that pulls source code from a URL for an archive, checks the archive against a checksum,and decompresses the archive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.archive:1
# 5eb52d579d4d48e4a00ae4eb4dc493b4
msgid "Just moves this archive to the destination."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.archive_file:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.archive_file:1
# eb9484cd174f4a5ba4b09f582063c990
# 610a32a226ba4a21836930f542cef1b3
msgid "Path to the source archive within this stage directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.check:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.check:1
# 8e40c9b1980e46778f90490115f2583e
# 2c2318c8c5cf486dae022596c2c620e7
msgid "Check the downloaded archive against a checksum digest. No-op if this stage checks code out of a repository."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.URLFetchStrategy.reset:1
# 35d259bb160446de98fdbd2e6596ec61
msgid "Removes the source path if it exists, then re-expands the archive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.VCSFetchStrategy:1
# c8882ca1a28e4bac9e2727a514fe77a5
msgid "Superclass for version control system fetch strategies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.VCSFetchStrategy:3
# 5adab26e8888414b97dad73f71f3a35e
msgid "Like all fetchers, VCS fetchers are identified by the attributes passed to the ``version`` directive.  The optional_attrs for a VCS fetch strategy represent types of revisions, e.g. tags, branches, commits, etc."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.VCSFetchStrategy:8
# 9ec1eda199ed4de2b32caab0b9147ad3
msgid "The required attributes (git, svn, etc.) are used to specify the URL and to distinguish a VCS fetch strategy from a URL fetch strategy."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.all_strategies:1
# 94c0ea580d1c4e18b816fa398476f636
msgid "List of all fetch strategies, created by FetchStrategy metaclass."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.check_pkg_attributes:1
# 9ff679bb482c4366a408972bbe3afec8
msgid "Find ambiguous top-level fetch attributes in a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.check_pkg_attributes:3
# ec70f6859025494890f5f9047b17b970
msgid "Currently this only ensures that two or more VCS fetch strategies are not specified at once."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.for_package_version:1
# cda917d7300542d5ba48b53699dc6323
msgid "Determine a fetch strategy based on the arguments supplied to version() in the package description."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:1
# f3d10c7e47ab484f8b0f8356f15492df
msgid "Construct an appropriate FetchStrategy from the given keyword arguments."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:3
# f9bb4292c9a944208f50506b2efd4944
msgid "dictionary of keyword arguments, e.g. from a ``version()`` directive in a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:6
# 82aa8329d03240b48d55b8604e177d66
msgid "The fetch strategy that matches the args, based     on attribute names (e.g., ``git``, ``hg``, etc.)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:8
# eccd5257c4a54ab3a0524fb794a0da5b
msgid "The fetch strategy that matches the args, based"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:9
# f8f9b1a56b3e486da0ecdf3d2c8eee97
msgid "on attribute names (e.g., ``git``, ``hg``, etc.)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_kwargs:12
# bea92ee1129a44199dc2589ec1ff9a83
msgid ":exc:`FetchError` -- If no ``fetch_strategy`` matches the args."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_list_url:1
# 5f5f88c193974fc2ac05bf5de5a215a5
msgid "If a package provides a URL which lists URLs for resources by version, this can can create a fetcher for a URL discovered for the specified package's version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_url:1
# f3a5292fb2a44038836c6fd17764432a
msgid "Given a URL, find an appropriate fetch strategy for it. Currently just gives you a URLFetchStrategy that uses curl."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_url:4
# 101e4537501a4f27b0bfe1c7ba43d6ca
msgid "TODO: make this return appropriate fetch strategies for other"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/fetch_strategy.py:docstring of spack.fetch_strategy.from_url:5
# e3eb271b04da4b75ad757914d9c00bf2
msgid "types of URLs."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:153
# 4b4f5b1a39704805b656ed7a3c33a969
msgid "spack.filesystem\\_view module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView:1
# f3611a667cdf47089ef3a0a3d95050ce
msgid "Governs a filesystem view that is located at certain root-directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView:3
# 4fbf865ddfe7444c9e9826ef05bafc79
msgid "Packages are linked from their install directories into a common file hierachy."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView:6
# 77fef7769ef04223aad5178efaae2c12
msgid "In distributed filesystems, loading each installed package seperately can lead to slow-downs due to too many directories being traversed. This can be circumvented by loading all needed modules into a common directory structure."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.add_extension:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.add_extension:1
# c9d1215769a54185b9ac0301c75f983f
# 0f59290e7c614053ae53b9d7926d899e
msgid "Add (link) an extension in this view. Does not add dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.add_specs:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.add_specs:1
# 8b4a1d13355343b0a3be47508a6d85ef
# 6ed25d74e74342b096a19d12bc0c7b6d
msgid "Add given specs to view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.add_specs:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.add_specs:3
# 25b3acb8df044ff18ba2183c83878350
# 7972030850b445a681fa9fe68426e935
msgid "The supplied specs might be standalone packages or extensions of other packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.add_specs:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.add_specs:6
# 3170096b2dbc44a48c880e122be92709
# 67135eace84c4237a1666bbba5aa700c
msgid "Should accept `with_dependencies` as keyword argument (default True) to indicate wether or not dependencies should be activated as well."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.add_specs:10
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.remove_specs:14
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.add_specs:10
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.remove_specs:14
# 2bbca11046a0415bb88a8c6273103b43
# 343ad53e8dda4e099204d35f74cfae85
# 0ea2c967ae0046ba86b1e138f2da455a
# ce134e3502184301818e590c247b43df
msgid "Should except an `exclude` keyword argument containing a list of regexps that filter out matching spec names."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.add_specs:13
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.add_specs:13
# d48e68fbeb8046b6aa064356eb0b0194
# 81b38281ed3a40f6b4a8912ac08ff8e8
msgid "This method should make use of `activate_{extension,standalone}`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.add_standalone:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.add_standalone:1
# 49de03feb7dc48d49531e25b80834fce
# 9c3d4455c12547f8be9505518f4bbd27
msgid "Add (link) a standalone package into this view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.check_added:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.check_added:1
# 10efb8980bd0430b907c2263b8079f2a
# d4463824ee71475abb9fe6f5aa246821
msgid "Check if the given concrete spec is active in this view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.get_all_specs:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_all_specs:1
# 9fee232c43d54b1fae273c188e88b89c
# 43f103a2bff9422d92a6a9f71c71be48
msgid "Get all specs currently active in this view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.get_projection_for_spec:1
# 97ee4e4640f34713a9ccfb9161720efd
msgid "Get the projection in this view for a spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.get_spec:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_spec:1
# f89052949864421a960f5c45be15aa98
# c589fc4849764728a9356381655abee9
msgid "Return the actual spec linked in this view (i.e. do not look it up in the database by name)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.get_spec:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_spec:4
# ded09f735aab46b4a066f71702b3f731
# 7ff00efb268340a786272444cdeb49c5
msgid "`spec` can be a name or a spec from which the name is extracted."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.get_spec:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_spec:6
# 52db73a1c2be4f2186c236d8db70686d
# 7d4b663eb6a1426380f92d6bda265d91
msgid "As there can only be a single version active for any spec the name is enough to identify the spec in the view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.get_spec:9
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_spec:9
# 4f8097d2cf234a0b83155ff117389222
# 5af14ce2a217439f8e57ac264441de25
msgid "If no spec is present, returns None."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.print_status:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.print_status:4
# dc28f89815c243bb950f870ac750d22b
# 90b4dff4b06e4c25b4b7d54c5b6b6420
msgid "Print a short summary about the given specs, detailing whether.."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.print_status:2
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.print_status:2
# dc796d574ce54e4196b9a83ab821c44a
# 25c5c9da78ed429f820669052c00da51
msgid "..they are active in the view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.print_status:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.print_status:3
# 1f84a6c338e14ec3989bd90a1bd30748
# b660292fa31a41f189c438c90dc6f6e0
msgid "..they are active but the activated version differs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.print_status:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.print_status:4
# eca77fda4ec34655b499a2ac3c04c17e
# 27529244ea864e2884442f3340aed95b
msgid "..they are not activte in the view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.print_status:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.print_status:6
# 4c4ea5a034d54addaf7a5cad441bc995
# 897edd332c114a5382ac1ea7c671e6e8
msgid "Takes `with_dependencies` keyword argument so that the status of dependencies is printed as well."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.remove_extension:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.remove_extension:1
# 789daece71c24f799a26f47fc18321da
# 38c83ddff8964d1398939aa8ac7e4ca3
msgid "Remove (unlink) an extension from this view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.remove_specs:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.remove_specs:1
# ea0ebde6b5c7477694f83167171b8690
# f51c640c4d26445fa96c18be73f2e251
msgid "Removes given specs from view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.remove_specs:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.remove_specs:3
# 5dc3f286e0e744e38fd94dae23a44168
# 4e17248e3c054bb5ab5837066ebf16d8
msgid "The supplied spec might be a standalone package or an extension of another package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.remove_specs:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.remove_specs:6
# 4fbd6e6748f84245bc82060ef2d6b7a6
# 55233a2ec0ac4e4eb43c59643e0f074b
msgid "Should accept `with_dependencies` as keyword argument (default True) to indicate wether or not dependencies should be deactivated as well."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.remove_specs:10
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.remove_specs:10
# b9922fc0de284e559ac218bb890f9193
# 58c661a373bf44d1ad212438222d662d
msgid "Should accept `with_dependents` as keyword argument (default True) to indicate wether or not dependents on the deactivated specs should be removed as well."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.remove_specs:17
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.remove_specs:17
# 17eb11ffdb1f4ababa62ba193a3a16eb
# 4be1b1eef3cc426aa9df10fbe40cb875
msgid "This method should make use of `deactivate_{extension,standalone}`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.FilesystemView.remove_standalone:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.remove_standalone:1
# a02bb047f10442328244fea76b3d7f54
# 8062d6d7b5e140c38ff420fec973b64b
msgid "Remove (unlink) a standalone package from this view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView:1
# 017f08056b3d4314a6e3dc73d91f81b3
msgid "Bases: :class:`spack.filesystem_view.FilesystemView`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView:1
# e18796700381443ab2f33bc3aa4d6c63
msgid "Filesystem view to work with a yaml based directory layout."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_conflicts:1
# 700a79e08f6349b8a5da78c2cc71fcd1
msgid "Return list of tuples (<spec>, <spec in view>) where the spec active in the view differs from the one to be activated."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_path_meta_folder:1
# ed1d1f87f40043cb85c5f8060da3f6d8
msgid "Get path to meta folder for either spec or spec name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_projection_for_spec:1
# 9aaca0c9668f43ccbcb92cb0d0d14ec0
msgid "Return the projection for a spec in this view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.get_projection_for_spec:3
# 1bd641d15891420782f6a57f127ab955
msgid "Relies on the ordering of projections to avoid ambiguity."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/filesystem_view.py:docstring of spack.filesystem_view.YamlFilesystemView.print_conflict:1
# 544f3165d7a94b008b8b410908d0680e
msgid "Singular print function for spec conflicts."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:161
# 0aad3513801f44b4ab121656365adf49
msgid "spack.graph module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph:1
# 8729e0c51d0544128e1c2928f1173940
msgid "Functions for graphing DAGs of dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph:3
# 2e78f631261649d7be3b9164afdff057
msgid "This file contains code for graphing DAGs of software packages (i.e. Spack specs).  There are two main functions you probably care about:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph:7
# a2b3e342b4984a9b909638213ca7f656
msgid "graph_ascii() will output a colored graph of a spec in ascii format, kind of like the graph git shows with \"git log --graph\", e.g.::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph:33
# 550752e3b9a0403faec1541844bd1e6c
msgid "graph_dot() will output a graph of a spec (or multiple specs) in dot format."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph:36
# e5d0abe2edd74facb94e39a9f7b8c247
msgid "Note that ``graph_ascii`` assumes a single spec while ``graph_dot`` can take a number of specs as input."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.topological_sort:1
# e15a5aa2b43f4dce8e71964a61ba8d9f
msgid "Topological sort for specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.topological_sort:3
# 1f3faa1074904549a80d5972e4e9ac4c
msgid "Return a list of dependency specs sorted topologically.  The spec argument is not modified in the process."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.AsciiGraph.write:1
# e7d11864b96d4d3aa83b0c719c9b753a
msgid "Write out an ascii graph of the provided spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.AsciiGraph.write:3
# 86a7ccdb8c784e4f9c9404b02427f880
msgid "Arguments: spec -- spec to graph.  This only handles one spec at a time."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.AsciiGraph.write:6
# 72f5a23bf0834f4792f955ad750d2b7f
msgid "Optional arguments:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.AsciiGraph.write:8
# 620309741f9f40448530509aab91125d
msgid "out -- file object to write out to (default is sys.stdout)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.AsciiGraph.write:10
# 307ceb92f1554348a91dc2f8d8f4dfca
msgid "color -- whether to write in color.  Default is to autodetect"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.AsciiGraph.write:11
# ae638141611e4c5fb5b7083523b3ea00
msgid "based on output file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.graph_dot:1
# 8cd64aaca215482ab91ea1a2a4540785
msgid "Generate a graph in dot format of all provided specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/graph.py:docstring of spack.graph.graph_dot:3
# 15cabc3f15604a3dbaecfa1ee310463f
msgid "Print out a dot formatted graph of all the dependencies between package.  Output can be passed to graphviz, e.g.:"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:169
# 035d4f5d16484587b2e5451d2ea64b56
msgid "spack.main module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main:1
# 18205b515d0f435e997763455d658323
msgid "This is the implementation of the Spack command line executable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main:3
# 1c0de84db8394a0db45adc36d3317242
msgid "In a normal Spack installation, this is invoked from the bin/spack script after the system path is set up."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackArgumentParser:1
# 3e0f86f5ab9a4b4292d29a6cdb403db7
msgid "Bases: :class:`argparse.ArgumentParser`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackArgumentParser.add_command:1
# c4777a3c9f0542c881015e1109171942
msgid "Add one subcommand to this parser."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackArgumentParser.add_subparsers:1
# 37f945d8973e4003a378bf01100eed6b
msgid "Ensure that sensible defaults are propagated to subparsers"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackArgumentParser.format_help_sections:1
# 9745873e3e0b44498cc32b2b3f0fd997
msgid "Format help on sections for a particular verbosity level."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackArgumentParser.format_help_sections:3
# d77d4b3219c84048a98bb5e03c871779
msgid "'short' or 'long' (more commands shown for long)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackCommand:1
# 80f0226dc05b48f9b32d5c690f1ff3d1
msgid "Callable object that invokes a spack command (for testing)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackCommand:3
# 3bc5ae669b724cfe970c8eba6bb67f98
msgid "Example usage::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackCommand:8
# 6c98bd72ea9f442798b7958c58ca3e74
msgid "Use this to invoke Spack commands directly from Python and check their output."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackCommandError:1
# 2bb38a960be44e4cba2e0d3db6aea48d
msgid "Raised when SpackCommand execution fails."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.SpackHelpFormatter:1
# 15acd273c71849bc8e26d65b95669933
msgid "Bases: :class:`argparse.RawTextHelpFormatter`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.add_all_commands:1
# 2e97b56769a040ff89db8f3dca5d674f
msgid "Add all spack subcommands to the parser."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.aliases:1
# 8fed800c8acc44e9abedf0146e6e7795
msgid "top-level aliases for Spack commands"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.allows_unknown_args:1
# 95fa44ef0f2b4db4b5a2c087d98b7152
msgid "Implements really simple argument injection for unknown arguments."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.allows_unknown_args:3
# 689c929bf4984086a04e752f951f39dd
msgid "Commands may add an optional argument called \"unknown args\" to indicate they can handle unknonwn args, and we'll pass the unknown args in."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.index_commands:1
# 537fe435f4744332b5dfae93be27fd77
msgid "create an index of commands by section for this help level"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.intro_by_level:1
# 74a87877754945478af23c726119d9d9
msgid "intro text for help at different levels"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.levels:1
# 98945060429f43d38d930a8f5436f8bf
msgid "help levels in order of detail (i.e., number of commands shown)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.main:1
# 2ac831984a51470bbc10ebbf477d3820
msgid "This is the entry point for the Spack command."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.main:3
# ec4507faedb1470a9e059c9d9b109fd5
msgid "command line arguments, NOT including the executable name. If None, parses from sys.argv."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.make_argument_parser:1
# b2ea5c9e75064101b72773a85a7004f0
msgid "Create an basic argument parser without any subcommands added."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.options_by_level:1
# 008f89317eef4f369e29a96f000a49b4
msgid "control top-level spack options shown in basic vs. advanced help"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.print_setup_info:1
# b4d3d711c8894f21acf2041d1042c59c
msgid "Print basic information needed by setup-env.[c]sh."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.print_setup_info:3
# 84df29fddcf8414c96c1fa8d2e63ed4e
msgid "list of things to print: comma-separated list of 'csh', 'sh', or 'modules'"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.print_setup_info:7
# 0ac3a7ce3e37419a80f87c3c2b6234c6
msgid "This is in ``main.py`` to make it fast; the setup scripts need to invoke spack in login scripts, and it needs to be quick."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.required_command_properties:1
# 64509a7772dd4ff39450a7a16f61579f
msgid "Properties that commands are required to set."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.section_descriptions:1
# f7546e7ac0c94d1c8fcd7010f4672a1c
msgid "Longer text for each section, to show in help"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.section_order:1
# 948f9cc49ea3424992c5757e7a848c16
msgid "preferential command order for some sections (e.g., build pipeline is in execution order, not alphabetical)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.set_working_dir:1
# e179ae9d4ad143f1b99ac67bcf94b3e3
msgid "Change the working directory to getcwd, or spack prefix if no cwd."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.setup_main_options:1
# 7a341d0f3a6c41289910494d52a9a2d1
msgid "Configure spack globals based on the basic options."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.spack_working_dir:1
# f6b230825d404d90b8a6d3aaed0c5a26
msgid "Recorded directory where spack command was originally invoked"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/main.py:docstring of spack.main.stat_names:1
# b04698986cbf4a58a77e91076c5344cf
msgid "names of profile statistics"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:177
# 2fc5478ceeca435b8b0a97872774c62d
msgid "spack.mirror module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror:1
# fb8aeea5e83c459b985bd89fa1d1afe9
msgid "This file contains code for creating spack mirror directories.  A mirror is an organized hierarchy containing specially named archive files.  This enabled spack to know where to find files in a mirror if the main server for a particular package is down.  Or, if the computer where spack is run is not connected to the internet, it allows spack to download packages directly from a mirror (e.g., on an intranet)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.MirrorError:1
# 15ab321935fd4c3b89d20f74afbf3dd2
msgid "Superclass of all mirror-creation related errors."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:1
# 7a8bbfec1c3443598e36c471cd2cc485
msgid "Create a directory to be used as a spack mirror, and fill it with package archives."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:4
# aa443e7708b4422c9db0cd40c4081873
msgid "Path to create a mirror directory hierarchy in."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:5
# 373372dfb4ce4fa9bf08ed26fe7674cc
msgid "Any package versions matching these specs will be added             to the mirror."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:7
# 619e19a3de414c8d8eb738b3149fee9e
msgid "Max number of versions to fetch per spec,             (default is 1 each spec)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:14
# 02f9036ec325458093ba78d706012660
msgid "Return Value:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:10
# 41077b33fc2b4ffa9fcdf1fc021eac3f
msgid "Returns a tuple of lists: (present, mirrored, error)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:12
# 07d560a2af3947dba7d43d5c807900bc
msgid "present:  Package specs that were already present."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:13
# 92d2a761664a4d63996c2a7ca9324af5
msgid "mirrored: Package specs that were successfully mirrored."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:14
# 13e2d08e73704157984826d86d5a44b6
msgid "error:    Package specs that failed to mirror due to some error."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.create:16
# d4b495626f36472fbb6b918babfc6a28
msgid "This routine iterates through all known package versions, and it creates specs for those versions.  If the version satisfies any spec in the specs list, it is downloaded and added to the mirror."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.get_matching_versions:1
# 33d3a292d10b4e22a54f7dcbd3bb0998
msgid "Get a spec for EACH known version matching any spec in the list. For concrete specs, this retrieves the concrete version and, if more than one version per spec is requested, retrieves the latest versions of the package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.mirror_archive_filename:1
# eb1d49ca623047f0982a41b54aebd8e6
msgid "Get the name of the spec's archive in the mirror."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.mirror_archive_path:1
# f4d13619204e4a55939e32bace35ad75
msgid "Get the relative path to the spec's archive within a mirror."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.suggest_archive_basename:1
# 4c9c9dce8aaa4b8c861478577bfd5894
msgid "Return a tentative basename for an archive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mirror.py:docstring of spack.mirror.suggest_archive_basename:3
# d9d79f32c8604b9390813f3b7c252bf0
msgid ":exc:`RuntimeError` -- if the name is not an allowed archive type."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:185
# 0e02e1cff30b400199fa3716fef2c7ec
msgid "spack.mixins module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins:1
# 47c33bbfcd5c4d608de39af2ea4080d3
msgid "This module contains additional behavior that can be attached to any given package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:1
# c0ff52b66e85455fb0b5ab317f847be0
msgid "Substitutes any path referring to a Spack compiler wrapper with the path of the underlying compiler that has been used."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:4
# 9b03ac9a623b4c7f90a04f50ab53d5e0
msgid "If this isn't done, the files will have CC, CXX, F77, and FC set to Spack's generic cc, c++, f77, and f90. We want them to be bound to whatever compiler they were built with."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:8
# beec8e1f84834d0abfcc9b2b037ca883
msgid "files to be filtered relative to the search root (which is, by default, the installation prefix)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:10
# b26c730156f34b75a7b3bae5a9835471
msgid "allowed keyword arguments  after     specifies after which phase the files should be     filtered (defaults to 'install')  relative_root     path relative to prefix where to start searching for     the files to be filtered. If not set the install prefix     wil be used as the search root. **It is highly recommended     to set this, as searching from the installation prefix may     affect performance severely in some cases**.  ignore_absent, backup     these two keyword arguments, if present, will be forwarded     to ``filter_file`` (see its documentation for more information     on their behavior)  recursive     this keyword argument, if present, will be forwarded to     ``find`` (see its documentation for more information on the     behavior)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:10
# 3bb3a9963d8d4b2f97b45fc1d032f76c
msgid "allowed keyword arguments"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:14
# d588c704206d44bdba51bfce52210830
msgid "after"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:13
# 834e4c4853f947e58401e07d1f7ac475
msgid "specifies after which phase the files should be filtered (defaults to 'install')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:21
# 2d49a37d9bb2403d9b6621951ede8267
msgid "relative_root"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:17
# da4bec3652f44299a3bd60180dffa0c1
msgid "path relative to prefix where to start searching for the files to be filtered. If not set the install prefix wil be used as the search root. **It is highly recommended to set this, as searching from the installation prefix may affect performance severely in some cases**."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:26
# 39b0c2a7a64a4c9f87e443ad21c7c988
msgid "ignore_absent, backup"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:24
# 21d65c7b16894aae92103ae3ffcf4f1f
msgid "these two keyword arguments, if present, will be forwarded to ``filter_file`` (see its documentation for more information on their behavior)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:30
# 09f24b9c7a4c4f6284367ee946e8311f
msgid "recursive"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/mixins.py:docstring of spack.mixins.filter_compiler_wrappers:29
# 6465e97f693548879f6279e0916bae26
msgid "this keyword argument, if present, will be forwarded to ``find`` (see its documentation for more information on the behavior)"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:193
# 82b5efa65fe042d3a6773a4c0a575849
msgid "spack.multimethod module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod:1
# fd984bc8018b43c19bb8c1e8dee97d71
msgid "This module contains utilities for using multi-methods in spack. You can think of multi-methods like overloaded methods -- they're methods with the same name, and we need to select a version of the method based on some criteria.  e.g., for overloaded methods, you would select a version of the method to call based on the types of its arguments."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod:8
# 832fd31e0d5046deafc6d58caa42c2f3
msgid "In spack, multi-methods are used to ease the life of package authors.  They allow methods like install() (or other methods called by install()) to declare multiple versions to be called when the package is instantiated with different specs.  e.g., if the package is built with OpenMPI on x86_64,, you might want to call a different install method than if it was built for mpich2 on BlueGene/Q.  Likewise, you might want to do a different type of install for different versions of the package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod:17
# e3d2e22149e049178878a650b1ea946c
msgid "Multi-methods provide a simple decorator-based syntax for this that avoids overly complicated rat nests of if statements.  Obviously, depending on the scenario, regular old conditionals might be clearer, so package authors should use their judgement."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.MultiMethodError:1
# 9fed6e6deeb341e1bb52a8c1df176f32
msgid "Superclass for multimethod dispatch errors"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.NoSuchMethodError:1
# c430c7d962ff4eb1bcf02eebe5fd5867
msgid "Raised when we can't find a version of a multi-method."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:1
# 35626a0ec58b4be79cb0334159024a8c
msgid "This implements a multi-method for Spack specs.  Packages are instantiated with a particular spec, and you may want to execute different versions of methods based on what the spec looks like.  For example, you might want to call a different version of install() for one platform than you call on another."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:7
# f5dd076221d4406ab956b38160873415
msgid "The SpecMultiMethod class implements a callable object that handles method dispatch.  When it is called, it looks through registered methods and their associated specs, and it tries to find one that matches the package's spec.  If it finds one (and only one), it will call that method."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:13
# 28eec7bae7b7417093aa724d5957ea1d
msgid "This is intended for use with decorators (see below).  The decorator (see docs below) creates SpecMultiMethods and registers method versions with them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:19
# e04af27dba5d474ebc92877efb055fbd
msgid "To register a method, you can do something like this:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:18
# 778ac672bc144a42b494ac509b46c788
msgid "mm = SpecMultiMethod() mm.register(\"^chaos_5_x86_64_ib\", some_method)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:21
# 85cbf0d909da49f4863b0acbbc133735
msgid "The object registered needs to be a Spec or some string that will parse to be a valid spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:24
# 705f59f68bac46afa939394c99fd1bd4
msgid "When the mm is actually called, it selects a version of the method to call based on the sys_type of the object it is called on."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod:28
# 9c64afe0a3b741cfaca95653e07e431b
msgid "See the docs for decorators below for more details."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.SpecMultiMethod.register:1
# e32999df3c7745dfbb59e9d429a1c864
msgid "Register a version of a method for a particular spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.when:1
# 8bc73ba3edf1424da93fc8b2efb77fb3
msgid "This annotation lets packages declare multiple versions of methods like install() that depend on the package's spec. For example:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.when:22
# f65321ad5c33451caefea6dc4333ebac
msgid "This allows each package to have a default version of install() AND specialized versions for particular platforms.  The version that is called depends on the architecutre of the instantiated package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.when:26
# 61b6d0ca9c8b4f9badcb1707e765ea26
msgid "Note that this works for methods other than install, as well.  So, if you only have part of the install that is platform specific, you could do this:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/multimethod.py:docstring of spack.multimethod.when:53
# 3664976e17874ed6b690f6bed3df80e0
msgid "Note that the default version of decorated methods must *always* come first.  Otherwise it will override all of the platform-specific versions.  There's not much we can do to get around this because of the way decorators work."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:201
# 89be701cc68949a780f2379eb39b472b
msgid "spack.package module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package:1
# 55b1adf18f5a459a8cfb31ac757514e7
msgid "This is where most of the action happens in Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package:3
# 620b715fbb3447d0bdfb7b17dc301380
msgid "The spack package class structure is based strongly on Homebrew (http://brew.sh/), mainly because Homebrew makes it very easy to create packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.ActivationError:1
# 2bc74f139320460a840095db324f9019
msgid "Bases: :class:`spack.package.ExtensionError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.ActivationError:1
# 18fe48519b624c2a9139c6029a372c9c
msgid "Raised when there are problems activating an extension."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.DependencyConflictError:1
# 5eaef8e1d2dc4710997cd0a8cf0a43ab
msgid "Raised when the dependencies cannot be flattened as asked for."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.ExtensionError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.NoURLError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageVersionError:1
# 0b77f0b4aee14c8c90d48cbf24e71201
# 62096c1219fb4c019b9907466204a21c
# e4d7ad80599f42ad922f87b4e5d54425
msgid "Bases: :class:`spack.package.PackageError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.ExtensionError:1
# a216c7e6d4e6460394f9070d115a1bad
msgid "Superclass for all errors having to do with extension packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.ExternalPackageError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageStillNeededError:1
# 335904e18fd441ea8b32bad84a0ddc16
# 5a1549bbb3f740bca83d82181c2b2f47
msgid "Bases: :class:`spack.package.InstallError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.ExternalPackageError:1
# b21adf8a2b684919916c0ab1b7138038
msgid "Raised by install() when a package is only for external use."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.FetchError:1
# c4295a010667450e82adf44ce2eee35d
msgid "Raised when something goes wrong during fetch."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.InstallError:1
# 5f02a354091b44608ab70c210c96c6ee
msgid "Raised when something goes wrong during install or uninstall."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.InstallPhase:1
# acde98b0a6b8452ca0d3953f19e956b5
msgid "Manages a single phase of the installation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.InstallPhase:3
# 0eacab4610174fc1a3f9997de2760aef
msgid "This descriptor stores at creation time the name of the method it should search for execution. The method is retrieved at __get__ time, so that it can be overridden by subclasses of whatever class declared the phases."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.InstallPhase:7
# ae1300a7ba63474b8046f284b5d930c4
msgid "It also provides hooks to execute arbitrary callbacks before and after the phase."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.NoURLError:1
# 991a2d1f96764148b48a886a09817bed
msgid "Raised when someone tries to build a URL for a package with no URLs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.Package:1
# 3cc0ef7d67a64f80b819caf1a91dea62
msgid "Bases: :class:`spack.package.PackageBase`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.Package:1
# 351dbd0fdcdd4862aa7aabd4480695bf
msgid "General purpose class with a single ``install`` phase that needs to be coded by packagers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.Package.build_system_class:1
# ba91abd89db94ff9b68ef29a97f1f364
msgid "This attribute is used in UI queries that require to know which build-system class we are using"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.Package.phases:1
# 58aab1101ef641828d9d74a9d5b4ede3
msgid "The one and only phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:1
# b1b56028bace4b6ca1cec6ce82007347
msgid "Bases: :class:`spack.package.PackageViewMixin`, :class:`object`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:1
# 00d5e94abfdf457daf2bb23c2dd21c19
msgid "This is the superclass for all spack packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:3
# a71c7725c1754042b39029d1e4c6b175
msgid "***The Package class***"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:5
# 4e7f95ffb81449c292b5032a3af45116
msgid "A package defines how to fetch, verify (via, e.g., sha256), build, and install a piece of software.  A Package also defines what other packages it depends on, so that dependencies can be installed along with the package itself.  Packages are written in pure python by users of Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:11
# 8e9d44decf754d559cc123911caf3487
msgid "There are two main parts of a Spack package:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:13
# 028e084cf697489a8eb7e7a1bb310e48
msgid "**The package class**.  Classes contain ``directives``, which are special functions, that add metadata (versions, patches, dependencies, and other information) to packages (see ``directives.py``). Directives provide the constraints that are used as input to the concretizer."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:19
# ac158b82d51e40ab9fd16151a00db951
msgid "**Package instances**. Once instantiated, a package is essentially an installer for a particular piece of software. Spack calls methods like ``do_install()`` on the ``Package`` object, and it uses those to drive user-implemented methods like ``patch()``, ``install()``, and other build steps. To install software, An instantiated package needs a *concrete* spec, which guides the behavior of the various install methods."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:27
# 8a06f83455f44d86b6a2ec683de65fa0
msgid "Packages are imported from repos (see ``repo.py``)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:29
# cb1b16e4fa3e457c92762ec18364a3f0
msgid "**Package DSL**"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:31
# 5f4030d2ec724c6bbaaa58d5258f940f
msgid "Look in ``lib/spack/docs`` or check https://spack.readthedocs.io for the full documentation of the package domain-specific language.  That used to be partially documented here, but as it grew, the docs here became increasingly out of date."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:36
# a1188f1090004220afaf1cf592ac108c
msgid "**Package Lifecycle**"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:38
# 9afd5b02a9de49b3b2d239fe89e77f91
msgid "A package's lifecycle over a run of Spack looks something like this:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:50
# 4457b59243e44c2ebbd527a463068da2
msgid "There are also some other commands that clean the build area:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:58
# f1901848f52240b98b697346d5afa696
msgid "The convention used here is that a ``do_*`` function is intended to be called internally by Spack commands (in spack.cmd).  These aren't for package writers to override, and doing so may break the functionality of the Package class."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:63
# 2e3f54ad307c4be9ae6cac11573a0158
msgid "Package creators have a lot of freedom, and they could technically override anything in this class.  That is not usually required."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase:66
# f1d562e4268341a1a8111452d9a9b41b
msgid "For most use cases.  Package creators typically just add attributes like ``url`` and ``homepage``, or functions like ``install()``. There are many custom ``Package`` subclasses in the ``spack.build_systems`` package that make things even easier for specific build systems."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.activate:1
# 7f2909139c2e4c058c61891d84ac5557
msgid "Add the extension to the specified view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.activate:3
# bb9c17af6db847d6b6e1f1b195cdb3ac
msgid "Package authors can override this function to maintain some centralized state related to the set of activated extensions for a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.activate:7
# fd7a9876ba9140f6ac4af8ce66a6191e
msgid "Spack internals (commands, hooks, etc.) should call do_activate() method so that proper checks are always executed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.all_urls:1
# 43eca8b1f6b5456cb67231a828869633
msgid "A list of all URLs in a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.all_urls:3
# 45bd815f1ac54cdc8a6c0a5ed272fc9c
msgid "Check both class-level and version-specific URLs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.all_urls:5
# 9a96b0c9af3f4fcdbc51cba05cdd75b7
msgid "a list of URLs"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.architecture:1
# 138d11c514b248cea2ccd9c8981ca546
msgid "Get the spack.architecture.Arch object that represents the environment in which this package will be built."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.archive_files:1
# 9cf1afcc0e71491699484f33409d3acd
msgid "List of glob expressions. Each expression must either be absolute or relative to the package source path. Matching artifacts found at the end of the build process will be copied in the same directory tree as build.env and build.out."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.bootstrap_compiler:1
# 46c8bb7eaf1445b6bbf7667eaee4cabd
msgid "Called by do_install to setup ensure Spack has the right compiler."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.bootstrap_compiler:3
# cd4304d6b983457487ff90a01ce371ed
msgid "Checks Spack's compiler configuration for a compiler that matches the package spec. If none are configured, installs and adds to the compiler configuration the compiler matching the CompilerSpec object."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.build_system_flags:1
# da49396dff1f4db2aeea3810adc33aaa
msgid "flag_handler that passes flags to the build system arguments.  Any package using `build_system_flags` must also implement `flags_to_build_system_args`, or derive from a class that implements it.  Currently, AutotoolsPackage and CMakePackage implement it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.check_for_unfinished_installation:1
# c463053d26784de4816bdb576aa06e1c
msgid "Check for leftover files from partially-completed prior install to prepare for a new install attempt."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.check_for_unfinished_installation:4
# 08f5710e923b454c91b00ae856b6bc1d
msgid "Options control whether these files are reused (vs. destroyed)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.check_for_unfinished_installation:6
# a187c9c3074646b3a040364ea501191d
msgid "True if the installation prefix needs to be kept, False otherwise"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.check_for_unfinished_installation:9
# 7f30109b30f9402fb357e7639fce896a
msgid "False if the stage has to be kept, True otherwise"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.check_for_unfinished_installation:12
# 3e448b7d2ef443c88bbac1624fcf1d4a
msgid "True if the prefix exists but the install is not complete, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.compiler:1
# ecb50fb89ba04c1e9075df55c4446d74
msgid "Get the spack.compiler.Compiler object used to build this package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.content_hash:1
# 8348d9bdf0dc443dbd557868196670dd
msgid "Create a hash based on the sources and logic used to build the package. This includes the contents of all applied patches and the contents of applicable functions in the package subclass."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.deactivate:1
# 4da66910297842eeb990dd8a571d8983
msgid "Remove all extension files from the specified view."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.deactivate:3
# 1f0d1b00f85b471386964f640ecc0444
msgid "Package authors can override this method to support other extension mechanisms.  Spack internals (commands, hooks, etc.) should call do_deactivate() method so that proper checks are always executed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.dependencies_of_type:1
# 67d8abf79e9844a4bdef65f49d81ae7c
msgid "Get dependencies that can possibly have these deptypes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.dependencies_of_type:3
# e54a9bf6e008404eabed50950d14f85f
msgid "This analyzes the package and determines which dependencies *can* be a certain kind of dependency. Note that they may not *always* be this kind of dependency, since dependencies can be optional, so something may be a build dependency in one configuration and a run dependency in another."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_activate:1
# dec5883d540a424ea494907aa64f79b0
msgid "Called on an extension to invoke the extendee's activate method."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_activate:3
# 3b8f60c550b5489f9873e47d90e3c248
msgid "Commands should call this routine, and should not call activate() directly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_clean:1
# 4a89d2e953eb428fa1f888be68d969a6
msgid "Removes the package's build stage and source tarball."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_deactivate:1
# 5c7103f21a43418c815461e8418b3cc0
msgid "Remove this extension package from the specified view. Called on the extension to invoke extendee's deactivate() method."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_deactivate:4
# f6022ac37ebf4d6cbc1f7c9045fb05e1
msgid "`remove_dependents=True` deactivates extensions depending on this package instead of raising an error."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_fake_install:1
# 020efc771ddb4c46af94eef5521d3726
msgid "Make a fake install directory containing fake executables, headers, and libraries."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_fetch:1
# fd9d63db7e2d4f6b89451119c3eb8179
msgid "Creates a stage directory and downloads the tarball for this package. Working directory will be set to the stage directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:1
# 4f271491c3c64d519bdf7dedcfa81c22
msgid "Called by commands to install a package and its dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:3
# 8e1e0b07d83d4175b331d17c79fe1f34
msgid "Package implementations should override install() to describe their build process."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:6
# 5993fa87a6ef4c91bc838068177579b2
msgid "Keep install prefix on failure. By default, destroys it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:9
# efbbb79b2e934b3e87bbee4e26cbb05d
msgid "By default, stage is destroyed only if there are no exceptions during build. Set to True to keep the stage even with exceptions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:13
# dfac0acb46664a77ac536118284fc488
msgid "By default, source is not installed, but for debugging it might be useful to keep it around."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:16
# 3d22e4ed42304c148557a689ee1058c0
msgid "Install dependencies before installing this package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:19
# 16ccade866ad493c9b878576540eca91
msgid "Skip patch stage of build if True."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:21
# 0e24e146667a48cd822c7c392454f799
msgid "Display verbose build output (by default, suppresses it)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:24
# db7b587dc7584417b207c22a9f691687
msgid "Number of make jobs to use for install. Default is ncpus"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:27
# 5e2b14d8e4fd44e3a1d04d710bbeece0
msgid "Don't really build; install fake stub files instead."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:29
# d5ea571a50d944e2b4db7f5573a1cb21
msgid "True if package was explicitly installed, False if package was implicitly installed (as a dependency)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:32
# 3c5db917d1674e5db42d816ff8d7591d
msgid "False to run no tests, True to test all packages, or a list of package names to run tests for some"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:35
# 1bab58a3d8df4ca7a489ab8c9f294b1e
msgid "Don't clean the build environment before installing."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:37
# 66b57b3b888141f0b551c5279ace59dd
msgid "Force spack to restage the package source."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:39
# 421c243185b04d68b8c868aec982319a
msgid "Install again, even if already installed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:41
# b7782c3fab604c39a5e85702fcd3ee64
msgid "Install from binary package, if available."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_install:43
# 157b0b6e848046eda4b4601092acb7ff
msgid "last installation phase to be executed (or None)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_patch:1
# 0f71f4a9d072438f998ee5a665e10e4a
msgid "Applies patches if they haven't been applied already."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_restage:1
# c38a96e00b2e4250ae47334728447180
msgid "Reverts expanded/checked out source to a pristine state."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_stage:1
# 4a6e88a7e1654956ac07986bd827f468
msgid "Unpacks and expands the fetched tarball."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.do_uninstall:1
# 2e28ea00f6ff4bf087f0d956fb31df44
msgid "Uninstall this package by spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.env_flags:1
# f0d163c407aa4215b6524752c0dd66c6
msgid "flag_handler that adds all flags to canonical environment variables."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.extendable:1
# b44d3945fb1b4a85930609b70adfda4c
msgid "Most packages are NOT extendable. Set to True if you want extensions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.extendee_args:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.extendee_spec:1
# 11b2457f379f4feea5c13cacca250730
# d6cc7a88fa2d48fb9e5a60f4a25e96b5
msgid "Spec of the extendee of this package, or None if it is not an extension"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.extends:1
# 4bbc71ac26344beea137bd9ffcd82130
msgid "Returns True if this package extends the given spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.extends:3
# f69b111840f24cbcabb1d2979b21f42b
msgid "If ``self.spec`` is concrete, this returns whether this package extends the given spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.extends:6
# 73aa1a14e95143b9b92911c840f34277
msgid "If ``self.spec`` is not concrete, this returns whether this package may extend the given spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.fetch_remote_versions:1
# e71fd9422d744b7a8c6ecdc8dfa89ac2
msgid "Find remote versions of this package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.fetch_remote_versions:3
# 42431348d7a243aba4c2bd84677a18cc
msgid "Uses ``list_url`` and any other URLs listed in the package file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.fetch_remote_versions:5
# 723eb37c2e78400aa5f01bf03ccacde1
msgid "a dictionary mapping versions to URLs"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.flag_handler:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.inject_flags:1
# 85ba1230fdc04af58370f976512fee1f
# 49207c34e02d4d089a0d8b860b0228d0
msgid "flag_handler that injects all flags through the compiler wrapper."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.format_doc:1
# a52a1d4f520546e880da897cf29536e8
msgid "Wrap doc string at 72 characters and format nicely"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.fullname:1
# 0ca2e54919284f73b1f513767772b8d3
msgid "namespace.name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.fullname:3
# 9325042a74ba45b08e735e69c6ae513b
msgid "Name of this package, including namespace"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.global_license_dir:1
# ed0b943cbbee4a51986279d013d2af7c
msgid "Returns the directory where global license files for all packages are stored."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.global_license_file:1
# b6572d336e134f50bbcc163c13a9c2e5
msgid "Returns the path where a global license file for this particular package should be stored."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.installed:1
# ab694765fc6f4df1847d049fdd1731dc
msgid "Installation status of a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.installed:3
# 42067983da704dac91aa15b6a985addd
msgid "True if the package has been installed, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.is_activated:1
# 6deb9956c0504c7db3dbfc37cb7e8f01
msgid "Return True if package is activated."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.license_comment:1
# 0eaf135c0c5a43a7820881e2678c456b
msgid "String. Contains the symbol used by the license manager to denote a comment. Defaults to ``#``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.license_files:1
# 7dbd13a7de73482c90ba5a7b62f24c93
msgid "List of strings. These are files that the software searches for when looking for a license. All file paths must be relative to the installation directory. More complex packages like Intel may require multiple licenses for individual components. Defaults to the empty list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.license_required:1
# d853a064cba24858b79fdd73bd28aee0
msgid "Boolean. If set to ``True``, this software requires a license. If set to ``False``, all of the ``license_*`` attributes will be ignored. Defaults to ``False``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.license_url:1
# eee8967266924c74b65b62a09d563fee
msgid "String. A URL pointing to license setup instructions for the software. Defaults to the empty string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.license_vars:1
# a98688a872444ef18c432859cfe833c3
msgid "List of strings. Environment variables that can be set to tell the software where to look for a license if it is not in the usual location. Defaults to the empty list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.maintainers:1
# 91979ddb7e594b41a3ed4b1b6d399a44
msgid "List of strings which contains GitHub usernames of package maintainers. Do not include @ here in order not to unnecessarily ping the users."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.make_jobs:1
# 66328ce1ce614c9db74eb6cb562cfcd6
msgid "# jobs to use for parallel make. If set, overrides default of ncpus."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.metadata_attrs:1
# 80e03d008232401aa9ceb300fa053b40
msgid "List of attributes which affect do not affect a package's content."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.nearest_url:1
# 15fd402255d242b396e53e7305a7a17c
msgid "Finds the URL with the \"closest\" version to ``version``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.nearest_url:3
# 24bca26c4ce34fd98cdc52de9e0d054f
msgid "This uses the following precedence order:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.nearest_url:5
# 194b8487e29b4e26a0bce129f710f045
msgid "Find the next lowest or equal version with a URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.nearest_url:6
# 3fc6e6b3d5884bec90ecd998984146f9
msgid "If no lower URL, return the next *higher* URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.nearest_url:7
# 58ead85b6d4543929dc71f8bbf801f34
msgid "If no higher URL, return None."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.parallel:1
# 7f250a0bbeaa427ba648354acebe160f
msgid "By default we build in parallel.  Subclasses can override this."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.possible_dependencies:1
# 58c2449e713441ae97cb1d23ee7603ad
msgid "Return set of possible dependencies of this package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.possible_dependencies:3
# 93de1ba618f6463fa41f4b05d10a6ab2
msgid "Note: the set returned *includes* the package itself."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.possible_dependencies:5
# 9250b8b082e14d718bf3fd405ddc9a77
msgid "return all transitive dependencies if True, only direct dependencies if False."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.possible_dependencies:8
# f879fc34547a42e2bee833897c2f835f
msgid "expand virtual dependencies into all possible implementations."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.possible_dependencies:11
# 3f882c3ce1e04caea343ad71c39e59c0
msgid "set of names of dependencies visited so far."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.prefix:1
# eb91930944cc4c488ceeb228b670e898
msgid "Get the prefix into which this package should be installed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.provides:1
# 11567f35cf3a4e57b1662c7b63126e16
msgid "True if this package provides a virtual package with the specified name"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.remove_prefix:1
# e607cb5baa924fe1b1d56adb8ed9be00
msgid "Removes the prefix for a package along with any empty parent directories"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.rpath:1
# 41a96cc5ab16443faf8c934bbeebcc24
msgid "Get the rpath this package links with, as a list of paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.rpath_args:1
# 92fbe26cf88c440aa3635230232e7332
msgid "Get the rpath args as a string, with -Wl,-rpath, for each element"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.run_tests:1
# 87732459e4d34e63a39bd0609ce59fdf
msgid "By default do not run tests within package's install()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.sanity_check_is_dir:1
# 099b946613b346ca9291ad381c0851e5
msgid "List of prefix-relative directory paths (or a single path). If these do not exist after install, or if they exist but are not directories, sanity checks will fail."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.sanity_check_is_file:1
# 349dffb9953147618da6f07d90b701ed
msgid "List of prefix-relative file paths (or a single path). If these do not exist after install, or if they exist but are not files, sanity checks fail."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.sanity_check_prefix:1
# f29d10f816814c6ab6fe539ea2196e0e
msgid "This function checks whether install succeeded."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:1
# 7538a10f9c7b47a4818b883afe924157
msgid "Set up the environment of packages that depend on this one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:3
# af075298678d41b3a5599e6235df9507
msgid "This is similar to ``setup_environment``, but it is used to modify the compile and runtime environments of packages that *depend* on this one. This gives packages like Python and others that follow the extension model a way to implement common environment or compile-time settings for dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:9
# f55eb1d4ea9b48da96815bb8cfcf0bf7
msgid "This is useful if there are some common steps to installing all extensions for a certain package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:12
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:16
# 7d54c892703f4dcc81bcb96064b144ef
# 34d5b8e301b143a5b64fff6e53dde0c6
msgid "Example:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:14
# dac022b6f210487ebecbab21b327c48d
msgid "Installing python modules generally requires ``PYTHONPATH`` to point to the ``lib/pythonX.Y/site-packages`` directory in the module's install prefix. This method could be used to set that variable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:18
# 601d0df575c645caa5bc04ee6b6f1411
msgid "List of environment modifications to be applied when the dependent package is built within Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:22
# 2f721fd3ff27490997177d0e3f4a6b4c
msgid "List of environment modifications to be applied when the dependent package is run outside of Spack. These are added to the resulting module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_environment:27
# 8ba7328bcf984827a8688ac8f9559830
msgid "The spec of the dependent package about to be built. This allows the extendee (self) to query the dependent's state. Note that *this* package's spec is available as ``self.spec``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:1
# ac1ea043bcab44e0957c276b2fb105be
msgid "Set up Python module-scope variables for dependent packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:3
# 08c35aba13974acf87de1ae1309bc45b
msgid "Called before the install() method of dependents."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:5
# ff9556ebdbfe4e7c85bf7d3be87a73a1
msgid "Default implementation does nothing, but this can be overridden by an extendable package to set up the module of its extensions. This is useful if there are some common steps to installing all extensions for a certain package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:10
# 6f42b3562a964643b759853804629ace
msgid "Examples:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:12
# f850e9c8c9a144a0bf0b328b4e7e9165
msgid "Extensions often need to invoke the ``python`` interpreter from the Python installation being extended. This routine can put a ``python()`` Executable object in the module scope for the extension package to simplify extension installs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:17
# c55836ef985c4c9b85b0df1dc3b738f3
msgid "MPI compilers could set some variables in the dependent's scope that point to ``mpicc``, ``mpicxx``, etc., allowing them to be called by common name regardless of which MPI is used."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:21
# 4f95729b64194d5eb151763167324419
msgid "BLAS/LAPACK implementations can set some variables indicating the path to their libraries, since these paths differ by BLAS/LAPACK implementation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:25
# e7162dba637446a89b413bb6fe8ba338
msgid "The Python ``module`` object of the dependent package. Packages can use this to set module-scope variables for the dependent to use."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_dependent_package:29
# 5ee84da35b744f40b8e4b0d23d046b11
msgid "The spec of the dependent package about to be built. This allows the extendee (self) to query the dependent's state.  Note that *this* package's spec is available as ``self.spec``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:1
# 7c45e6e3c2c5419aaf0e1fe053c0e5e3
msgid "Set up the compile and runtime environments for a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:3
# 5e2c91cbaaba4badbf575dfd4480984f
msgid "``spack_env`` and ``run_env`` are ``EnvironmentModifications`` objects. Package authors can call methods on them to alter the environment within Spack and at runtime."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:7
# 1ceba17555ca4c3cbb7883965dd12ecf
msgid "Both ``spack_env`` and ``run_env`` are applied within the build process, before this package's ``install()`` method is called."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:10
# 4497dbb012ad4f9cb0fec60c1bdd7a2d
msgid "Modifications in ``run_env`` will *also* be added to the generated environment modules for this package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:13
# f67719a8cd6f4676be83569ed5c6da48
msgid "Default implementation does nothing, but this can be overridden if the package needs a particular environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:18
# f73a10264f6249eabeec1c42cead9abe
msgid "Qt extensions need ``QTDIR`` set."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:20
# 90c5d55627df49e7b8cea4e99f80630d
msgid "List of environment modifications to be applied when this package is built within Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.setup_environment:24
# 5509c56ea8224b08830b6196bab89158
msgid "List of environment modifications to be applied when this package is run outside of Spack. These are added to the resulting module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.stage:1
# 7596a06890b74f9483d53b4bb8e99388
msgid "Get the build staging area for this package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.stage:3
# 459231bf792748f99e92f72fc20bf93a
msgid "This automatically instantiates a ``Stage`` object if the package doesn't have one yet, but it does not create the Stage directory on the filesystem."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.transitive_rpaths:1
# b338579ef0db4e35ad81bdacac069c9c
msgid "When True, add RPATHs for the entire DAG. When False, add RPATHs only for immediate dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.unit_test_check:1
# f7c04e101ff6436687a54e4add8242e7
msgid "Hook for unit tests to assert things about package internals."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.unit_test_check:3
# 65df36c56e4f45739adf569668a268f0
msgid "Unit tests can override this function to perform checks after ``Package.install`` and all post-install hooks run, but before the database is updated."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.unit_test_check:7
# a7b44ffdf12b47529ac1c356c60b8e9a
msgid "The overridden function may indicate that the install procedure should terminate early (before updating the database) by returning ``False`` (or any value such that ``bool(result)`` is ``False``)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.unit_test_check:12
# 4d113f5ef4d743d488d8fb1f9588ad17
msgid "``True`` to continue, ``False`` to skip ``install()``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.url_for_version:1
# 5ee6c04f9c724ff5879eb96db3986c03
msgid "Returns a URL from which the specified version of this package may be downloaded."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.url_for_version:5
# 1a0c43234c73440f929ab37a8cd62fdb
msgid "version: class Version"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.url_for_version:5
# dfc0311ecca8403da8c4c48d73ae9e16
msgid "The version for which a URL is sought."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.url_for_version:7
# 20bfdb908a674146a64dfb1368618b5e
msgid "See Class Version (version.py)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.url_version:1
# 17f98a4c26c2458ca54b5bf58cb6d46c
msgid "Given a version, this returns a string that should be substituted into the package's URL to download that version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.url_version:4
# 21b4e7d372a3409cbf2d9e629924c7ef
msgid "By default, this just returns the version string. Subclasses may need to override this, e.g. for boost versions where you need to ensure that there are _'s in the download URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.use_xcode:1
# 0ffd1cb080394d2096e2d5ff314da46f
msgid "By default do not setup mockup XCode on macOS with Clang"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.version_urls:1
# ed85d72b4bae40fcbe7ff695c1923b6b
msgid "OrderedDict of explicitly defined URLs for versions of this package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.version_urls:3
# 8621a37ce3f74b6eade648b8d0d5fcdf
msgid "An OrderedDict (version -> URL) different versions of this package, sorted by version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.version_urls:6
# 2926210f48ec466babc8ef0b30517f99
msgid "A version's URL only appears in the result if it has an an explicitly defined ``url`` argument. So, this list may be empty if a package only defines ``url`` at the top level."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageBase.view:1
# a1ddf110362543ce9cb948606a0f4547
msgid "Create a view with the prefix of this package as the root. Extensions added to this view will modify the installation prefix of this package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageError:1
# 0f4d308726874be48db6a38c21c2f4e4
msgid "Raised when something is wrong with a package definition."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageMeta:1
# a785cc1060674260b838141d112679df
msgid "Bases: :class:`spack.directives.DirectiveMeta`, :class:`spack.mixins.PackageMixinsMeta`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageMeta:1
# 48a0a74f25794bb79a5aae25fc60152d
msgid "Conveniently transforms attributes to permit extensible phases"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageMeta:3
# dcdf33815f854c4db7daf3239b627ca5
msgid "Iterates over the attribute 'phases' and creates / updates private InstallPhase attributes in the class that is being initialized"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageMeta.fullname:1
# d77b6a88659b43c797c6516e51b0cf75
msgid "Name of this package, including the namespace"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageMeta.module:1
# 068a8d5e6abb40eeac212736c463754d
msgid "Module object (not just the name) that this package is defined in."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageMeta.module:3
# 7707cd819a824aba93b1e9513e7b1250
msgid "We use this to add variables to package modules.  This makes install() methods easier to write (e.g., can call configure())"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageMeta.namespace:1
# 018868cf99654e86a88b415e19438d53
msgid "Spack namespace for the package, which identifies its repo."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageMeta.package_dir:1
# ec534361e91b482fbfae089a213bea96
msgid "Directory where the package.py file lives."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageStillNeededError:1
# 2002c09cf5c84d04893833da5130414a
msgid "Raised when package is still needed by another on uninstall."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageVersionError:1
# e73e5efb4bb6408cb53c817b0f959a5a
msgid "Raised when a version URL cannot automatically be determined."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageViewMixin:1
# 19d5198b2f33470babdf85e20382e692
msgid "This collects all functionality related to adding installed Spack package to views. Packages can customize how they are added to views by overriding these functions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageViewMixin.add_files_to_view:1
# 2fe1c798e2e340c98112738df395223c
msgid "Given a map of package files to destination paths in the view, add the files to the view. By default this adds all files. Alternative implementations may skip some files, for example if other packages linked into the view already include the file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageViewMixin.remove_files_from_view:1
# 7ef320e9301e47659141dc51868f3845
msgid "Given a map of package files to files currently linked in the view, remove the files from the view. The default implementation removes all files. Alternative implementations may not remove all files. For example if two packages include the same file, it should only be removed when both packages are removed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageViewMixin.view_destination:1
# c095105be70b4fcc89146c95fb643f39
msgid "The target root directory: each file is added relative to this directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageViewMixin.view_file_conflicts:1
# fbc2f0ee0dc64a85b4bdd69437d2d172
msgid "Report any files which prevent adding this package to the view. The default implementation looks for any files which already exist. Alternative implementations may allow some of the files to exist in the view (in this case they would be omitted from the results)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.PackageViewMixin.view_source:1
# 8dbeb1fc8ad64d148f3206728761cf6f
msgid "The source root directory that will be added to the view: files are added such that their path relative to the view destination matches their path relative to the view source."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.dump_packages:1
# 59c4db9e92b6440085ee173d156adc4e
msgid "Dump all package information for a spec and its dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.dump_packages:3
# 06c85f6e7a2a4eca904fd636f1474e55
msgid "This creates a package repository within path for every namespace in the spec DAG, and fills the repos wtih package files and patch files for every node in the DAG."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.flatten_dependencies:1
# 4c1bd294ecac4965b2ea49ccbfcef57c
msgid "Make each dependency of spec present in dir via symlink."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.install_dependency_symlinks:1
# e1f3a81c675e4434842d2c2dd8b0833a
msgid "Execute a dummy install and flatten dependencies"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.on_package_attributes:1
# 9921a579db9c4f8cb8b837a8d4a513e0
msgid "Decorator: executes instance function only if object has attr valuses."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.on_package_attributes:3
# 7c37dd89edd54f00a497470b81650b3a
msgid "Executes the decorated method only if at the moment of calling the instance has attributes that are equal to certain values."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.on_package_attributes:6
# e2ff13beb9bd41948e86c3f4d22398e1
msgid "dictionary mapping attribute names to their required values"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.print_pkg:1
# e0ae31a418884e8faba329f3699eb66c
msgid "Outputs a message with a package icon."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.run_after:1
# d3c0be0f0c3c45e593d34ebe5337b96b
msgid "Registers a method of a package to be run after a given phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.run_before:1
# 0028a0e4d4474c249e52d3dc435548ec
msgid "Registers a method of a package to be run before a given phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package.py:docstring of spack.package.use_cray_compiler_names:1
# f8b920a52def46609949166eeabe58a7
msgid "Compiler names for builds that rely on cray compiler names."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:209
# f41b8884ab504790bd6088052a1462f4
msgid "spack.package\\_prefs module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:1
# e6bc1b1f09df49fe8cd7a2d6fb84178c
msgid "Defines the sort order for a set of specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:3
# a4e52b2990824a14a03059bbeb4c4dbc
msgid "Spack's package preference implementation uses PackagePrefss to define sort order. The PackagePrefs class looks at Spack's packages.yaml configuration and, when called on a spec, returns a key that can be used to sort that spec in order of the user's preferences."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:9
# 288deba2ae5542d0bb311f8593787251
msgid "You can use it like this:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:11
# d155138c20974420bb2a2775a379a625
msgid "# key function sorts CompilerSpecs for `mpich` in order of preference kf = PackagePrefs('mpich', 'compiler') compiler_list.sort(key=kf)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:15
# 72cd260dbbb640f69a3e2befe9f79004
msgid "Or like this:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:17
# 891682299db14e35863139d06916ee70
msgid "# key function to sort VersionLists for OpenMPI in order of preference. kf = PackagePrefs('openmpi', 'version') version_list.sort(key=kf)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:21
# 41769b4582894e2b878f38fac024bace
msgid "Optionally, you can sort in order of preferred virtual dependency providers.  To do that, provide 'providers' and a third argument denoting the virtual package (e.g., ``mpi``):"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs:25
# 40e0ee06fa7845cf9f521bcbe532a2a6
msgid "kf = PackagePrefs('trilinos', 'providers', 'mpi') provider_spec_list.sort(key=kf)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs.has_preferred_providers:1
# c1636435325f410a8c7b9567f7469315
msgid "Whether specific package has a preferred vpkg providers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs.order_for_package:1
# 84fe791742bc42c5ac6f312f9edf0af7
msgid "Given a package name, sort component (e.g, version, compiler, ...), and an optional vpkg, return the list from the packages config."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.PackagePrefs.preferred_variants:1
# 5f09eccdb11c435cbafa3847298b845a
msgid "Return a VariantMap of preferred variants/values for a spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.VirtualInPackagesYAMLError:1
# c7b3b6b5d69d46a6a029662a2f82a612
msgid "Raised when a disallowed virtual is found in packages.yaml"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.get_package_dir_permissions:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.get_package_permissions:1
# 47a43f694a0b488e8a5d0719fcfb12e9
# 499d85ae15f54cfa9fdc502ee2aaa3dc
msgid "Return the permissions configured for the spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.get_package_dir_permissions:3
# 5fd92fb9f0dd41a590e5a74f5d8bad12
msgid "Include the GID bit if group permissions are on. This makes the group attribute sticky for the directory. Package-specific settings take precedent over settings for ``all``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.get_package_group:1
# dc6243681227400ebe001a31a6b6583d
msgid "Return the unix group associated with the spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.get_package_group:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.get_package_permissions:3
# 012d8842df8641edbcccc403bae0e52d
# d70154914c8244bd950660f3c6fa9005
msgid "Package-specific settings take precedence over settings for ``all``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.get_packages_config:1
# 1384e073c58a480380a03a468f928aa8
msgid "Wrapper around get_packages_config() to validate semantics."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.is_spec_buildable:1
# 1cb67e49ab3a42658c721428a87e763f
msgid "Return true if the spec pkgspec is configured as buildable"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_prefs.py:docstring of spack.package_prefs.spec_externals:1
# bb4b7543cbe6454396232b7b133604a8
msgid "Return a list of external specs (w/external directory path filled in), one for each known external installation."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:217
# 3c69019aec59435bba852de35aa3cbde
msgid "spack.package\\_test module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_test.py:docstring of spack.package_test.compare_output:1
# a4002e7cf1844b169509b5afce5df0b8
msgid "Compare blessed and current output of executables."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_test.py:docstring of spack.package_test.compare_output_file:1
# f0a0d4b244654f819ffea511969ab31c
msgid "Same as above, but when the blessed output is given as a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/package_test.py:docstring of spack.package_test.compile_c_and_execute:1
# 1fb007425ea1432f98e4a8c00f5d1274
msgid "Compile C @p source_file with @p include_flags and @p link_flags, run and return the output."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:225
# aafabe38b7064116a1f28e76cc97fbd8
msgid "spack.parse module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.LexError:1
# 2f656e164e6744669bd1ed20da221cdc
msgid "Bases: :class:`spack.parse.ParseError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.LexError:1
# b760c88b9a1b40d59cffc211ceaa532d
msgid "Raised when we don't know how to lex something."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Lexer:1
# 7be7423b89514369b83c085b752692f8
msgid "Base class for Lexers that keep track of line numbers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.ParseError:1
# 3072e172fb3d4281b95921321dacd982
msgid "Raised when we don't hit an error while parsing."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Parser:1
# 6a118ac9b24b47f1b7ce3da5b8ca4851
msgid "Base class for simple recursive descent parsers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Parser.accept:1
# 67c7574ba30e43018f519e87298dfa54
msgid "Put the next symbol in self.token if accepted, then call gettok()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Parser.expect:1
# 5de823c7890c4fd7998cf856749d69d5
msgid "Like accept(), but fails if we don't like the next token."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Parser.gettok:1
# 9db61dc47d414f9d96b924e0b1e815fd
msgid "Puts the next token in the input stream into self.next."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Parser.last_token_error:1
# 4c20e8b5911f4d38a329bc34360f1a97
msgid "Raise an error about the previous token in the stream."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Parser.next_token_error:1
# c10d271b91964bd9b6dddefe8c79adc3
msgid "Raise an error about the next token in the stream."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Parser.push_tokens:1
# b0936fac0c9a46e2b0fd5492d542fbf4
msgid "Adds all tokens in some iterable to the token stream."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/parse.py:docstring of spack.parse.Token:1
# 8a791080d75945b68dca46d99aee5dbc
msgid "Represents tokens; generated from input by lexer and fed to parse()."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:233
# 468ce14ba35a4781ab7cfea82e84a512
msgid "spack.patch module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.FilePatch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch:1
# 8ddd709352ef4ae398c58005079e2c1c
# 95caa042e4054bacb7a45c74c8ea7c51
msgid "Bases: :class:`spack.patch.Patch`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.FilePatch:1
# d3f0dc1caaf74c51b377b9f2f8a56f36
msgid "Describes a patch that is retrieved from a file in the repository."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.FilePatch:3
# ee933f809f144fe0928745f2824319d9
msgid "the class object for the package that owns the patch"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.FilePatch:5
# 98f623fba79a4e039a8c01ca836657aa
msgid "path to patch, relative to the repository directory for a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.FilePatch:8
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch:7
# 788f827c17054596a7d4367c52a166b5
# 7e44b453602e4c66b4144382dfc71f0b
msgid "level to pass to patch command"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.FilePatch:10
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch:9
# 9546913a258d481d80c44688952d3f63
# a67dab9496894c70b7a624b4082d89ed
msgid "path within the source directory where patch should be applied"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.FilePatch.to_dict:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch.to_dict:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch.to_dict:1
# 42059b0d2e9d4cf7ba3ad41ee911a64e
# 50e1993cbc58456fabc311506a4cf98e
# 099467486cc24900b4ee4f13a8ef633e
msgid "Partial dictionary -- subclases should add to this."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.NoSuchPatchError:1
# 4c1f721a8ff64d01bc8982f088c7eac1
msgid "Raised when a patch file doesn't exist."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch:1
# d76ea8ebe2804681a07eff9034ca7f6f
msgid "Base class for patches."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch:3
# 43570ab27ff947f9a9bc88d7a0060ba8
# 10a66f02e938496784484f6a1c882be1
msgid "the package that owns the patch"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch:6
# 771d8d270d3243238e86b1a53ee6a961
msgid "The owning package is not necessarily the package to apply the patch to -- in the case where a dependent package patches its dependency, it is the dependent's fullname."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch.apply:1
# 1ed48ecb1cb54b779cf10ab60d653d4d
msgid "Apply a patch to source in a stage."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch.apply:3
# f12fe9dcfead42c2a6eac16284dc3ebc
msgid "stage where source code lives"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch.clean:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch.clean:1
# 3da85498a72841cc9bc5f0034db87f0f
# d5ce0218394d444d885f80bab500d8ec
msgid "Clean up the patch stage in case of a UrlPatch"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch.fetch:1
# 41abe9a2cb6249afb3b8d391429fc054
msgid "Fetch the patch in case of a UrlPatch"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.Patch.fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch.fetch:3
# 309dab1508674b8aac2098ac3eae3144
# 125929eee8d84469bd9182a7bc237434
msgid "stage for the package that needs to be patched"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache:1
# fd5dae94ba1d4fddbb04f99de7e71297
msgid "Index of patches used in a repository, by sha256 hash."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache:3
# a3b313351b6c4914894e7ea935589915
msgid "This allows us to look up patches without loading all packages.  It's also needed to properly implement dependency patching, as need a way to look up patches that come from packages not in the Spec sub-DAG."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache:7
# a58a93f90dbf42e0afc416a4af3c848e
msgid "The patch index is structured like this in a file (this is YAML, but we write JSON)::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache.patch_for_package:1
# 292198ee0d6e4f1da1fa1b1fc0ff0716
msgid "Look up a patch in the index and build a patch object for it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache.patch_for_package:3
# 48a83ac42b5b479385e7bb4319f5d191
msgid "sha256 hash to look up"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache.patch_for_package:5
# 7639cf36ea3c4bfeafd810de6db26db0
msgid "Package object to get patch for."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache.patch_for_package:8
# d2f4d7c688aa4bceb1846bb194cbdfa8
msgid "We build patch objects lazily because building them requires that we have information about the package's location in its repo."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchCache.update:1
# 7de3a41099804164ba3a7a925419e801
msgid "Update this cache with the contents of another."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.PatchDirectiveError:1
# 158f8fe7825e4da2bfee1abfb3e9d3be
msgid "Raised when the wrong arguments are suppled to the patch directive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch:1
# 21e28e5c91a2414c825447bcc307128e
msgid "Describes a patch that is retrieved from a URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch:5
# f19c67a558da40979095cb6a115e0458
msgid "URL where the patch can be fetched"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.UrlPatch.fetch:1
# 9fe957994dd44cb780c13238a2facf1e
msgid "Retrieve the patch in a temporary stage and compute self.path"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.apply_patch:1
# ff2004f3ee7243349a25bf7d0800cdab
msgid "Apply the patch at patch_path to code in the stage."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.apply_patch:3
# 982c60b8cf00450ab4f5a06eb027b08f
msgid "stage with code that will be patched"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.apply_patch:5
# 0a42956caa914f6e99a443b3ef91bfe6
msgid "filesystem location for the patch to apply"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.apply_patch:7
# 836c63e29b4e49318dd7b9ee32c6848d
msgid "patch level (default 1)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.apply_patch:9
# 046ea1a1480e48e29eb63315abc1bfde
msgid "relative path *within* the stage to change to (default '.')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/patch.py:docstring of spack.patch.from_dict:1
# 2432afe9165145128bde71bd272bb1ef
msgid "Create a patch from json dictionary."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:241
# 9387828617d1498aa37e4ea1ec2920a5
msgid "spack.paths module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/paths.py:docstring of spack.paths:1
# 59ae92fe71254cc0a277dd3ea0846bed
msgid "Defines paths that are part of Spack's directory structure."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/paths.py:docstring of spack.paths:3
# 4844a5b0f5b8418fb308cf9fcda72de8
msgid "Do not import other ``spack`` modules here. This module is used throughout Spack and should bring in a minimal number of external dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/paths.py:docstring of spack.paths.bin_path:1
# 06947bc6405546a6ac23341b901da49c
msgid "bin directory in the spack prefix"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/paths.py:docstring of spack.paths.prefix:1
# 6d565654f3fe451e92f51c88211652cb
msgid "This file lives in $prefix/lib/spack/spack/__file__"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/paths.py:docstring of spack.paths.spack_root:1
# 6d6ae5a0758a476b99ed9fc9ddb0cae3
msgid "synonym for prefix"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/paths.py:docstring of spack.paths.spack_script:1
# fb249e1c67714006bae101e926cf6b68
msgid "The spack script itself"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/paths.py:docstring of spack.paths.user_config_path:1
# 0e18e3eb8e0e4a80b2f707517e926377
msgid "User configuration location"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:249
# b05e00f490f14cabb5dcd2d079ba7823
msgid "spack.pkgkit module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/pkgkit.py:docstring of spack.pkgkit:1
# b5e4b494e6b04cdda36e678b19b7c47b
msgid "pkgkit is a set of useful build tools and directives for packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/pkgkit.py:docstring of spack.pkgkit:3
# 94d2bf0640c14857a76eb79549feecd9
msgid "Everything in this module is automatically imported into Spack package files."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:257
# 34e2d82f5ffa45e1a2698a0dafa21274
msgid "spack.provider\\_index module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index:1
# 31b7abd869bf475cafda4a85c2ddb70e
msgid "The ``virtual`` module contains utility classes for virtual dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:1
# 04d30fe253184488a2d9493a294df701
msgid "This is a dict of dicts used for finding providers of particular virtual dependencies. The dict of dicts looks like:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:5
# 6c2d43259a3b450ca6ab6d62e7213993
msgid "{ vpkg name :"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:5
# 5533512a825447a6a32453ec082e02df
msgid "{ full vpkg spec : set(packages providing spec) } }"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:7
# 8f75644a209d4d3f80ac10cddcb67562
msgid "Callers can use this to first find which packages provide a vpkg, then find a matching full spec.  e.g., in this scenario:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:12
# 6475e1b9ddd74b64bf0c98f0ea4b0528
msgid "{ 'mpi' :"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:12
# 0f703c29b8634105bc3574d1b4e2e3d4
msgid "{ mpi@:1.1"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:11
# 221f9258274145049cfb147a5f225bf0
msgid "set([mpich]),"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:12
# 8c73f696c8c3435092f5333a0772c691
msgid "mpi@:2.3 : set([mpich2@1.9:]) } }"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex:14
# 8ea8d3d5bad24c829c72f07b22aa2215
msgid "Calling providers_for(spec) will find specs that provide a matching implementation of MPI."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex.copy:1
# 2a14245bc77742c8b67dbbed1b2cb81c
msgid "Deep copy of this ProviderIndex."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex.merge:1
# 9aac0b71378b436d9660fbc62c0673c1
msgid "Merge `other` ProviderIndex into this one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex.providers_for:1
# 3fc620cd378a4d5e8ab0a755e5ca3597
msgid "Gives specs of all packages that provide virtual packages with the supplied specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex.remove_provider:1
# 09a80b35619049119bef9595726c761b
msgid "Remove a provider from the ProviderIndex."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndex.satisfies:1
# 8bb8f7baecb64e77aa8baeb9b33896fd
msgid "Check that providers of virtual specs are compatible."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/provider_index.py:docstring of spack.provider_index.ProviderIndexError:1
# 5b4cf36e5e84419a9544c75aeb6cb7fe
msgid "Raised when there is a problem with a ProviderIndex."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:265
# 6f22c257d2124315bf54f2adf550c75b
msgid "spack.relocate module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.InstallRootStringException:1
# 102fef8605af403f83b0f40ad9583950
msgid "Raised when the relocated binary still has the install root string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.file_is_relocatable:1
# fcf6fba8732b412c953f402e68cc6b4a
msgid "Returns True if the file passed as argument is relocatable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.file_is_relocatable:3
# 17df8ee79d784ca5815964627e3543e6
msgid "absolute path of the file to be analyzed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.file_is_relocatable:5
# f0e89d68906340a5a1c415862991fdae
msgid "True or false"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.file_is_relocatable:7
# 1c4d5fbb61654096a388ae919431d800
msgid ":exc:`ValueError` -- if the file does not exist or the path is not absolute"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.get_existing_elf_rpaths:1
# 8649e03c0c9442318630ca5784ec2c86
msgid "Return the RPATHS returned by patchelf --print-rpath path_name as a list of strings."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.get_patchelf:1
# 396eb7b22e4b4eb8950179f5b73a040d
msgid "Builds and installs spack patchelf package on linux platforms using the first concretized spec. Returns the full patchelf binary path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.get_placeholder_rpaths:1
# bf2e26dd1bed4738aafa987da557452f
msgid "Replaces original layout root dir with a placeholder string in all rpaths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.get_relative_rpaths:1
# 8538f8c17ea04a3f8e961f8abe8f6fdf
msgid "Replaces orig_dir with relative path from dirname(path_name) if an rpath in orig_rpaths contains orig_path. Prefixes $ORIGIN to relative paths and returns replacement rpaths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_binary:1
# b8adf2b38879461a84ab0119e764cf0d
msgid "Returns true if a file is binary, False otherwise"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_binary:3
# 6aed6c7e6852486d86a7658dc133611e
msgid "file to be tested"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_binary:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.compatible:8
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.constrain:7
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.satisfies:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultiValuedVariant.satisfies:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.compatible:8
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.constrain:7
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.satisfies:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.concrete:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.constrain:8
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.satisfies:11
# 3eca7c21cd704d0c97f8ec01d275c64b
# dbb37d33df694c7591c956bb0f40b91d
# 9c8e463117644e98be392d792172e023
# a3195e6949184dbea620e90b7f37d9cf
# 0fe80aa993184dc094dd026697cbc862
# f417b2c075dc41349a7fd694abff7dbb
# 163f50c55f774613a562661a48b9aa6f
# 614bc57d7f07427696a1a1ff15f0acc1
# c12e46851302498699759608ce15a6d9
# 685cee9868a646138f3e7be2f854e7d3
# cdf8b9dcd0ce4a02959b4d4b7b897237
msgid "True or False"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_relocatable:1
# 77d46da9efa142b8abbc9b8be30bea9a
msgid "Returns True if an installed spec is relocatable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_relocatable:3
# d7e01a322699486abb18c231111614c2
msgid "spec to be analyzed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_relocatable:6
# 687b22cd4611471b9dd0964830085f87
msgid "True if the binaries of an installed spec are relocatable and False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.is_relocatable:9
# 188e035f21ad499b8a480e31431c4cf6
msgid ":exc:`ValueError` -- if the spec is not installed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.macho_get_paths:1
# 4254e35fa63c49cfbb53285f7df94fa0
msgid "Examines the output of otool -l path_name for these three fields: LC_ID_DYLIB, LC_LOAD_DYLIB, LC_RPATH and parses out the rpaths, dependiencies and library id. Returns these values."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.macho_make_paths_placeholder:1
# 59683486d2134f3d960ee2e21422d2ab
msgid "Replace old_dir with a placeholder of the same length in rpaths and deps and idpaths is needed. replacement are returned."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.macho_make_paths_relative:1
# cb26a49efdc143098dba689224f9f269
msgid "Replace old_dir with relative path from dirname(path_name) in rpaths and deps; idpaths are replaced with @rpath/libname as needed; replacement are returned."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.macho_replace_paths:1
# d3b839af35434150abc02ee7f166c05c
msgid "Replace old_dir with new_dir in rpaths, deps and idpath and return replacements"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.make_binary_placeholder:1
# 502db9de0cc04bcb94d2a4d3b4be6f51
msgid "Replace old install root in RPATHs with placeholder in binary files"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.make_binary_relative:1
# 5c296fb80708436ca08f9bb1164059aa
msgid "Replace old RPATHs with paths relative to old_dir in binary files"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.make_link_placeholder:1
# 245b8039eaac491db94b857fa12d4324
msgid "Replace old install path with placeholder in absolute links."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.make_link_placeholder:3
# 2eaa0692481c47b29e8d0ac4d5e6d945
msgid "Links in ``cur_path_names`` must link to absolute paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.make_link_relative:1
# 51353bc03d514df09f2c46792911a9ef
msgid "Change absolute links to be relative."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.mime_type:1
# 81a42529e2a94246a1313a1197177805
msgid "Returns the mime type and subtype of a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.mime_type:3
# 83800a816caf4f4db3feaa8d0dfb3db5
msgid "file to be analyzed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.mime_type:5
# a88d9d0cca444112a778c21d5a7944fe
msgid "Tuple containing the MIME type and subtype"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.modify_elf_object:1
# df30bfc98f614401a15eddf127a79a55
msgid "Replace orig_rpath with new_rpath in RPATH of elf object path_name"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.modify_macho_object:1
# 32869d920e8d442cb4aa54b0c18b9515
msgid "Modify MachO binary path_name by replacing old_dir with new_dir or the relative path to spack install root. The old install dir in LC_ID_DYLIB is replaced with the new install dir using install_name_tool -id newid binary The old install dir in LC_LOAD_DYLIB is replaced with the new install dir using install_name_tool -change old new binary The old install dir in LC_RPATH is replaced with the new install dir using install_name_tool  -rpath old new binary"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.needs_binary_relocation:1
# 0cd18a563d5d442f8fb898206a7844dc
msgid "Check whether the given filetype is a binary that may need relocation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.needs_text_relocation:1
# 5d5758a1017146c7b99573c5c3eb48db
msgid "Check whether the given filetype is text that may need relocation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.relocate_binary:1
# bff6546e12f94a47894702daae7b8caa
msgid "Change old_dir to new_dir in RPATHs of elf or mach-o files Account for the case where old_dir is now a placeholder"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.relocate_links:1
# 04855f8de3c244e3ac9544b304b5f9ab
msgid "Replace old path with new path in link sources."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.relocate_links:3
# 4a7395ed54e14e3a8bd798560513415b
msgid "Links in ``path_names`` must link to absolute paths or placeholders."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.relocate_text:1
# 05cc4ad205b3479eadcb3a2c112bd675
msgid "Replace old path with new path in text file path_name"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.set_placeholder:1
# 932481de7cfc424d8f23edbd5c8f8728
msgid "return string of @'s with same length"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.strings_contains_installroot:1
# 8457b8ef3e7d4f37b7aeb7203e53eed7
msgid "Check if the file contain the install root string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/relocate.py:docstring of spack.relocate.substitute_rpath:1
# 53399bbeca704261befd8abc6d8b454f
msgid "Replace topdir with new_root_path RPATH list orig_rpath"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:273
# 4341adf6b9c54c13b942baa53d66a0c4
msgid "spack.repo module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.BadRepoError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.FailedConstructorError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.IndexError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.InvalidNamespaceError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.NoRepoConfiguredError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.UnknownEntityError:1
# d57d70ff05b048e4bffc98d60c746ee3
# d8d457345dc54aff8c1e733747c40fda
# 31cffb00c9bf499fa9d264c5bc505d11
# ae15f267537d43db96bdc142a8f1f1dd
# 6c5dc246dbb343c6972c3976e4c8fa80
# 8c785577ead94d0cbc119e30a2a2a7eb
msgid "Bases: :class:`spack.repo.RepoError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.BadRepoError:1
# e51d9ffe859d49b8a8af573d2309b25d
msgid "Raised when repo layout is invalid."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.FailedConstructorError:1
# 95305de368674148ba8bbf33b8d84661
msgid "Raised when a package's class constructor fails."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.FastPackageChecker:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndex:1
# d037702cbe5f4d33bbd19b2ce0550c4a
# 8db5b0f5d0d34d379776f28d19398c6f
msgid "Bases: :class:`collections.abc.Mapping`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.FastPackageChecker:1
# c3cafaff5b394d6a82027eee75dacb8a
msgid "Cache that maps package names to the stats obtained on the 'package.py' files associated with them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.FastPackageChecker:4
# 8b000af4698e4866b7e9d42f962d44ee
msgid "For each repository a cache is maintained at class level, and shared among all instances referring to it. Update of the global cache is done lazily during instance initialization."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.IndexError:1
# c04803226b5e48799ad66f589d5475c3
msgid "Raised when there's an error with an index."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer:1
# d179df6bacf646bc8c027a4bc5c49a06
msgid "Adaptor for indexes that need to be generated when repos are updated."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.needs_update:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.needs_update:1
# bdc2409eb1d0499f9276f17625a60d4a
# 92003a16d767429b841088e78166b9e4
msgid "Whether an update is needed when the package file hasn't changed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.needs_update:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.needs_update:3
# 1270ef8c8d7446d79c12d48a76a252ee
# 9691ea0624664a8a970f6b4b031bb85c
msgid "``True`` if this package needs its index     updated, ``False`` otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.needs_update:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.needs_update:5
# 587daf2b9291493696c71c101bc6fb27
# f66c1b9946a24d3b9476b418d26e8453
msgid "``True`` if this package needs its index"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.needs_update:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.needs_update:6
# 36ea8ac277f54683b9f0c71423534e7c
# b13b1abdd6c443d49feb85b0f63cad9c
msgid "updated, ``False`` otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.needs_update:9
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.needs_update:9
# c43b1519faab44b2af959f479ed12291
# 74eeee44896142e597042a0373b955a4
msgid "We already automatically update indexes when package files change, but other files (like patches) may change underneath the package file. This method can be used to check additional package-specific files whenever they're loaded, to tell the RepoIndex to update the index *just* for that package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.read:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.read:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.ProviderIndexer.read:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndexer.read:1
# 97c687407c134e21884984c46752bafa
# 0bc7ee1e859f46bdb306d88e87d708ba
# 978d9d81b7684ca996d0b71cafb51774
# 91d3a61cdd694ac6b7ebb5b6c4befa36
msgid "Read this index from a provided file object."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.update:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.update:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.ProviderIndexer.update:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndexer.update:1
# e47d469ed2f8420bb0f186647a578123
# e90582cca45a44b4ade85227d34643ae
# 492d79f9c81541a1835e105254d0ef0a
# 0b6f5d178e294a32af5d33fa1ba598c4
msgid "Update the index in memory with information about a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Indexer.write:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer.write:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.ProviderIndexer.write:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndexer.write:1
# 0b0723afc87146a5a07512d5f11bb998
# 87ed963d720142c28304d491fd258b82
# e280ab5ff8234e27a0fb8374a6a3bd61
# 365e75593a3d4a8985f07eaff8bf1cb3
msgid "Write the index to a file object."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.InvalidNamespaceError:1
# 504c3e3669084891a4048fbadaedbb50
msgid "Raised when an invalid namespace is encountered."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.NOT_PROVIDED:1
# 440e2278cb9648a9b8a96a9094ec515a
msgid "Guaranteed unused default value for some functions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.NoRepoConfiguredError:1
# 0c7a8fcabdfa46359f501b92b32a2d9c
msgid "Raised when there are no repositories configured."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.ProviderIndexer:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndexer:1
# 0a88edaece9e474a95c22f40dc5b4781
# d3235f19079644188b79d9e6a5e861b3
# 5e2502ae5bc54f4fbc85951766f9f650
msgid "Bases: :class:`spack.repo.Indexer`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.PatchIndexer:1
# a0c5d5960a02430c8f1e4c393c109862
msgid "Lifecycle methods for patch cache."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.ProviderIndexer:1
# 135775f94e7e4768b38f8f7d29288b46
msgid "Lifecycle methods for virtual package providers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo:1
# 2b0ed9938d4e4d4f839a83328ca1d45b
msgid "Class representing a package repository in the filesystem."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo:3
# 984a62c56c65413383b8acea31df580d
msgid "Each package repository must have a top-level configuration file called `repo.yaml`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo:6
# aaad1bdafc0e4ed9bd01227f8fe529d7
msgid "Currently, `repo.yaml` this must define:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo:11
# f8bd652c29ef4636b9e48a4b3896b908
msgid "`namespace`:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo:9
# 7b521d382cfd413f8a1a9a0e1ce5204c
msgid "A Python namespace where the repository's packages should live."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.all_package_names:1
# fbf416a8c26749a48bc504102aa310e7
msgid "Returns a sorted list of all package names in the Repo."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.all_packages:1
# 8b7f811090ed4445809c8e7d3ca9ca1a
msgid "Iterator over all packages in the repository."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.all_packages:3
# aa73b4b386c947bebf5137ede0bf3e93
msgid "Use this with care, because loading packages is slow."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.dirname_for_package_name:1
# d4e2a5e78e7849728b8f56d146df6146
msgid "Get the directory name for a particular package.  This is the directory that contains its package.py file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.dump_provenance:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.dump_provenance:1
# 516fae62991443e7ab1634ad25ebffc9
# c369fff3bdfc45b792a26845d7a507b7
msgid "Dump provenance information for a spec to a particular path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.dump_provenance:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.dump_provenance:3
# 9d6fcb120b00432ea24504a3d8bc4331
# 306e48ec9cf742188effa5113869ece3
msgid "This dumps the package file and any associated patch files. Raises UnknownPackageError if not found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.exists:1
# 0f6ebd7b6a9f4c13991d412ec04b7ad0
msgid "Whether a package with the supplied name exists."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.filename_for_package_name:1
# fbac0ddab6fa4ae0b529f3458ad3bb36
msgid "Get the filename for the module we should load for a particular package.  Packages for a Repo live in ``$root/<package_name>/package.py``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.filename_for_package_name:5
# ebe8d6595c1141d7b2b9ed54c6c8dee6
msgid "This will return a proper package.py path even if the package doesn't exist yet, so callers will need to ensure the package exists before importing."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.find_module:1
# f84350c1b8fb40358dd289007c0d3dea
msgid "Python find_module import hook."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.find_module:3
# c229797956a543a397a051297b1be968
msgid "Returns this Repo if it can load the module; None if not."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.get:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.get:1
# f8f5619df24f4b77b19f8561389ef18b
# 0b89088479f24c30b7d1985e239d8792
msgid "Returns the package associated with the supplied spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.get_pkg_class:1
# 80039c34e89f41c5b94d6aeecd89a329
msgid "Get the class for the package out of its module."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.get_pkg_class:3
# 74a96369f72948c397e78aeda52dc317
msgid "First loads (or fetches from cache) a module for the package. Then extracts the package class from the module according to Spack's naming convention."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.index:1
# ce95e5b2ae6f44ae8f345126ad90c15d
msgid "Construct the index for this repo lazily."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.is_prefix:1
# 1e74eb1e33db4199b729084ab7ec5aed
msgid "True if fullname is a prefix of this Repo's namespace."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.is_virtual:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.is_virtual:1
# 0d4ced0bab61425da96b036e441601e7
# 4c8136c157664af990a1df25a64ee328
msgid "True if the package with this name is virtual, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.last_mtime:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.last_mtime:1
# d2be730b1c4e4356902e87e857bf80cf
# 5e34b5a81ff5447d9c145c0187d22bef
msgid "Time a package file in this repo was last updated."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.load_module:1
# 5d4fded2b5554e15938f930c6ac6fcc7
msgid "Python importer load hook."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.load_module:3
# 83b8e5b1b1424b90b39d73244d4d77a0
msgid "Tries to load the module; raises an ImportError if it can't."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.patch_index:1
# 6223d79ec6024d73b574206bcfe5b66c
msgid "Index of patches and packages they're defined on."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.provider_index:1
# a41d83b87b5c45918c25c0f4aa0c7b8c
msgid "A provider index with names *specific* to this repo."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.purge:1
# 3e26303b3ba6401bb501a780b4a5db79
msgid "Clear entire package instance cache."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.real_name:1
# ce4738c4a0a14316892c84a4f48bd909
msgid "Allow users to import Spack packages using Python identifiers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.real_name:3
# eaef3dab190849859d85ac6138a6ca58
msgid "A python identifier might map to many different Spack package names due to hyphen/underscore ambiguity."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.real_name:7
# 5b93ad52e68a4350bf5becaf3fd5333b
msgid "Easy example:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.real_name:7
# 76b07ecdfb7344a7b65433444b5b98a7
msgid "num3proxy   -> 3proxy"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.real_name:10
# b9501a325ac44c7fa8fc2dd9aa46fcc5
msgid "Ambiguous:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.real_name:10
# 3db16ee396bd4bb1a454fb74b2cca23c
msgid "foo_bar -> foo_bar, foo-bar"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.real_name:12
# 56b7eacb1d80476da9e3e5a326a1a1cc
msgid "More ambiguous:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.real_name:13
# 4864fe8f0cb64eea9c5b3802a31b6527
msgid "foo_bar_baz -> foo_bar_baz, foo-bar-baz, foo_bar-baz, foo-bar_baz"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.Repo.tag_index:1
# da8322afce074c76a9ad32be50d23e55
msgid "Index of tags and which packages they're defined on."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoError:1
# 5d1db4485e3543edad739822d1d51069
msgid "Superclass for repository-related errors."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex:1
# 93ff18ebe9984e4ca4ac700311c07dc4
msgid "Container class that manages a set of Indexers for a Repo."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex:3
# 40b50f1b65134182bc82eb45120ce736
msgid "This class is responsible for checking packages in a repository for updates (using ``FastPackageChecker``) and for regenerating indexes when they're needed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex:7
# 25b33eacdde04cdb8aebfb7e11cb9657
msgid "``Indexers`` should be added to the ``RepoIndex`` using ``add_index(name, indexer)``, and they should support the interface defined by ``Indexer``, so that the ``RepoIndex`` can read, generate, and update stored indices."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex:12
# e5747ca601744a979b8f3dce7306c059
msgid "Generated indexes are accessed by name via ``__getitem__()``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex.add_indexer:1
# 322defaced114b88ac73d3ddc52691e6
msgid "Add an indexer to the repo index."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex.add_indexer:3
# 1f0a34706bc649b1af98bdd7ffa7e09a
msgid "name of this indexer"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoIndex.add_indexer:5
# 464ebdf80f6a4aef9a9f26b0a90a1de2
msgid "an object that supports create(), read(), write(), and get_index() operations"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath:1
# 6cb0b1e4e0a74bd9bd2e668af56c558b
msgid "A RepoPath is a list of repos that function as one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath:3
# 45d74b9ae1b947a5907676316e49e913
msgid "It functions exactly like a Repo, but it operates on the combined results of the Repos in its list instead of on a single package repository."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath:7
# 42e017102933475a8024b8785a5183fa
msgid "list Repo objects or paths to put in this RepoPath"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.all_package_names:1
# 7796588baa924361ac46956c25dce583
msgid "Return all unique package names in all repositories."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.exists:1
# 56dce81042ca48508aa7082c07c5d919
msgid "Whether package with the give name exists in the path's repos."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.exists:3
# d2dbf35a09b04687b37ca89fae25c6ce
msgid "Note that virtual packages do not \"exist\"."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.find_module:1
# 15c8a308df4442e3b3c0df7841a22c9c
msgid "Implements precedence for overlaid namespaces."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.find_module:3
# da3c86710b254d2ab636f32b67c66865
msgid "Loop checks each namespace in self.repos for packages, and also handles loading empty containing namespaces."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.first_repo:1
# 17d8d872f91d4b96ab947c2b7675dc7d
msgid "Get the first repo in precedence order."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.get_pkg_class:1
# 3df1371ee2ba4bf59170e79e2aaf029b
msgid "Find a class for the spec's package and return the class object."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.get_repo:1
# b08041ed77884f48a35001a567490bbc
msgid "Get a repository by namespace."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.get_repo:3
# 9820d705b14f4a1985f51fb899a81be3
msgid "Look up this namespace in the RepoPath, and return it if found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.get_repo:5
# 0a69b0702ccb444493d39ff93fa18642
msgid "Optional Arguments:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.get_repo:7
# 9b15a948fcc4498f8d3ef1dcd7f8380a
msgid "default:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.get_repo:9
# af957a6e98ee465eba8310e6263ae95b
msgid "If default is provided, return it when the namespace isn't found.  If not, raise an UnknownNamespaceError."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.load_module:1
# 84a2738897874c75a7f76e951f98710b
msgid "Handles loading container namespaces when necessary."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.load_module:3
# e2369eb7b1f344b79721485b84981f1c
msgid "See ``Repo`` for how actual package modules are loaded."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.patch_index:1
# cf09fddef5364a9a85595dd1c80bdd1e
msgid "Merged PatchIndex from all Repos in the RepoPath."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.provider_index:1
# d5d43ceee94e4877a710dac2fb165337
msgid "Merged ProviderIndex from all Repos in the RepoPath."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.put_first:1
# 65b8682e2ef64992afe56257c8e92457
msgid "Add repo first in the search path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.put_last:1
# 5ee1e240084f411cb310b11a3838ad8c
msgid "Add repo last in the search path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.remove:1
# 2b87d1498a9b4bef9a4fbbcdae0e3d1c
msgid "Remove a repo from the search path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.RepoPath.repo_for_pkg:1
# acab4352e63c4af5af3e3417abf8c784
msgid "Given a spec, get the repository for its package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.SpackNamespace:1
# 173b423b9dd24a31a1f077e9a50cad2e
msgid "Bases: :class:`module`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.SpackNamespace:1
# 0efb22e1e7124a8b8859a62a05357b38
msgid "Allow lazy loading of modules."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndex:1
# e16353a86b244336bc1d95b458aec83c
msgid "Maps tags to list of packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndex.update_package:1
# a54a5c5c863041e08b5f467c4b113450
msgid "Updates a package in the tag index."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndex.update_package:3
# c19d9973390049cb9c0d16395c0041d0
msgid "name of the package to be removed from the index"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.TagIndexer:1
# 36746f8c184944d0a0277cacacb30fc8
msgid "Lifecycle methods for a TagIndex on a Repo."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.UnknownEntityError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.UnknownPackageError:1
# 28b55ebda9904bb5b02cd9ba801d6b11
# 58a2df39d82f4f0692f02c046ed403c5
msgid "Raised when we encounter a package spack doesn't have."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.UnknownNamespaceError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.UnknownPackageError:1
# 6937f69f824b411dbc0b5c5c4afa8a19
# 442324d7892e4be6b0f0bf5fa0b66a61
msgid "Bases: :class:`spack.repo.UnknownEntityError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.UnknownNamespaceError:1
# 1a59c2352f3449aca85d82789fa0d5e1
msgid "Raised when we encounter an unknown namespace"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.additional_repository:1
# 1966d22cbdd24b03b0f68148a2067fb7
msgid "Adds temporarily a repository to the default one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.additional_repository:3
# 18defed4b0844d67a3abb00bff553ed3
msgid "repository to be added"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.all_package_names:1
# c12fd07b799f42f19e50ecd0d55c21ac
msgid "Convenience wrapper around ``spack.repo.all_package_names()``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.autospec:1
# a59f56dfaad44a938d444b539a6b9132
msgid "Decorator that automatically converts the first argument of a function to a Spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.create_or_construct:1
# 6e466146abec4745868f269a563ee943
msgid "Create a repository, or just return a Repo if it already exists."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.create_repo:1
# 11bd90c12f7a47de887addc3ece1ca24
msgid "Create a new repository in root with the specified namespace."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.create_repo:3
# 03ae3e71bbf5498dacc6de6d7ac0aabf
msgid "If the namespace is not provided, use basename of root. Return the canonicalized path and namespace of the created repository."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.get:1
# 708327ed027543dea7544bc430b63498
msgid "Convenience wrapper around ``spack.repo.get()``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.get_full_namespace:1
# dcad50bc48a344eba25585fe9901c3b1
msgid "Returns the full namespace of a repository, given its relative one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.path:1
# 673157597f334db995a375c66cb0220e
msgid "Singleton repo path instance"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.repo_namespace:1
# 5e3a0d85398544b2b978a1b1faff9854
msgid "Super-namespace for all packages. Package modules are imported as spack.pkg.<namespace>.<pkg-name>."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.set_path:1
# b2d04163508b4c4a964d5895dcd322b3
msgid "Set the path singleton to a specific value."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.set_path:3
# cc9977a9da1d4167a9e41e19ef7bad55
msgid "Overwrite ``path`` and register it as an importer in ``sys.meta_path`` if it is a ``Repo`` or ``RepoPath``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/repo.py:docstring of spack.repo.swap:1
# 755889cff1384a38a5359f5c26ef9a29
msgid "Temporarily use another RepoPath."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:281
# 3fdd90b8c9464aa3b65b5aa7febc9c97
msgid "spack.report module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report:1
# b71f2b1ed80f4d318bbd3402e28c416f
msgid "Tools to produce reports of spec installations"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.valid_formats:1
# 178c407bcdff450aae23ed0bfb843009
msgid "Allowed report formats"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:1
# e4a376ab797d4c6284cec094b9967887
msgid "Collects information to build a report while installing and dumps it on exit."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:4
# aa924db34d0e46feacf1a876f9577e80
msgid "If the format name is not ``None``, this context manager decorates PackageBase.do_install when entering the context and unrolls the change when exiting."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:8
# 442ed03119e542f295bdcaa3e0e96d7f
msgid "Within the context, only the specs that are passed to it on initialization will be recorded for the report. Data from other specs will be discarded."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:13
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:13
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:16
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:59
# 2dbb75ab297c472db4bc42d997ecef18
# f1d9ca02b15c42608e84135d0bf9bd44
# 6e23ca753fbf4c0ba2d94d3996a28b15
# a27adc4f92604673a28ef966ae472c3f
msgid "Examples"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:26
# cb5f0e33fd8443248fcba836b776ec01
msgid "one of the supported formats"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:28
# 67e96e2b314d4ecf9d0522f761078d30
msgid "args passed to spack install"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/report.py:docstring of spack.report.collect_info:31
# be7d2338683548aab3d0a6da1e038035
msgid ":exc:`ValueError` -- when ``format_name`` is not in ``valid_formats``"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:289
# 06f0608add1847d7a7b1d2c662149616
msgid "spack.reporter module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/reporter.py:docstring of spack.reporter.Reporter:1
# d95e9ce04b484f3dac0fd7d1b2cfa93b
msgid "Base class for report writers."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:297
# 48684da9628a4b238b6e90071e2ee6b0
msgid "spack.resource module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/resource.py:docstring of spack.resource:1
# 1b31ab6b9fc34354a63c957586aeff49
msgid "Describes an optional resource needed for a build."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/resource.py:docstring of spack.resource:3
# f80abb55a4574405b13832b3a4b9f923
msgid "Typically a bunch of sources that can be built in-tree within another package to enable optional features."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/resource.py:docstring of spack.resource.Resource:1
# 69d125ba19f548269996d9f3b55752f6
msgid "Represents an optional resource to be fetched by a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/resource.py:docstring of spack.resource.Resource:3
# a733592224b74e4fafdf2cdf3369ae24
msgid "Aggregates a name, a fetcher, a destination and a placement."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:305
# 5779787889b24073a9693a29b4878475
msgid "spack.spec module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:1
# 380ec4f48d4749cda7bad4e71c1e6bb5
msgid "Spack allows very fine-grained control over how packages are installed and over how they are built and configured.  To make this easy, it has its own syntax for declaring a dependence.  We call a descriptor of a particular package configuration a \"spec\"."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:6
# 67e37d91ca6f4feb86ddade1895d2432
msgid "The syntax looks like this:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:13
# 00edd910a76346448cf0067f17b8dfac
msgid "The first part of this is the command, 'spack install'.  The rest of the line is a spec for a particular installation of the mpileaks package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:16
# 46d82c7d9dea4011a5a861bb1b1b6549
msgid "The package to install"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:18
# f17540aa651e46a5bf2dcebe547704cc
msgid "A dependency of the package, prefixed by ^"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:20
# 5ece58a50bd544a58cf089a3095701b1
msgid "A version descriptor for the package.  This can either be a specific version, like \"1.2\", or it can be a range of versions, e.g. \"1.2:1.4\". If multiple specific versions or multiple ranges are acceptable, they can be separated by commas, e.g. if a package will only build with versions 1.0, 1.2-1.4, and 1.6-1.8 of mavpich, you could say:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:26
# 81a8673a99b040deb03d0dbcbaea434a
msgid "depends_on(\"mvapich@1.0,1.2:1.4,1.6:1.8\")"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:28
# c210c0b329b34dde84aa853d3fb861d0
msgid "A compile-time variant of the package.  If you need openmpi to be built in debug mode for your package to work, you can require it by adding +debug to the openmpi spec when you depend on it.  If you do NOT want the debug option to be enabled, then replace this with -debug."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:33
# 2f85d4afacab4af0ba45ae4cb33c9aba
msgid "The name of the compiler to build with."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:35
# 501f57d5eedb45c1ac2c66c7ef5adc54
msgid "The versions of the compiler to build with.  Note that the identifier for a compiler version is the same '@' that is used for a package version. A version list denoted by '@' is associated with the compiler only if if it comes immediately after the compiler name.  Otherwise it will be associated with the current package spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:41
# 542eacf08d504dc48f4d41dfac0c9b9a
msgid "The architecture to build with.  This is needed on machines where cross-compilation is required"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:44
# 315e56de032d48218efa452bb9296c2c
msgid "Here is the EBNF grammar for a spec::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:60
# 558d498b7d26471788189ec8e2d0a355
msgid "Identifiers using the <name>=<value> command, such as architectures and compiler flags, require a space before the name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:63
# 01d626fc97d5413bae46380a4f091e79
msgid "There is one context-sensitive part: ids in versions may contain '.', while other ids may not."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec:66
# a992462fd58846b8a179852000f2bb63
msgid "There is one ambiguity: since '-' is allowed in an id, you need to put whitespace space before -variant for it to be tokenized properly.  You can either use whitespace, or you can just use ~variant since it means the same thing.  Spack uses ~variant in directory names and in the canonical form of specs to avoid ambiguity.  Both are provided because ~ can cause shell expansion when it is the first character in an id typed on the command line."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.cformat:1
# f398619d66134844b250417c297f3df9
msgid "Same as format, but color defaults to auto instead of False."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.common_dependencies:1
# 7c620a9c249e407ea5399d2300020250
msgid "Return names of dependencies that self an other have in common."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concrete:1
# f61db0921fbe4bdebffe83a90e858fdc
msgid "A spec is concrete if it describes a single build of a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concrete:3
# 2d5ffa29ec7f41d597b9d702a29b050a
msgid "More formally, a spec is concrete if concretize() has been called on it and it has been marked `_concrete`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concrete:6
# d9a4201faa5f4f31ad593dc495c39783
msgid "Concrete specs either can be or have been built. All constraints have been resolved, optional dependencies have been added or removed, a compiler has been chosen, and all variants have values."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concretize:1
# 35456464b2de44ba941877b93d3e5e36
msgid "A spec is concrete if it describes one build of a package uniquely. This will ensure that this spec is concrete."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concretize:4
# c94156d2391e43318d4b3462ef256e71
msgid "list of packages that will need test dependencies, or True/False for test all/none"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concretize:8
# 7e7d65d89f9d4b88aa3df93058c1c964
msgid "If this spec could describe more than one version, variant, or build of a package, this will add constraints to make it concrete."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concretize:11
# c906d853122944e382b09b95c9db17b2
msgid "Some rigorous validation and checks are also performed on the spec. Concretizing ensures that it is self-consistent and that it's consistent with requirements of its packages. See flatten() and normalize() for more details on this."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.concretized:1
# 5ec8619abd2f47c6968acc39f90d2ffa
msgid "This is a non-destructive version of concretize().  First clones, then returns a concrete version of this package without modifying this package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.constrain:1
# 92fb8d97b4ec48de897735192dc46158
msgid "Merge the constraints of other with self."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.constrain:3
# f08eac4976df41ac94999bf5f9dac793
msgid "Returns True if the spec changed as a result, False if not."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.constrained:1
# db1a9f6f71a84be18491c5b96b01082d
msgid "Return a constrained copy without modifying this spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:1
# 15c76e18e53d41909778175213149641
msgid "Make a copy of this spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:3
# 92d6123986a3495b875acf695bfc1549
msgid "Defaults to True. If boolean, controls whether dependencies are copied (copied if True). If a tuple is provided, *only* dependencies of types matching those in the tuple are copied."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:8
# ec49dd9ac4a74c7eb7318fe32d03836d
msgid "additional arguments for internal use (passed to ``_dup``)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:10
# 717c2d9a3f13478797672dab349f5971
msgid "A copy of this spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:14
# 69813635148045d58b7b6993620dc2df
msgid "Deep copy with dependnecies::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:19
# 09aa138dacbe49de998d36d58be1c1d5
msgid "Shallow copy (no dependencies)::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.copy:23
# 0c6a8d151cb046258aa4eee00f74e1cf
msgid "Only build and run dependencies::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.cshort_spec:1
# da9e0d9f68ea4039917fea7ce6c196ff
msgid "Returns an auto-colorized version of ``self.short_spec``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.dag_hash:1
# 57bc601157ed4e7592b88ff638d0ff0e
msgid "Return a hash of the entire spec DAG, including connectivity."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.dag_hash_bit_prefix:1
# 4df090ca249c4622a765080bc6ad3ac2
msgid "Get the first <bits> bits of the DAG hash as an integer type."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.dep_difference:1
# bdbb22841c6445219891ad1f4f4f13d6
msgid "Returns dependencies in self that are not in other."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.eq_dag:1
# 19796f4daa374f46be6d1a5c77131168
msgid "True if the full dependency DAGs of specs are equal."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.eq_node:1
# 9a431c0703e34450825650d1d752f4da
msgid "Equality with another spec, not including dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.flat_dependencies:1
# ab3f4639032b4f3781b0733d749362d9
msgid "Return a DependencyMap containing all of this spec's dependencies with their constraints merged."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.flat_dependencies:4
# dab2a5e65e8d4fdba7e0c3d69385ba03
msgid "If copy is True, returns merged copies of its dependencies without modifying the spec it's called on."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.flat_dependencies:7
# 028f923263f443ca8ea7515a4a307e8a
msgid "If copy is False, clears this spec's dependencies and returns them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:1
# 1fffae76f31a47ea804aa83c0ec4b073
msgid "Prints out particular pieces of a spec, depending on what is in the format string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:4
# c948f7a34a484014aa4aafd90beccd48
msgid "Using the ``{attribute}`` syntax, any field of the spec can be selected.  Those attributes can be recursive. For example, ``s.format({compiler.version})`` will print the version of the compiler."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:9
# 29e417073b0540a1a6ca06e38439d874
msgid "Commonly used attributes of the Spec for format strings include::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:24
# 34eaf940e681485699203bbad1ca2715
msgid "Some additional special-case properties can be added::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:30
# 03b3ba716c6a4cd0b4a4f949408db78e
msgid "The ``^`` sigil can be used to access dependencies by name. ``s.format({^mpi.name})`` will print the name of the MPI implementation in the spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:34
# 0c500299ee9e497ab2fcce49015b86e4
msgid "The ``@``, ``%``, ``arch=``, and ``/`` sigils can be used to include the sigil with the printed string. These sigils may only be used with the appropriate attributes, listed below::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:44
# 14f325c0b87345a493a192d7b5d53968
msgid "The ``@`` sigil may also be used for any other property named ``version``. Sigils printed with the attribute string are only printed if the attribute string is non-empty, and are colored according to the color of the attribute."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:49
# d902622bc64842faa61ff29bf4b8b67b
msgid "Sigils are not used for printing variants. Variants listed by name naturally print with their sigil. For example, ``spec.format('{variants.debug}')`` would print either ``+debug`` or ``~debug`` depending on the name of the variant. Non-boolean variants print as ``name=value``. To print variant names or values independently, use ``spec.format('{variants.<name>.name}')`` or ``spec.format('{variants.<name>.value}')``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:58
# b62d4e17b9e04351b2cbfbea6de8c165
msgid "Spec format strings use ``\\`` as the escape character. Use ``\\{`` and ``\\}`` for literal braces, and ``\\\\`` for the literal ``\\`` character. Also use ``\\$`` for the literal ``$`` to differentiate from previous, deprecated format string syntax."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:64
# 13e6bebd25a84752aaff73fda95abf5a
msgid "The previous format strings are deprecated. They can still be accessed by the ``old_format`` method. The ``format`` method will call ``old_format`` if the character ``$`` appears unescaped in the format string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:70
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:50
# d4997d13f9454d6a9748d2f92ade520d
# 75a31414715d41e0b681b1420fc4bd6b
msgid "string containing the format to be expanded"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:73
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:53
# cccb6b1f24e7445087a0380752e986a3
# b56dc866020b4dad8a2f1d14fc96fb89
msgid "True if returned string is colored"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.format:75
# 22b3c3a99db94d7299290a71ed241787
msgid "maps full-string formats to a callable \\ that accepts a string and returns another one"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_dict:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_yaml:1
# b67c1ce4f9a449cda5e0e0b9f482b766
# 5eaf843c5b7a4f1f85497fc13caa5d32
msgid "Construct a spec from YAML."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_dict:3
# d22acb3ce2944cc688b91123d41b7565
msgid "Parameters: data -- a nested dict/list data structure read from YAML or JSON."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_json:1
# 249a418f57e64e30aad123001b19c7e2
msgid "Construct a spec from JSON."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_json:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_yaml:3
# 84661209474847f4ba2a9be73fcd259e
# 3bb1b8a35e5c4ad68d06befa0efb7a2f
msgid "Parameters: stream -- string or file object to read from."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:1
# e9bb5c216b3e4e689951f39e8afbacb1
msgid "Builds a Spec from a dictionary containing the spec literal."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:3
# 0fc90ee760d9493b9b5404225b3fc3e1
msgid "The dictionary must have a single top level key, representing the root, and as many secondary level keys as needed in the spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:6
# 06d09bb5eb084b88a5d42ba4dfdd9626
msgid "The keys can be either a string or a Spec or a tuple containing the Spec and the dependency types."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:9
# 26d7935bc1e141759c400d96b0b667a0
msgid "the dictionary containing the spec literal"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:11
# c184b3e0db6d49c7b690b551eaa4bd40
msgid "if True the same key appearing at different levels of the ``spec_dict`` will map to the same object in memory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:17
# 3765497985464a00bda5bee63d363472
msgid "A simple spec ``foo`` with no dependencies:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:23
# 6b15b3c38733480c8b393ba61ba5b0ea
msgid "A spec ``foo`` with a ``(build, link)`` dependency ``bar``:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:30
# 19a96b50e51b480bb4a038c43eaf9373
msgid "A spec with a diamond dependency and various build types:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:43
# e3597f8a1ce44e9689c338c28122cd14
msgid "The same spec with a double copy of ``dt-diamond-bottom`` and no diamond structure:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.from_literal:57
# 3546b46352984251b2b3eab8775e307d
msgid "Constructing a spec using a Spec object as key:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.index:1
# 6da756d44fd64f1fba5e9a4c6545b940
msgid "Return DependencyMap that points to all the dependencies in this spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.install_status:1
# 09c394668e4c48f2ae8768b9045f0d28
msgid "Helper for tree to print DB install status."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.is_virtual:1
# cd9428849e6b4033a556b7460d5d8fa3
msgid "Test if a name is virtual without requiring a Spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.ne_dag:1
# 01422e28cfaf4eb88116968159ee34ab
msgid "True if the full dependency DAGs of specs are not equal."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.ne_node:1
# 9e80cb8f5d43443f908dde58cbe20295
msgid "Inequality with another spec, not including dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.normalize:1
# 37b80a36457f4698a9e7a58177e8a688
msgid "When specs are parsed, any dependencies specified are hanging off the root, and ONLY the ones that were explicitly provided are there. Normalization turns a partial flat spec into a DAG, where:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.normalize:5
# 90112dee6d1645f69062874550d9fcf8
msgid "Known dependencies of the root package are in the DAG."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.normalize:6
# 533b9e2624214338b4b197a781cab69b
msgid "Each node's dependencies dict only contains its known direct deps."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.normalize:8
# 96d9ed8f7f48438dba29e84a82c21bbe
msgid "There is only ONE unique spec for each package in the DAG."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.normalize:10
# e1f1b477af3c4d3783bcaee539db5013
msgid "This includes virtual packages.  If there a non-virtual package that provides a virtual package that is in the spec, then we replace the virtual package with the non-virtual one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.normalize:14
# 9962b26d015641798cf3b9cd43c0ff18
msgid "TODO: normalize should probably implement some form of cycle detection, to ensure that the spec is actually a DAG."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.normalized:1
# 907ecf08721946349c3653b49fe58cde
msgid "Return a normalized copy of this spec without modifying this spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:1
# fb6074daea0844cda58ca40c55803ebd
msgid "The format strings you can provide are::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:16
# d020ab2940f74f849bf4e763b89eb714
msgid "You can also use full-string versions, which elide the prefixes::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:41
# 72a965072dc84f1d86bed06281384fd4
msgid "Note these are case-insensitive: for example you can specify either ``${PACKAGE}`` or ``${package}``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:44
# 78e7bdeec47446859cc4a8e774c79a60
msgid "Optionally you can provide a width, e.g. ``$20_`` for a 20-wide name. Like printf, you can provide '-' for left justification, e.g. ``$-20_`` for a left-justified name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:48
# 1c4d54672c424997bc66475de1274517
msgid "Anything else is copied verbatim into the output stream."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:55
# ed11def2f67342efa4bce9eb1ee947bb
msgid "maps full-string formats to a callable                 that accepts a string and returns another one"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:60
# 225aa28c7bdb4050b524f759a8fdf1b1
msgid "The following line:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:66
# 67d0cab167ad4e1fab74735999b28599
msgid "translates to the name, version, and options of the package, but no dependencies, arch, or compiler."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.old_format:69
# 4316dcb7705546a485652150055af65b
msgid "TODO: allow, e.g., ``$6#`` to customize short hash length TODO: allow, e.g., ``$//`` for full hash."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.package_class:1
# a6e0f8b15c214d04b79e4b1ef306a7c3
msgid "Internal package call gets only the class object for a package. Use this to just get package metadata."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.patches:1
# e8c6f1c1de16421ab401e586a0117ae4
msgid "Return patch objects for any patch sha256 sums on this Spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.patches:3
# fc158de6ea62446b8da7a61531fbe2ec
msgid "This is for use after concretization to iterate over any patches associated with this spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.patches:6
# 1845a4ee77f94711905230529b488d6a
msgid "TODO: this only checks in the package; it doesn't resurrect old patches from install directories, but it probably should."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.read_yaml_dep_specs:1
# c497bd369c714533a869e1ee1c3ddaf9
msgid "Read the DependencySpec portion of a YAML-formatted Spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.read_yaml_dep_specs:3
# b73ed752afd84fe7a068e69369822d2f
msgid "This needs to be backward-compatible with older spack spec formats so that reindex will work on old specs/databases."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.root:1
# 34e8980ce11b44e596eac6f1ffaf7968
msgid "Follow dependent links and find the root of this spec's DAG."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.root:3
# de2bd2919cb1493d97df7fee04cabea4
msgid "Spack specs have a single root (the package being installed)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.satisfies:1
# 549c22eda291499b9795c49c6e246f01
msgid "Determine if this spec satisfies all constraints of another."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.satisfies:3
# 063baed3ff734b28a9bbdece8d035dec
msgid "There are two senses for satisfies:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.satisfies:5
# 8d41c3c9a761457495e6f73f9c2d8b59
msgid "`loose` (default): the absence of a constraint in self implies that it *could* be satisfied by other, so we only check that there are no conflicts with other for constraints that this spec actually has."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.satisfies:10
# 0696888e4bfb440f82caa6bd8d5a3385
msgid "`strict`: strict means that we *must* meet all the constraints specified on other."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.satisfies_dependencies:1
# 3aa1c0b7a99b404f82faf8af80a163a1
msgid "This checks constraints on common dependencies against each other."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.short_spec:1
# 23fcef816175488c8f94de9ed53c8146
msgid "Returns a version of the spec with the dependencies hashed instead of completely enumerated."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.sorted_deps:1
# bbfeda9e54fd47f09abca9638b3cb048
msgid "Return a list of all dependencies sorted by name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:1
# 0b571c992bb6463ea424919d3204558a
msgid "Generic traversal of the DAG represented by this spec. This will yield each node in the spec.  Options:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:11
# e437d3eaee4541a0be2cfe837663f3ea
msgid "order    [=pre|post]"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:5
# 46abac17dd9e4bbb8e21c0b6cbfedca6
msgid "Order to traverse spec nodes. Defaults to preorder traversal. Options are:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:8
# 322964c6eb7a4b27b8ff79bbee600361
msgid "'pre':  Pre-order traversal; each node is yielded before its"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:9
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:11
# bc62cd44f2374f9186b46dac90f6353a
# e6e88351c5bc49fc8a3986485a102203
msgid "children in the dependency DAG."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:11
# 910f6bc9fa424a90a24750b74abf95ec
msgid "'post': Post-order  traversal; each node is yielded after its"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:23
# fd121302b1674f66980a69bb616b8ab0
msgid "cover    [=nodes|edges|paths]"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:14
# 599577b3fa8a4abaa6b2ea08c58aa127
msgid "Determines how extensively to cover the dag.  Possible values:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:16
# b251de9f2fa24a93b441b972eeb94449
msgid "'nodes': Visit each node in the dag only once.  Every node"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:17
# 00d7d0f1cc44453e9b04e83d1c4fdc60
msgid "yielded by this function will be unique."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:19
# 5b23fab11acc4f1eaad3bff0cbab8030
msgid "'edges': If a node has been visited once but is reached along a"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:19
# daa0326826aa4920ba5bf453779905d1
msgid "new path from the root, yield it but do not descend into it.  This traverses each 'edge' in the DAG once."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:23
# aeffd55024ce481283d76f21fe6a077e
msgid "'paths': Explore every unique path reachable from the root."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:22
# d35f86adcf054945b2937d1837b45bfa
msgid "This descends into visited subtrees and will yield nodes twice if they're reachable by multiple paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:28
# 3ba341629b5145448216aa12304d5177
msgid "depth    [=False]"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:26
# 4a1c4c398a3f4791b58b2e37f99f8328
msgid "Defaults to False.  When True, yields not just nodes in the spec, but also their depth from the root in a (depth, node) tuple."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:32
# 105b43b9169d48ac8ba1e470b2adc0a2
msgid "key   [=id]"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:31
# ada6a9e00326483897e8032ee0ca1771
msgid "Allow a custom key function to track the identity of nodes in the traversal."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:35
# d3e64208ad4b44de90defbab8c5ac3fe
msgid "root     [=True]"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:35
# 0a4cdacb0d0c4868b9d8927e0456da4c
msgid "If False, this won't yield the root node, just its descendents."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:38
# 9568db958f5b46fbb9a84d4648ce368e
msgid "direction [=children|parents]"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.traverse_edges:38
# 1ac725ece6624b629612f72522d536d2
msgid "If 'children', does a traversal of this spec's children.  If 'parents', traverses upwards in the DAG towards the root."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.tree:1
# dcf13c33caad42ebaf4f71845fc71812
msgid "Prints out this spec and its dependencies, tree-formatted with indentation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.validate_or_raise:1
# 3109f718f8fc4145a0cd529c7acb58ed
msgid "Checks that names and values in this spec are real. If they're not, it will raise an appropriate exception."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.virtual:1
# a89e31ccc7e74b4b866ed472339ff31a
msgid "Right now, a spec is virtual if no package exists with its name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.virtual:3
# 4a9d73b6b9b74461ade1cafaba517eef
msgid "TODO: revisit this -- might need to use a separate namespace and be more explicit about this. Possible idea: just use conventin and make virtual deps all caps, e.g., MPI vs mpi."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.Spec.virtual_dependencies:1
# 56ddb84dca744bec852a2e535e41740b
msgid "Return list of any virtual deps in this spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.parse:1
# dd9a5b1a411243209a39c7d8cba82278
msgid "Returns a list of specs from an input string. For creating one spec, see Spec() constructor."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.parse_anonymous_spec:1
# 459c117ade204b36bbf7a31d6f8fb725
msgid "Allow the user to omit the package name part of a spec if they know what it has to be already."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.parse_anonymous_spec:4
# 77f65b50f6ec402fbc7b4f5c5a208fe5
msgid "e.g., provides('mpi@2', when='@1.9:') says that this package provides MPI-3 when its version is higher than 1.9."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.SpecParseError:1
# 74e48850ac5f491999122a5642ad75df
msgid "Wrapper for ParseError for when we're parsing specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.DuplicateDependencyError:1
# ba89c5e8919c49c5b814603c69b08b1a
msgid "Raised when the same dependency occurs in a spec twice."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.spec.DuplicateVariantError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DuplicateVariantError:1
# 77506a0fe867407dab22d1e89429fd7a
# be63bf7128ba4395bd06c6b7bc907a4b
msgid "Raised when the same variant occurs in a spec twice."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.DuplicateCompilerSpecError:1
# 7510aa2165664b5587f95619a6c18323
msgid "Raised when the same compiler occurs in a spec twice."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsupportedCompilerError:1
# fccde4d999dd4d28a549491cd278d7fc
msgid "Raised when the user asks for a compiler spack doesn't know about."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.spec.UnknownVariantError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.UnknownVariantError:1
# 25f1042b21a14b35b406a4049537fe1d
# 360cd7e3aded420c81e75f5eae73fae3
msgid "Raised when an unknown variant occurs in a spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.DuplicateArchitectureError:1
# 0825c3f12e664bc18ed65594e6666b28
msgid "Raised when the same architecture occurs in a spec twice."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.InconsistentSpecError:1
# d2fb4c0c94a04f0586e9219916ab9e72
msgid "Raised when two nodes in the same spec DAG have inconsistent constraints."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.InvalidDependencyError:1
# 3bb7701be3e3430b9906af06c3cdc5e7
msgid "Raised when a dependency in a spec is not actually a dependency of the package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.NoProviderError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.MultipleProviderError:1
# d5482bbd0bfc4dfbbff264e31e3dbe55
# b597af4c9a8a47e0b3652f3f3a33e59c
msgid "Raised when there is no package that provides a particular virtual dependency."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableSpecNameError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableVersionSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableCompilerSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.spec.UnsatisfiableVariantSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableCompilerFlagSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableArchitectureSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableProviderSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableDependencySpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.UnsatisfiableVariantSpecError:1
# cb13c6b88d084dc98ba98dcc20f7f280
# 2ded080632374feb86a89a4a4b2018ce
# 54da729703bd408988af97623f31fbc2
# 7bb4478b03734a11a5d6d69a3c42e334
# b1c23e307f25403bbfc560c5c0ae602b
# e302a33f1a464a1fb3ddae44dff563a3
# a1ad67ea75d540f4bdd6c08cfdc4e762
# 1073c5a644e140a191a29d9ca365d229
# 5e9f4e967a4942ecbbd80343f8e4cb2a
msgid "Bases: :class:`spack.error.UnsatisfiableSpecError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableSpecNameError:1
# fd407d539e3b46e896b3b81751a5e943
msgid "Raised when two specs aren't even for the same package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableVersionSpecError:1
# 12c6d0dbb3084ba687f5c0fa8aac031a
msgid "Raised when a spec version conflicts with package constraints."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableCompilerSpecError:1
# 45b9c54f9931407fb257c02e464cf6f7
msgid "Raised when a spec comiler conflicts with package constraints."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.spec.UnsatisfiableVariantSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableCompilerFlagSpecError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.UnsatisfiableVariantSpecError:1
# a485b35d7b7d4ec3be0182af944af74e
# fd7ca0d56a3a443ea0377341209ba970
# 954668c54c7a46669500df92699dd18a
msgid "Raised when a spec variant conflicts with package constraints."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableArchitectureSpecError:1
# cf0ee966c56a404db75881a6c337e9e4
msgid "Raised when a spec architecture conflicts with package constraints."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableProviderSpecError:1
# 295f0c4454c3401ab81cb57f6ca4da80
msgid "Raised when a provider is supplied but constraints don't match a vpkg requirement"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec.py:docstring of spack.spec.UnsatisfiableDependencySpecError:1
# 2057130db124448f85694f6df43669fc
msgid "Raised when some dependency of constrained specs are incompatible"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:313
# e64d7ee3147d426dbf4a3d0214d17e6f
msgid "spack.spec\\_set module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec_set.py:docstring of spack.spec_set.CombinatorialSpecSet:1
# df08b6f3cb3c48919302d23652cac1da
msgid "Set of combinatorial Specs constructed from YAML file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/spec_set.py:docstring of spack.spec_set.CombinatorialSpecSet.all_package_versions:1
# dd1737162fe147c8852f64b9e1555f49
msgid "Get package/version combinations for all spack packages."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:321
# 01fd85dc53384774aa662b47bf67c7de
msgid "spack.stage module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.DIYStage:1
# e2184b92dbb646b3b6a577213155d785
msgid "Simple class that allows any directory to be a spack stage."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.ResourceStage:1
# 1ed2bba92d5746daa5df2cda81d22dd5
msgid "Bases: :class:`spack.stage.Stage`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.ResourceStage.expand_archive:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.expand_archive:1
# 954688d88fc64007a397b0377f7220e6
# 0364df252aa8415f86d677cc24811676
msgid "Changes to the stage directory and attempt to expand the downloaded archive.  Fail if the stage is not set up or if the archive is not yet downloaded."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.ResourceStage.restage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.restage:1
# 6715a0e8eedf4820bf3b596f4da7f5b0
# a4959ac5608a496a809aa1e893812c0e
msgid "Removes the expanded archive path if it exists, then re-expands the archive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.RestageError:1
# ec8694a4b1bc47e6832189c4b34f0ece
msgid "Bases: :class:`spack.stage.StageError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.RestageError:1
# ca92ed35853e4d6e9de48842c88a34cb
msgid "\"Error encountered during restaging."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage:1
# d92b16dd4aa0451dad8fb949daa6b0af
msgid "Manages a temporary stage directory for building."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage:3
# 6cadc082f87b4d45bdb2a47187133b2d
msgid "A Stage object is a context manager that handles a directory where some source code is downloaded and built before being installed. It handles fetching the source code, either as an archive to be expanded or by checking it out of a repository.  A stage's lifecycle looks like this::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage:16
# f8ca8bdcad6d43d6abb76378753c16b0
msgid "When used as a context manager, the stage is automatically destroyed if no exception is raised by the context. If an excpetion is raised, the stage is left in the filesystem and NOT destroyed, for potential reuse later."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage:21
# 8e9e14bb9d974bfaa027a0e1b28e2402
msgid "You can also use the stage's create/destroy functions manually, like this::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage:34
# 37bac18ab339486f8126f866f7582e8a
msgid "There are two kinds of stages: named and unnamed.  Named stages can persist between runs of spack, e.g. if you fetched a tarball but didn't finish building it, you won't have to fetch it again."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage:38
# 6fa2e10a8ea14abc8bea64c7f0e9ac9a
msgid "Unnamed stages are created using standard mkdtemp mechanisms or similar, and are intended to persist for only one run of spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.create:1
# 12ede934cf3a48fba9b21e03cb5c34cb
msgid "Creates the stage directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.create:3
# b0481e537f3041ecaf6bcb9ea2e81206
msgid "If get_tmp_root() is None, the stage directory is created directly under spack.paths.stage_path, otherwise this will attempt to create a stage in a temporary directory and link it into spack.paths.stage_path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.destroy:1
# e249ba6f5b9c4b079b586ac9d9631bb7
msgid "Removes this stage directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.expected_archive_files:1
# 047cb0cd4aab472ba5c215ebe3d74bc2
msgid "Possible archive file paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.fetch:1
# d812e6546f5d44a5924cf17a75469a8f
msgid "Downloads an archive or checks out code from a repository."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.source_path:1
# e552532c91e445dd92622c21c5c42d03
msgid "Returns the path to the expanded/checked out source code."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.source_path:3
# 6ee55d42f21b405b8ea0316f04b10377
msgid "To find the source code, this method searches for the first subdirectory of the stage that it can find, and returns it. This assumes nothing besides the archive file will be in the stage path, but it has the advantage that we don't need to know the name of the archive or its contents."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.Stage.source_path:9
# 67b7dd1e0d8c4b4ca569d368170896f5
msgid "If the fetch strategy is not supposed to expand the downloaded file, it will just return the stage path. If the archive needs to be expanded, it will return None when no archive is found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.StageError:1
# 7e67288851e741488c9b90fdcaf1bf68
msgid "\"Superclass for all errors encountered during staging."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.ensure_access:1
# 12a9a289ea254c1c93f358d0d9992306
msgid "Ensure we can access a directory and die with an error if we can't."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/stage.py:docstring of spack.stage.purge:1
# f8922e0a742e4ab2b9e26a318b0f49eb
msgid "Remove all build directories in the top-level stage path."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:329
# 98f0b1438dc14e18bd64e679a21e69fd
msgid "spack.store module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store:1
# 5dc3a9212c3e475e9778357c3fa12312
msgid "Components that manage Spack's installation tree."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store:3
# 5d13803cbebb4c52b2e5d1309fe971c2
msgid "An install tree, or \"build store\" consists of two parts:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store:5
# d9f29adbe72f4193952af8c27c399c6f
msgid "A package database that tracks what is installed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store:6
# 5349619bae11400b83cdd69a4c960865
msgid "A directory layout that determines how the installations are laid out."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store:9
# c86c434ec9c14623aaaad5278df8f821
msgid "The store contains all the install prefixes for packages installed by Spack.  The simplest store could just contain prefixes named by DAG hash, but we use a fancier directory layout to make browsing the store and debugging easier."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store:14
# a288057a7d1b497bae37b0c05c42aa16
msgid "The directory layout is currently hard-coded to be a YAMLDirectoryLayout, so called because it stores build metadata within each prefix, in `spec.yaml` files. In future versions of Spack we may consider allowing install trees to define their own layouts with some per-tree configuration."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.Store:1
# f11d82408b324d9c8fcb1985964af84b
msgid "A store is a path full of installed Spack packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.Store:3
# c3efb677181f4765b06e514fd215efee
msgid "Stores consist of packages installed according to a ``DirectoryLayout``, along with an index, or _database_ of their contents.  The directory layout controls what paths look like and how Spack ensures that each uniqe spec gets its own unique directory (or not, though we don't recommend that). The database is a signle file that caches metadata for the entire Spack installation.  It prevents us from having to spider the install tree to figure out what's there."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.Store:11
# fdf73222853d4aef806b85be1427ecec
msgid "path to the root of the install tree"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.Store:13
# f1e7b01d97cd42eda0db9c6070782118
msgid "expression according to guidelines in ``spack.util.path`` that describes how to construct a path to a package prefix in this store"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.Store:17
# 3b2cfedad8d844e3a7edbf565b3dbc82
msgid "length of the hashes used in the directory layout; spec hash suffixes will be truncated to this length"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.Store.reindex:1
# d94e18a551b74df4aad1d8840be61469
msgid "Convenience function to reindex the store DB with its own layout."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.default_root:1
# f7f210aff7ec473b928c21e542b18230
msgid "default installation root, relative to the Spack install path"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/store.py:docstring of spack.store.store:1
# f83978e5f36540dca4150d94d9ccd454
msgid "Singleton store instance"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:337
# 8169885165ae4a2e8838307bf49de7b3
msgid "spack.tengine module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.Context:1
# a3a9a46f4df64543a6ddd83a9060e404
msgid "Base class for context classes that are used with the template engine."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.Context.to_dict:1
# cd73d924642c4c08a898ae40ee7ab276
msgid "Returns a dictionary containing all the context properties."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.ContextMeta:1
# 4186b859296e4f4f9619e2a8ad825511
msgid "Meta class for Context. It helps reducing the boilerplate in client code."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.ContextMeta.context_property:1
# 83b5250f1d5448b1b9a092fc32d1db0a
msgid "Decorator that adds a function name to the list of new context properties, and then returns a property."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.context_property:1
# 1687de91f79b480bb14aa932143647c9
msgid "A saner way to use the decorator"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.make_environment:1
# 028d10922df54b7daf67cf018e0f4973
msgid "Returns an configured environment for template rendering."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.prepend_to_line:1
# cf8f6724beb64e30a43b8f5055d908af
msgid "Prepends a token to each line in text"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/tengine.py:docstring of spack.tengine.quote:1
# 32982a94c821479996ce8d41d56e4786
msgid "Quotes each line in text"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:345
# 62f0c340668c4e7aa65c77b2bf990a2f
msgid "spack.url module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url:1
# bdd343ce71964965b0b49373b9ad013b
msgid "This module has methods for parsing names and versions of packages from URLs. The idea is to allow package creators to supply nothing more than the download location of the package, and figure out version and name information from there."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url:6
# 1b9e33f6694040c882062f4544a08731
msgid "**Example:** when spack is given the following URL:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url:8
# 771f6233f33c46d588c0f5f8afb5d453
msgid "https://www.hdfgroup.org/ftp/HDF/releases/HDF4.2.12/src/hdf-4.2.12.tar.gz"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url:10
# 50ebaf9bfb3e4bba89e922ba81030461
msgid "It can figure out that the package name is ``hdf``, and that it is at version ``4.2.12``. This is useful for making the creation of packages simple: a user just supplies a URL and skeleton code is generated automatically."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url:14
# 79fd5528573a4c4d9cd82d49e465f8a3
msgid "Spack can also figure out that it can most likely download 4.2.6 at this URL:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url:16
# eda6e45ad4cf44848c51056cb1f35493
msgid "https://www.hdfgroup.org/ftp/HDF/releases/HDF4.2.6/src/hdf-4.2.6.tar.gz"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url:18
# 90a1c8af184f409aa654023f1d2c1087
msgid "This is useful if a user asks for a package at a particular version number; spack doesn't need anyone to tell it where to get the tarball even though it's never been told about that version before."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.UndetectableNameError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.UndetectableVersionError:1
# de6434e1310e4833847e8c28b8bb30ab
# 66898a4ecf4d492aa64c89aa7deb43e6
msgid "Bases: :class:`spack.url.UrlParseError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.UndetectableNameError:1
# 58276cc84f9d4d0e80d5ea20cc4ae742
msgid "Raised when we can't parse a package name from a string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.UndetectableVersionError:1
# b56d89e374864dc4981b3950b074a8a0
msgid "Raised when we can't parse a version from a string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.UrlParseError:1
# 526c891b19bb4a01a0804f7577e6755f
msgid "Raised when the URL module can't parse something correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:1
# 59e66562ac1347ef93f039ba8eb9da52
msgid "Color the parts of the url according to Spack's parsing."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:8
# 29dd0f43cb364f0fb9cd0a53036b52b9
msgid "Colors are:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:0
# 0f3a995e885e48ffb2aea61ac50ebbd8
msgid "Cyan: The version found by :func:`parse_version_offset`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:0
# e2d6798fd8364fdeba97ae8ee3aceb9d
msgid "Red:  The name found by :func:`parse_name_offset`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:0
# 794284a6f8b34316a1a85fe675d6f14d
msgid "Green:   Instances of version string from :func:`substitute_version`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:0
# 4f1099c52b024e3facc478e6d1d3f107
msgid "Magenta: Instances of the name (protected from substitution)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:10
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:18
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:15
# 0ea8e00bacca43beb4c6d968ac7d8cde
# 30237222707c4825a8437308fd038d7c
# 92ea987ce1944709a4c4fcf4dad1550a
# 649988bdf93c4f44b68688aa44bff25f
# 024e7e0c23ea4826b71f6406b9d050fe
# 99744521b4d247f89d944b9e0b9d0937
# 1d79c761f1aa4a5d8967355a35f48069
# afffd5f6afd545faad46363c33c3f617
msgid "The filename or URL for the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:12
# eb3f07dc91654a64940ec7f09ba8985e
msgid "Append parse errors at end of string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.color_url:14
# f26913eef1654ae0b7c231f26333e4ff
msgid "Color substitutions as well as parsed name/version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.cumsum:1
# 07d72ff772834a63a4ad00b84132147c
msgid "Return cumulative sum of result of fn on each element in elts."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.determine_url_file_extension:1
# dfc79471b5934299b0baa3580da57bdc
msgid "This returns the type of archive a URL refers to.  This is sometimes confusing because of URLs like:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.determine_url_file_extension:4
# 302dd18c478d44a8a363239f32e6f24e
msgid "https://github.com/petdance/ack/tarball/1.93_02"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.determine_url_file_extension:6
# f724934573434a9d949f2c4d73c3396f
msgid "Where the URL doesn't actually contain the filename.  We need to know what type it is so that we can appropriately name files in mirrors."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_all:1
# 455c5151ee2d4c8c9e0697d0cf767074
msgid "Returns a list containing the indices of every occurrence of substring in string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:1
# c4c7a147a1ff44f196e8252627cedbe0
msgid "Finds a good list URL for the supplied URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:3
# 23e4664ef7ea4c55bc6d1fa8ed0b05ba
msgid "By default, returns the dirname of the archive path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:5
# 907240a582c24acca60bbfb50f27a9e5
msgid "Provides special treatment for the following websites, which have a unique list URL different from the dirname of the download URL:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:9
# 3e07621bdc8147ad8317249b9ce93a94
msgid "GitHub"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:9
# b3272c1d62e24563be0f2cd11f40095e
msgid "https://github.com/<repo>/<name>/releases"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:10
# 133e5b18613a414c8894af432bf2bf80
msgid "GitLab"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:10
# 8ff616cb33bf4bbbad0c626372c830b7
msgid "https://gitlab.\\*/<repo>/<name>/tags"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:11
# 8538e25839cf406d9a8583ef7e7dbe0c
msgid "BitBucket"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:11
# 1b0d1740e6b245fe8f5827178923862b
msgid "https://bitbucket.org/<repo>/<name>/downloads/?tab=tags"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:12
# 6ac865bdaf23449e99652881f3bb775a
msgid "CRAN"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:12
# c13b02cea4134e7b995ae054293d5e31
msgid "https://\\*.r-project.org/src/contrib/Archive/<name>"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:15
# 1a5cae8440a34526b61d1fc1843a29a2
msgid "The download URL for the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.find_list_url:18
# 774910fc29ae4b0eb782c35d36b5e93f
msgid "The list URL for the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.insensitize:1
# 623df399657648f7b65718275b0db239
msgid "Change upper and lowercase letters to be case insensitive in the provided string.  e.g., 'a' becomes '[Aa]', 'B' becomes '[bB]', etc.  Use for building regexes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:1
# d1e231a77cf64b1b84c22b4506550809
# bf478fe3247941699d062683a250025c
msgid "Try to determine the name of a package from its filename or URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version:6
# c6ba7b52540e4061900a9e50fc541dc2
# d937b803152d4e6ead142e4365f6fa4b
# 768e31c9418c4855a694d2bc9e6046ff
msgid "The version of the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:8
# 260902058e734e7b9be7b8c56e598006
msgid "The name of the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name:11
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:12
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:18
# 9c35d401cb704238b9d5f55a1ea16093
# 03dbc2a186824b30a6bca5b1784f9bfe
# d14d8c4a171a417f8079f7b3da6fe647
msgid ":exc:`UndetectableNameError` -- If the URL does not match any regexes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:1
# 629a0d04f50e477bad19513bc795f2aa
msgid "Try to determine the name of a package and extract its version from its filename or URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:7
# 50de4599977340d2951873091d52187b
msgid "The name of the package The version of the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_and_version:11
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version:9
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:16
# 888153c8dea14438977f61dab9dfb534
# df012fc47aa8494fa341ef4a0ccc76b1
# 4a76d2e0922d4bd39af59da7362ddffc
msgid ":exc:`UndetectableVersionError` -- If the URL does not match any regexes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:8
# 9751d39c936d47b48bea47a84d6bbf89
msgid "A tuple containing:     name of the package,     first index of name,     length of name,     the index of the matching regex     the matching regex"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:14
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:12
# 274b809ed1fd4a8db81519db8ad1e51e
# 0444eb96e0374663b0bb317354d782a3
msgid "A tuple containing:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_name_offset:11
# 8b60f06ca3e340cd8e5298906f6ff4a9
msgid "name of the package, first index of name, length of name, the index of the matching regex the matching regex"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:1
# bf3a638a1e0a4e1980f4175db53edd27
# 44a3a2cb378a4d0dae4ef22e826d7a83
msgid "Try to extract a version string from a filename or URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:6
# 06e63d63dae64e029facfeb7b728c5eb
msgid "A tuple containing:     version of the package,     first index of version,     length of version string,     the index of the matching regex     the matching regex"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.parse_version_offset:9
# 44638ab9715a4a108717a614475a8725
msgid "version of the package, first index of version, length of version string, the index of the matching regex the matching regex"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:1
# 14c658f16a8548749a7266523f35b29c
msgid "Some URLs have a query string, e.g.:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:3
# 5dc0d3a7412c44839c8415e4bf94bbee
msgid "https://github.com/losalamos/CLAMR/blob/packages/PowerParser_v2.0.7.tgz?raw=true"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:4
# e14c6e303a4847dc92f86d2b9b2022c4
msgid "http://www.apache.org/dyn/closer.cgi?path=/cassandra/1.2.0/apache-cassandra-1.2.0-rc2-bin.tar.gz"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:5
# 7c7d8acb21e24e6296958fb20721779d
msgid "https://gitlab.kitware.com/vtk/vtk/repository/archive.tar.bz2?ref=v7.0.0"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:7
# 9c99040bc0db4f56bf7bddff176557d1
msgid "In (1), the query string needs to be stripped to get at the extension, but in (2) & (3), the filename is IN a single final query argument."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:11
# 6a04259b857b47ffba04424ce619da36
msgid "This strips the URL into three pieces: ``prefix``, ``ext``, and ``suffix``. The suffix contains anything that was stripped off the URL to get at the file extension.  In (1), it will be ``'?raw=true'``, but in (2), it will be empty. In (3) the suffix is a parameter that follows after the file extension, e.g.:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:17
# a0392253e7b0495f8f3dfc501f78df89
msgid "``('https://github.com/losalamos/CLAMR/blob/packages/PowerParser_v2.0.7', '.tgz', '?raw=true')``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:18
# eeece193774d471a8f273daf13277339
msgid "``('http://www.apache.org/dyn/closer.cgi?path=/cassandra/1.2.0/apache-cassandra-1.2.0-rc2-bin', '.tar.gz', None)``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.split_url_extension:19
# 9b57617302e340a08d39dabd97221c19
msgid "``('https://gitlab.kitware.com/vtk/vtk/repository/archive', '.tar.bz2', '?ref=v7.0.0')``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:1
# cac8f81a7bca4f73907d73b0c437612c
msgid "Most tarballs contain a package name followed by a version number. However, some also contain extraneous information in-between the name and version:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:5
# ef4cf2c3c5754583814ac0320a5533dd
msgid "``rgb-1.0.6``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:6
# 9d67a693ecf5425c899bc3553a27ae79
msgid "``converge_install_2.3.16``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:7
# cdb4f3b725874627a9b346d9de1700a4
msgid "``jpegsrc.v9b``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:9
# e99adc0b02f94d80acc3eee5b897e1c1
msgid "These strings are not part of the package name and should be ignored. This function strips the version number and any extraneous suffixes off and returns the remaining string. The goal is that the name is always the last thing in ``path``:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:14
# 93e27943abd04685a77c6fbfe34e6466
msgid "``rgb``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:15
# 7d5c3fea091648beb59e693f376a33f6
msgid "``converge``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:16
# f48e3f8eac6f40db8014757b11729b6d
msgid "``jpeg``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:20
# ab18e0eade7b4f86be731316b9e6f269
msgid "The version detected for this URL"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_name_suffixes:23
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:18
# c847838bd6504acbaf997853a9339a2f
# 673e5fdf5f7a4e3e9d400950e24f6283
msgid "The ``path`` with any extraneous suffixes removed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:1
# bd6236db4abb45cc94fe994abb1b39fa
msgid "Some tarballs contain extraneous information after the version:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:3
# 370d33472b274c1eb02e3f3c17b2d325
msgid "``bowtie2-2.2.5-source``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:4
# 67e36f94953a47d3b38eaaaee263ea62
msgid "``libevent-2.0.21-stable``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:5
# 7f227c6cdb934fc1a7232b31db555f89
msgid "``cuda_8.0.44_linux.run``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:7
# 994fa4dc2db24b04b04263578600a7ae
msgid "These strings are not part of the version number and should be ignored. This function strips those suffixes off and returns the remaining string. The goal is that the version is always the last thing in ``path``:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:11
# 3239dd4ac8ac4610b1fafafd85b6e634
msgid "``bowtie2-2.2.5``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:12
# 2c47f0dcadd447e4a4cdbf0008725bb0
msgid "``libevent-2.0.21``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.strip_version_suffixes:13
# 5b2ba578ba954115ad3a038b1c5c4156
msgid "``cuda_8.0.44``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.substitute_version:1
# 3ae66df4c71645008beabc15a9178975
msgid "Given a URL or archive name, find the version in the path and substitute the new version for it.  Replace all occurrences of the version *if* they don't overlap with the package name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.substitute_version:5
# 395437d510124548ac338a6096e3a437
msgid "Simple example:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.substitute_version:12
# 5ad021fb515f45a19879145963b0a534
msgid "Complex example:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.substitution_offsets:1
# c2d109dc85a14db8889a1781fcceb794
msgid "This returns offsets for substituting versions and names in the provided path.  It is a helper for :func:`substitute_version`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/url.py:docstring of spack.url.wildcard_version:1
# c4027d43cf67463eb54ed8886f8ad41c
msgid "Find the version in the supplied path, and return a regular expression that will match this path with any version in its place."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:353
# 79c4eae3f2624689934975bbdcc3d389
msgid "spack.variant module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant:1
# b67ae91a95a148af9b65379397ae7187
msgid "The variant module contains data structures that are needed to manage variants both in packages and in specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant:1
# fb11a7e55a0f4f3ea21f1c407484c19a
msgid "A variant that has not yet decided who it wants to be. It behaves like a multi valued variant which **could** do things."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant:4
# ce95ce81c36240959ddd9d183c82be9f
msgid "This kind of variant is generated during parsing of expressions like ``foo=bar`` and differs from multi valued variants because it will satisfy any other variant with the same name. This is because it **could** do it if it grows up to be a multi valued variant with the right set of values."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.compatible:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.compatible:1
# 047047e1bd1342cbb12a6713f955fbc7
# 4305e023b6fc42a3bb561415bfcb03bf
msgid "Returns True if self and other are compatible, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.compatible:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.compatible:3
# 451973fe7d0c42d59e9d8ef33c8cca72
# e7e6bf4dfad943cda5adef6e8f5e7f77
msgid "As there is no semantic check, two VariantSpec are compatible if either they contain the same value or they are both multi-valued."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.compatible:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.compatible:6
# 405a70d6f493445d8cf6d6a0f17c3551
# b6988feb30054e25914a6a2b0bf5fc9b
msgid "instance against which we test compatibility"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.constrain:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.constrain:1
# 6171cecb4e1649e6b7c8fd6823c6ef01
# 2ae9de50b8454a56a37dfc59409235a9
msgid "Modify self to match all the constraints for other if both instances are multi-valued. Returns True if self changed, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.constrain:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.constrain:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.constrain:5
# 03b2eb695caa41418749e9f1b37a6687
# 9cb7611807ce49e99694467592203e31
# 05f64ae0d3e64f7797e409d80036d662
msgid "instance against which we constrain self"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.copy:1
# ab3fcbea43384b5bb96a9146e8e94b67
msgid "Returns an instance of a variant equivalent to self"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.copy:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.copy:3
# da59eda2deed4cbea53ecebb1a624a66
# f11b207fcfb34ab19b812333c55d108f
msgid "a copy of self"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.from_node_dict:1
# 42f74e7bcb0d48a7b2cb6b23addadf06
msgid "Reconstruct a variant from a node dict."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.satisfies:1
# 8ad767de0eae437aa3dfd729ba32ecaf
msgid "Returns true if ``other.name == self.name``, because any value that other holds and is not in self yet **could** be added."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.satisfies:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultiValuedVariant.satisfies:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.satisfies:4
# 95ae80b771b04bc0906485bdb11fc8f0
# e14a8b88bfce420f9b89cebfc7b281a7
# 8a2f4a1e5f6b40e89d8a8bda155e7285
msgid "constraint to be met for the method to return True"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.value:1
# e27a6f70dbdc4e258c45a6365de81496
msgid "Returns a tuple of strings containing the values stored in the variant."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.value:4
# 564f288d3b6c4aa3976fca4468ee5151
msgid "values stored in the variant"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.yaml_entry:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.yaml_entry:1
# 524b0dfededb46dd8b5d2098a792dfc8
# e4dd7adea74544ac8df1c450af9e437b
msgid "Returns a key, value tuple suitable to be an entry in a yaml dict."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.AbstractVariant.yaml_entry:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.yaml_entry:3
# 77105d07a9404d5d87e74aae7aeb9216
# a2afb502b203440b971ea06729c2fc25
msgid "(name, value_representation)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.BoolValuedVariant:1
# 15a10f7e96424ad9a41f628dcb782801
msgid "Bases: :class:`spack.variant.SingleValuedVariant`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.BoolValuedVariant:1
# 781b12898a6449bc833ab6366fe9cf17
msgid "A variant that can hold either True or False."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues:1
# 2360a405a08b49108da0f1e64d50254e
msgid "Bases: :class:`collections.abc.Sequence`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues:1
# 7e89f1aae8724e2d863539db1be674f2
msgid "Allows combinations from one of many mutually exclusive sets."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues:3
# 708102f776094aed93343184330d98be
msgid "The value ``('none',)`` is reserved to denote the empty set and therefore no other set can contain the item ``'none'``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues:6
# a8808d94e20445ac85cc040aee1f6133
msgid "mutually exclusive sets of values"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues.allow_empty_set:1
# bca85fbbdec049d4a70d0759065e20f7
msgid "Adds the empty set to the current list of disjoint sets."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues.feature_values:1
# beef263fea5947f6b3af9630bfbcfed5
msgid "Attribute used to track values which correspond to features which can be enabled or disabled as understood by the package's build system."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues.prohibit_empty_set:1
# 7d7b2afe70124ae9a2bf105aec2e0915
msgid "Removes the empty set from the current list of disjoint sets."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues.with_default:1
# ededbc18177542cbbe1ddeb7bc723bd1
msgid "Sets the default value and returns self."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues.with_error:1
# a6cc3466a26443a29f84c9a14f2b80df
msgid "Sets the error message format and returns self."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.DisjointSetsOfValues.with_non_feature_values:1
# f9bf2f8396a54bb8acabed7ff328e5dd
msgid "Marks a few values as not being tied to a feature."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.InconsistentValidationError:1
# 9429a78c33344730b81d88eedb6359bb
msgid "Raised if the wrong validator is used to validate a variant."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.InvalidVariantValueError:1
# 6086351edbcb453085c8e14dd66184e4
msgid "Raised when a valid variant has at least an invalid value."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultiValuedVariant:1
# 53382f79d884459185c604dd43779c31
msgid "Bases: :class:`spack.variant.AbstractVariant`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultiValuedVariant:1
# 4cdf78aba82c478fa3be813a7d46c6c0
msgid "A variant that can hold multiple values at once."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultiValuedVariant.satisfies:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant.satisfies:1
# 295f3d79fc6c406284cc774744d33447
# 59dd6ff095f645128695a7055242149b
msgid "Returns true if ``other.name == self.name`` and ``other.value`` is a strict subset of self. Does not try to validate."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultipleValuesInExclusiveVariantError:1
# b0526001272d4ccf9823026e48cc6304
msgid "Bases: :class:`spack.error.SpecError`, :class:`ValueError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.MultipleValuesInExclusiveVariantError:1
# 7ea1ed8c3bdf49dd80c499ea0297922c
msgid "Raised when multiple values are present in a variant that wants only one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant:1
# 69b060e290a7490eb1c10093b4e32122
msgid "Bases: :class:`spack.variant.MultiValuedVariant`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.SingleValuedVariant:1
# 0ce1c620976e4d78aa676dcdedc06eb0
msgid "A variant that can hold multiple values, but one at a time."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant:1
# b84004a3a9a0451087369178954585be
msgid "Represents a variant in a package, as declared in the variant directive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.allowed_values:1
# 275f9d7f45694f4eb8c5716bf0a1e21b
msgid "Returns a string representation of the allowed values for printing purposes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.allowed_values:4
# 8f778e7ce3b942ed94e0f584570bbacf
msgid "representation of the allowed values"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_default:1
# 32ab24ae2c1c41a09e29aa9a1433091b
msgid "Factory that creates a variant holding the default value."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_default:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_variant:6
# 90eca01c5ca843a992dca63c3ad21ed3
# dabbaa55c20b4f9daa65ca66c80674ac
msgid "instance of the proper variant"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_variant:1
# fc80355d891140dcb38a243498183d3c
msgid "Factory that creates a variant holding the value passed as a parameter."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.make_variant:4
# d9492c2dba154cb0a301d441d41df819
msgid "value that will be hold by the variant"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.validate_or_raise:1
# 44bd7b41166240979d9b021e0acfd8a1
msgid "Validate a variant spec against this package variant. Raises an exception if any error is found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.validate_or_raise:4
# 033c8ceb42ba438ca4900d2042e541e4
msgid "instance to be validated"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.validate_or_raise:6
# fa2286ed76cb4965b6c65821584cc328
msgid "the package that required the validation, if available"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.validate_or_raise:10
# a663e94825a3494f94700334a18e21de
msgid ":exc:`InconsistentValidationError` -- if ``vspec.name != self.name``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.validate_or_raise:11
# 4dec847fd6d84fdf96498e445efcc8c5
msgid ":exc:`MultipleValuesInExclusiveVariantError` -- if ``vspec`` has multiple values but ``self.multi == False``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.validate_or_raise:13
# b4cf012f44124ebd943ea83df20e50a0
msgid ":exc:`InvalidVariantValueError` -- if ``vspec.value`` contains invalid values"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.Variant.variant_cls:1
# 1eac0b64af4d440393ea00b93fd07a77
msgid "Proper variant class to be used for this configuration."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap:1
# c8e2dcfbe9024e618ef479aa8cee8d1f
msgid "Bases: :class:`llnl.util.lang.HashableMap`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap:1
# 21eeeaad21a247159a6f615fbe7ec125
msgid "Map containing variant instances. New values can be added only if the key is not already present."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.concrete:1
# 571ce9bd8219497b98c7bedfd9d78bf1
msgid "Returns True if the spec is concrete in terms of variants."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.constrain:1
# 082c28f4b49f4673b5bb17adfc46fad6
msgid "Add all variants in other that aren't in self to self. Also constrain all multi-valued variants that are already present. Return True if self changed, False otherwise"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.copy:1
# c13932cb1a244e7ebe8b4de239c1cd6c
msgid "Return an instance of VariantMap equivalent to self."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.satisfies:1
# 72ebdc1c184b4ffbaa1c34a65c620678
msgid "Returns True if this VariantMap is more constrained than other, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.satisfies:4
# 265a8dabf899442296aad9af39ac5a5a
msgid "VariantMap instance to satisfy"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.satisfies:6
# 9410dd0e286d432c8d9588a2c34be2b2
msgid "if True return False if a key is in other and not in self, otherwise discard that key and proceed with evaluation"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.substitute:1
# 9c32edb2160e4f5ca1ee7fb7971072e0
msgid "Substitutes the entry under ``vspec.name`` with ``vspec``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.VariantMap.substitute:3
# 183505b28583413381a509503c29b3ef
msgid "variant spec to be substituted"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.any_combination_of:1
# a7448c2dd480466981c4969c3894af22
msgid "Multi-valued variant that allows any combination of the specified values, and also allows the user to specify 'none' (as a string) to choose none of them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.any_combination_of:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.disjoint_sets:5
# ba21d2a4236747e4ac607d3f9d13e0c6
# 7676d9cc57e14a1a9fa0a582b4e160a2
msgid "It is up to the package implementation to handle the value 'none' specially, if at all."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.any_combination_of:8
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.auto_or_any_combination_of:4
# 9901721268954c39b283e02b4b21e67d
# ff724bb03a184d9096c3325f1bb757f5
msgid "allowed variant values"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.any_combination_of:10
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.auto_or_any_combination_of:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.disjoint_sets:10
# e90bc4411d654cdeb49c120bcc997e0e
# 695df7bc49fb4894808f393346d304b6
# 2b9cdd39222d43f6957cfd10da86c735
msgid "a properly initialized instance of DisjointSetsOfValues"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.auto_or_any_combination_of:1
# e376cb72808f412b94309ae3ebfb51c6
msgid "Multi-valued variant that allows any combination of a set of values (but not the empty set) or 'auto'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.disjoint_sets:1
# db3778d3d9394663b778c66265364579
msgid "Multi-valued variant that allows any combination picking from one of multiple disjoint sets of values, and also allows the user to specify 'none' (as a string) to choose none of them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.implicit_variant_conversion:1
# 7c19bfd286534a30a231475c8f6f48ce
msgid "Converts other to type(self) and calls method(self, other)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.implicit_variant_conversion:3
# 3326b046eea54ad9a745ab740c4ed666
msgid "any predicate method that takes another variant as an argument"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.implicit_variant_conversion:5
# 27dbac75158a4e8b8a060eb06da87cf8
msgid "Returns: decorated method"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.substitute_abstract_variants:1
# 8174c5d4d87e46a4b9bcc28556b69ad7
msgid "Uses the information in `spec.package` to turn any variant that needs it into a SingleValuedVariant."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/variant.py:docstring of spack.variant.substitute_abstract_variants:4
# 4103ce1490ca4e72bccf0538d829d6de
msgid "spec on which to operate the substitution"
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:361
# 86d8c41806f345388a73c2f9d03f1a79
msgid "spack.version module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version:1
# d0e968692a7e4f199d1d66b735f64c2b
msgid "This module implements Version and version-ish objects.  These are:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version:3
# 5a03e3ccda7048f68d7feadce9aeccfc
msgid "Version"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version:4
# fb0b70e9a65a49a488c335e0171d154a
msgid "A single version of a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version:5
# 7099b6119d9b473fa0f7365d5004787e
msgid "VersionRange"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version:6
# 2a333364e50240409324fb19a1786fb5
msgid "A range of versions of a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version:8
# 981fcb6808f94319aa1211ab0fd65d4d
msgid "VersionList"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version:8
# 402b6f88386a4283b361e2cfde8b1408
msgid "A list of Versions and VersionRanges."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version:10
# 06241712beb14f3ebf80aa66e0e30fd9
msgid "All of these types support the following operations, which can be called on any of the types::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version:1
# b6415a530e644a95919ab2dab8f69392
msgid "Class to represent versions"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dashed:1
# 6f948f29cafe450ba25dad86e4cba656
msgid "The dashed representation of the version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dashed:3
# 210216d11a2b42deb1288aa4af9ab9e6
msgid "Example: >>> version = Version('1.2.3b') >>> version.dashed Version('1-2-3b')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dashed:8
# 0408a1cd482c4c759af7667f4c252537
msgid "The version with separator characters replaced by dashes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dotted:1
# 09cd726fd5514c6c9cd4367d6f128db3
msgid "The dotted representation of the version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dotted:3
# ca269cec7d28401da4422e391b3668b1
msgid "Example: >>> version = Version('1-2-3b') >>> version.dotted Version('1.2.3b')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.dotted:8
# 05a90ad16325419880b39b6a9cb26b56
msgid "The version with separator characters replaced by dots"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.is_predecessor:1
# a3ae98d315ed419b89b6abbc1a9f52df
msgid "True if the other version is the immediate predecessor of this one. That is, NO versions v exist such that: (self < v < other and v not in self)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.isdevelop:1
# ce9c20dee5dd4c928465422df5488798
msgid "Triggers on the special case of the `@develop-like` version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.joined:1
# 6ec758164d9b4f58a4b1480763a544ea
msgid "The joined representation of the version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.joined:3
# 8a268021dc2743f7989bef1ca9c78ec7
msgid "Example: >>> version = Version('1.2.3b') >>> version.joined Version('123b')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.joined:8
# 5946433d6ca04a19b1040e606e2330a0
msgid "The version with separator characters removed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.satisfies:1
# 8a50585b35a047d6b6841f9ddef48cc2
msgid "A Version 'satisfies' another if it is at least as specific and has a common prefix.  e.g., we want gcc@4.7.3 to satisfy a request for gcc@4.7 so that when a user asks to build with gcc@4.7, we can find a suitable compiler."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.underscored:1
# a6d6f3cd610344c2a324629bafa78f5d
msgid "The underscored representation of the version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.underscored:3
# 303c7c965d4049908792928ee45df677
msgid "Example: >>> version = Version('1.2.3b') >>> version.underscored Version('1_2_3b')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.underscored:8
# 5f79f57e16634e6e8ed92258056f0015
msgid "The version with separator characters replaced by     underscores"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.underscored:10
# 04a94614aaac4ca39320a8be3434f971
msgid "The version with separator characters replaced by"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.underscored:11
# 8865bdd37f2d484794641b294bc33e68
msgid "underscores"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.up_to:1
# 88b51ea3ad4b4231a6a4fdfb30999c81
msgid "The version up to the specified component."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.up_to:3
# 90ff6e06793444898b504fad001a54b5
msgid "Examples: >>> version = Version('1.23-4b') >>> version.up_to(1) Version('1') >>> version.up_to(2) Version('1.23') >>> version.up_to(3) Version('1.23-4') >>> version.up_to(4) Version('1.23-4b') >>> version.up_to(-1) Version('1.23-4') >>> version.up_to(-2) Version('1.23') >>> version.up_to(-3) Version('1')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.Version.up_to:20
# ba4bfe498d8942abba1f8397d66e53cd
msgid "The first index components of the version"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange.satisfies:1
# 0413954d16a0432e9099c0523fa2939c
msgid "A VersionRange satisfies another if some version in this range would satisfy some version in the other range.  To do this it must either:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange.satisfies:5
# ec2ab8c081f345758efcb33aebde99f9
msgid "Overlap with the other range"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange.satisfies:6
# 28a6faf1a7d648ee865f3408b0178803
msgid "The start of this range satisfies the end of the other range."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange.satisfies:8
# f9b4dcd2f0ac47ada452f11e8522aaf6
msgid "This is essentially the same as overlaps(), but overlaps assumes that its arguments are specific.  That is, 4.7 is interpreted as 4.7.0.0.0.0... .  This function assumes that 4.7 would be satisfied by 4.7.3.5, etc."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange.satisfies:13
# f44e84f60ddb430b9ab789388f36315f
msgid "Rationale:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange.satisfies:15
# 1c327be05a734ce19e5a5273ba6454f9
msgid "If a user asks for gcc@4.5:4.7, and a package is only compatible with gcc@4.7.3:4.8, then that package should be able to build under the constraints.  Just using overlaps() would not work here."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange.satisfies:19
# 57f6d1015985453ba984f3a1d9748de9
msgid "Note that we don't need to check whether the end of this range would satisfy the start of the other range, because overlaps() already covers that case."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionRange.satisfies:23
# d910a35478e84336b978d5d611472588
msgid "Note further that overlaps() is a symmetric operation, while satisfies() is not."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList:1
# 39d4ba8818e44db2a9f9c9fa0a35189b
msgid "Sorted, non-redundant list of Versions and VersionRanges."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList.from_dict:1
# c70e9981cb22484d95abe31bc7873fc4
msgid "Parse dict from to_dict."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList.highest:1
# f7f26f2b54124f73a5d31c6cc1373896
msgid "Get the highest version in the list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList.intersect:1
# 0d6bd99ae3b441599f93857fab905196
msgid "Intersect this spec's list with other."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList.intersect:3
# b20b1cd7ae864c0485c29cb0f1c7fa92
msgid "Return True if the spec changed as a result; False otherwise"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList.lowest:1
# 85102fdf70e84ae88cab4a883003ee57
msgid "Get the lowest version in the list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList.satisfies:1
# 6fff1d79543e417099ecba81e131f500
msgid "A VersionList satisfies another if some version in the list would satisfy some version in the other list.  This uses essentially the same algorithm as overlaps() does for VersionList, but it calls satisfies() on member Versions and VersionRanges."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList.satisfies:7
# 68692bfd59504e87b3f1c20ed03c9f00
msgid "If strict is specified, this version list must lie entirely *within* the other in order to satisfy it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.VersionList.to_dict:1
# 98631c7926044b2281c342b711928154
msgid "Generate human-readable dict for YAML."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/version.py:docstring of spack.version.ver:1
# a9573ac0d4ea48f09112f0ed59d6f6c9
msgid "Parses a Version, VersionRange, or VersionList from a string or list of strings."
msgstr ""

#: ../spack/lib/spack/docs/spack.rst:370
# e49ecd860806490e83a482b3ac01d03b
msgid "Module contents"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/__init__.py:docstring of spack.spack_version_info:1
# 81dfd99f3f794f4dabc48fdb14781429
msgid "major, minor, patch version for Spack, in a tuple"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/__init__.py:docstring of spack.spack_version:1
# 8e5b3f86d45b448f85ecc61fd9c17fed
msgid "String containing Spack version joined with .'s"
msgstr ""

