# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-27 13:44-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/chain.rst:10
msgid "Chaining Spack Installations"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:12
msgid "You can point your Spack installation to another installation to use any packages that are installed there. To register the other Spack instance, you can add it as an entry to ``upstreams.yaml``:"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:24
msgid "``install_tree`` must point to the ``opt/spack`` directory inside of the Spack base directory."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:27
msgid "Once the upstream Spack instance has been added, ``spack find`` will automatically check the upstream instance when querying installed packages, and new package installations for the local Spack install will use any dependencies that are installed in the upstream instance."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:32
msgid "This other instance of Spack has no knowledge of the local Spack instance and may not have the same permissions or ownership as the local Spack instance. This has the following consequences:"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:36
msgid "Upstream Spack instances are not locked. Therefore it is up to users to make sure that the local instance is not using an upstream instance when it is being modified."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:40
msgid "Users should not uninstall packages from the upstream instance. Since the upstream instance doesn't know about the local instance, it cannot prevent the uninstallation of packages which the local instance depends on."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:44
msgid "Other details about upstream installations:"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:46
msgid "If a package is installed both locally and upstream, the local installation will always be used as a dependency. This can occur if the local Spack installs a package which is not present in the upstream, but later on the upstream Spack instance also installs that package."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:51
msgid "If an upstream Spack instance registers and installs an external package, the local Spack instance will treat this the same as a Spack-installed package. This feature will only work if the upstream Spack instance includes the upstream functionality (i.e. if its commit is after March 27, 2019)."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:59
msgid "Using Multiple Upstream Spack Instances"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:61
msgid "A single Spack instance can use multiple upstream Spack installations. Spack will search upstream instances in the order you list them in your configuration. If your installation refers to instances X and Y, in that order, then instance X must list Y as an upstream in its own ``upstreams.yaml``."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:68
msgid "Using Modules for Upstream Packages"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:70
msgid "The local Spack instance does not generate modules for packages which are installed upstream. The local Spack instance can be configured to use the modules generated by the upstream Spack instance."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:74
msgid "There are two requirements to use the modules created by an upstream Spack instance: firstly the upstream instance must do a ``spack module tcl refresh``, which generates an index file that maps installed packages to their modules; secondly, the local Spack instance must add a ``modules`` entry to the configuration:"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:88
msgid "Each time new packages are installed in the upstream Spack instance, the upstream Spack maintainer should run ``spack module tcl refresh`` (or the corresponding command for the type of module they intend to use)."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:94
msgid "Spack can generate modules that :ref:`automatically load <autoloading-dependencies>` the modules of dependency packages. Spack cannot currently do this for modules in upstream packages."
msgstr ""

