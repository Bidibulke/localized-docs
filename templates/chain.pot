# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-23 00:42-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/chain.rst:10
# 03f3a1d5c12848889f41ed111c6dd4a8
msgid "Chaining Spack Installations"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:12
# 8350d8250ec848279c6726f5b1092e07
msgid "You can point your Spack installation to another installation to use any packages that are installed there. To register the other Spack instance, you can add it as an entry to ``upstreams.yaml``:"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:24
# 8977a241f79e4a76aca74591376f4776
msgid "``install_tree`` must point to the ``opt/spack`` directory inside of the Spack base directory."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:27
# cfc19e77324d4ffcb37ec8bcda2f9633
msgid "Once the upstream Spack instance has been added, ``spack find`` will automatically check the upstream instance when querying installed packages, and new package installations for the local Spack install will use any dependencies that are installed in the upstream instance."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:32
# 9d23ec6c4f294fcb85ef13c4fcdb9bed
msgid "This other instance of Spack has no knowledge of the local Spack instance and may not have the same permissions or ownership as the local Spack instance. This has the following consequences:"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:36
# c6e79dd3401a421ca4c0932f736e874a
msgid "Upstream Spack instances are not locked. Therefore it is up to users to make sure that the local instance is not using an upstream instance when it is being modified."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:40
# 01c18c81e5094bfaabed58c002327f5d
msgid "Users should not uninstall packages from the upstream instance. Since the upstream instance doesn't know about the local instance, it cannot prevent the uninstallation of packages which the local instance depends on."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:44
# 8e5d4eb190f44de0a0a99c8b7c5d9232
msgid "Other details about upstream installations:"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:46
# 80816981c9ff4af284aad3c4a13c6362
msgid "If a package is installed both locally and upstream, the local installation will always be used as a dependency. This can occur if the local Spack installs a package which is not present in the upstream, but later on the upstream Spack instance also installs that package."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:51
# 1dfdce8b0cd446b185c8e4c1214d2a33
msgid "If an upstream Spack instance registers and installs an external package, the local Spack instance will treat this the same as a Spack-installed package. This feature will only work if the upstream Spack instance includes the upstream functionality (i.e. if its commit is after March 27, 2019)."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:59
# f18dc75807714e618dc7da765c448d3e
msgid "Using Multiple Upstream Spack Instances"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:61
# 2532bdc084f847b1b12093705784b0c1
msgid "A single Spack instance can use multiple upstream Spack installations. Spack will search upstream instances in the order you list them in your configuration. If your installation refers to instances X and Y, in that order, then instance X must list Y as an upstream in its own ``upstreams.yaml``."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:68
# a3bcdd6be5e1435d9cd1cf96a9a264b9
msgid "Using Modules for Upstream Packages"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:70
# eeb6f11a6ef64002a547ec3c9603d9c8
msgid "The local Spack instance does not generate modules for packages which are installed upstream. The local Spack instance can be configured to use the modules generated by the upstream Spack instance."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:74
# 21096085905145f8a64c7886bb7919b3
msgid "There are two requirements to use the modules created by an upstream Spack instance: firstly the upstream instance must do a ``spack module tcl refresh``, which generates an index file that maps installed packages to their modules; secondly, the local Spack instance must add a ``modules`` entry to the configuration:"
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:88
# 177e68a02e704037817e85568025e7c7
msgid "Each time new packages are installed in the upstream Spack instance, the upstream Spack maintainer should run ``spack module tcl refresh`` (or the corresponding command for the type of module they intend to use)."
msgstr ""

#: ../spack/lib/spack/docs/chain.rst:94
# 456f3020b3f04c9aa6021f1070616613
msgid "Spack can generate modules that :ref:`automatically load <autoloading-dependencies>` the modules of dependency packages. Spack cannot currently do this for modules in upstream packages."
msgstr ""

