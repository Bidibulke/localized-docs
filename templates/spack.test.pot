# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-27 13:44-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/spack.test.rst:2
msgid "spack.test package"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:5
msgid "Submodules"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:8
msgid "spack.test.architecture module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/architecture.py:docstring of spack.test.architecture:1
msgid "Test checks if the architecture class is created correctly and also that the functions are looking for the correct architecture name"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/architecture.py:docstring of spack.test.architecture.test_user_back_end_input:1
msgid "Test when user inputs backend that both the backend target and backend operating system match"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/architecture.py:docstring of spack.test.architecture.test_user_front_end_input:1
msgid "Test when user inputs just frontend that both the frontend target and frontend operating system match"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:16
msgid "spack.test.build\\_environment module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/build_environment.py:docstring of spack.test.build_environment.test_set_build_environment_variables:1
msgid "Check that build_environment supplies the needed library/include directories via the SPACK_LINK_DIRS and SPACK_INCLUDE_DIRS environment variables."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:24
msgid "spack.test.build\\_system\\_guess module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/build_system_guess.py:docstring of spack.test.build_system_guess.url_and_build_system:1
msgid "Sets up the resources to be pulled by the stage with the appropriate file name and returns their url along with the correct build-system guess"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:32
msgid "spack.test.build\\_systems module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/build_systems.py:docstring of spack.test.build_systems.TestAutotoolsPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.MockLayout:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.MockPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.MockPackageMultiRepo:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/flag_handlers.py:docstring of spack.test.flag_handlers.TestFlagHandlers:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/install.py:docstring of spack.test.install.MockStage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/install.py:docstring of spack.test.install.RemovePrefixChecker:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.TestPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/sbang.py:docstring of spack.test.sbang.ScriptDirectory:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_semantics.py:docstring of spack.test.spec_semantics.TestSpecSematics:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_syntax.py:docstring of spack.test.spec_syntax.TestSpecSyntax:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.TestStage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/tengine.py:docstring of spack.test.tengine.TestContext:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/tengine.py:docstring of spack.test.tengine.TestTengineEnvironment:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/variant.py:docstring of spack.test.variant.TestBoolValuedVariant:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/variant.py:docstring of spack.test.variant.TestMultiValuedVariant:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/variant.py:docstring of spack.test.variant.TestSingleValuedVariant:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/variant.py:docstring of spack.test.variant.TestVariant:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/variant.py:docstring of spack.test.variant.TestVariantMapTest:1
msgid "Bases: :class:`object`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/build_systems.py:docstring of spack.test.build_systems.test_affirmative_make_check:1
msgid "Tests that Spack correctly detects targets in a Makefile."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/build_systems.py:docstring of spack.test.build_systems.test_affirmative_ninja_check:1
msgid "Tests that Spack correctly detects targets in a Ninja build script."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/build_systems.py:docstring of spack.test.build_systems.test_negative_make_check:1
msgid "Tests that Spack correctly ignores false positives in a Makefile."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/build_systems.py:docstring of spack.test.build_systems.test_negative_ninja_check:1
msgid "Tests that Spack correctly ignores false positives in a Ninja build script."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:40
msgid "spack.test.cc module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc:1
msgid "This test checks that the Spack cc compiler wrapper is parsing arguments correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.check_args:1
msgid "Check output arguments that cc produces when called with args."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.check_args:3
msgid "This assumes that cc will print debug command output with one element per line, so that we see whether arguments that should (or shouldn't) contain spaces are parsed correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.dump_mode:1
msgid "Make cc dump the mode it detects, and return it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.pkg_prefix:1
msgid "The prefix of the package being mock installed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.real_cc:1
msgid "the \"real\" compiler the wrapper is expected to invoke"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_cc_deps:1
msgid "Ensure -L and RPATHs are not added in cc mode."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_ccld_deps:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_ccld_with_system_dirs:1
msgid "Ensure all flags are added in ccld mode."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_dep_include:1
msgid "Ensure a single dependency include directory is added."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_dep_lib:1
msgid "Ensure a single dependency RPATH is added."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_dep_lib_no_lib:1
msgid "Ensure a single dependency RPATH is added with no -L."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_dep_lib_no_rpath:1
msgid "Ensure a single dependency link flag is added with no dep RPATH."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_dep_rpath:1
msgid "Ensure RPATHs for root package are added."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_ld_deps:1
msgid "Ensure no (extra) -I args or -Wl, are passed in ld mode."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_ld_deps_no_link:1
msgid "Ensure SPACK_RPATH_DEPS controls -rpath for ld."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_ld_deps_no_rpath:1
msgid "Ensure SPACK_LINK_DEPS controls -L for ld."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cc.py:docstring of spack.test.cc.test_ld_deps_partial:1
msgid "Make sure ld -r (partial link) is handled correctly on OS's where it doesn't accept rpaths."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:48
msgid "spack.test.cmd\\_extensions module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cmd_extensions.py:docstring of spack.test.cmd_extensions.hello_world_cmd:1
msgid "Simple extension command with code contained in a single file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/cmd_extensions.py:docstring of spack.test.cmd_extensions.hello_world_with_module_in_root:1
msgid "Extension command with additional code in the root folder."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:56
msgid "spack.test.compilers module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/compilers.py:docstring of spack.test.compilers.MockCompiler:1
msgid "Bases: :class:`spack.compiler.Compiler`"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:64
msgid "spack.test.concretize module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.concretize_difficult_packages:1
msgid "Test a couple of large packages that are often broken due to current limitations in the concretizer"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_architecture_deep_inheritance:1
msgid "Make sure that indirect dependencies receive architecture information from the root even when partial architecture information is provided by an intermediate dependency."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_architecture_inheritance:1
msgid "test_architecture_inheritance is likely to fail with an UnavailableCompilerVersionError if the architecture is concretized incorrectly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_concretize_two_virtuals:1
msgid "Test a package with multiple virtual dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_concretize_two_virtuals_with_dual_provider:1
msgid "Test a package with multiple virtual dependencies and force a provider that provides both."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_concretize_two_virtuals_with_dual_provider_and_a_conflict:1
msgid "Test a package with multiple virtual dependencies and force a provider that provides both, and another conflicting package that provides one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_concretize_two_virtuals_with_one_bound:1
msgid "Test a package with multiple virtual dependencies and one preset."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_concretize_two_virtuals_with_two_bound:1
msgid "Test a package with multiple virtual deps and two of them preset."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_concretize_with_provides_when:1
msgid "Make sure insufficient versions of MPI are not in providers list when we ask for some advanced version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.TestConcretize.test_find_spec_parents:1
msgid "Tests the spec finding logic used by concretization."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize.py:docstring of spack.test.concretize.spec:1
msgid "Spec to be concretized"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:72
msgid "spack.test.concretize\\_preferences module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences.test_all_is_not_a_virtual:1
msgid "Verify that `all` is allowed in packages.yaml."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences.test_develop:1
msgid "Test concretization with develop-like versions"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences.test_no_virtuals_in_packages_yaml:1
msgid "Verify that virtuals are not allowed in packages.yaml."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences.test_preferred:1
msgid "\"Test packages with some version marked as preferred=True"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences.test_preferred_compilers:1
msgid "Test preferred compilers are applied correctly"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences.test_preferred_providers:1
msgid "Test preferred providers of virtual packages are applied correctly"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences.test_preferred_variants:1
msgid "Test preferred variants are applied correctly"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.TestConcretizePreferences.test_preferred_versions:1
msgid "Test preferred package versions are applied correctly"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.concretize_scope:1
msgid "Adds a scope for concretization preferences"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/concretize_preferences.py:docstring of spack.test.concretize_preferences.update_packages:1
msgid "Update config and reread package list"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:80
msgid "spack.test.config module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.check_compiler_config:1
msgid "Check that named compilers in comps match Spack's config."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.check_schema:1
msgid "Check a Spack YAML schema against some data"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.compiler_specs:1
msgid "Returns a couple of compiler specs needed for the tests"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.get_config_error:1
msgid "Parse a YAML string and return the resulting ConfigFormatError."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.get_config_error:3
msgid "Fail if there is no ConfigFormatError"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.test_bad_config_section:1
msgid "Test that getting or setting a bad section gives an error."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.test_config_format_error:1
msgid "This is raised when we try to write a bad configuration."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.test_keys_are_ordered:1
msgid "Test that keys in Spack YAML files retain their order from the file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.test_merge_with_defaults:1
msgid "This ensures that specified preferences merge with defaults as expected. Originally all defaults were initialized with the exact same object, which led to aliasing problems. Therefore the test configs used here leave 'version' blank for multiple packages in 'packages_merge_low'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/config.py:docstring of spack.test.config.write_config_file:1
msgid "Returns a function that writes a config file."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:88
msgid "spack.test.conftest module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.check_for_leftover_stage_files:1
msgid "Ensure that each test leaves a clean stage when done."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.check_for_leftover_stage_files:3
msgid "This can be disabled for tests that are expected to dirty the stage by adding::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.check_for_leftover_stage_files:8
msgid "to tests that need it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.config:1
msgid "Hooks the mock configuration files into spack.config"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.configuration_dir:1
msgid "Copies mock configuration files in a temporary directory. Returns the directory path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.conflict_spec:1
msgid "Specs which violate constraints specified with the \"conflicts\" directive in the \"conflict\" package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.database:1
msgid "Creates a mock database with some packages installed note that the ref count for dyninst here will be 3, as it's recycled across each install."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.ignore_stage_files:1
msgid "Session-scoped helper for check_for_leftover_stage_files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.ignore_stage_files:3
msgid "Used to track which leftover files in the stage have been seen."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.install_mockery:1
msgid "Hooks a fake install directory, DB, and stage directory into Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.installation_dir_with_headers:1
msgid "Mock installation tree with a few headers placed in different subdirectories. Shouldn't be modified by tests as it is session scoped."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.invalid_spec:1
msgid "Specs that do not parse cleanly due to invalid formatting."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.linux_os:1
msgid "Returns a named tuple with attributes 'name' and 'version' representing the OS."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_archive:1
msgid "Creates a very simple archive directory with a configure script and a makefile that installs to a prefix. Tars it up into an archive."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_config:1
msgid "Mocks two configuration scopes: 'low' and 'high'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packaging.py:docstring of spack.test.packaging.fake_fetchify:1
msgid "Fake the URL for a package so it downloads from a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_fetch_cache:1
msgid "Substitutes spack.paths.fetch_cache with a mock object that does nothing and raises on fetch."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_git_repository:1
msgid "Creates a very simple git repository with two branches and two commits."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_hg_repository:1
msgid "Creates a very simple hg repository with two commits."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_packages:1
msgid "Use the 'builtin.mock' repository instead of 'builtin'"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_stage:1
msgid "Mocks up a fake stage directory for use by tests."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mock_svn_repository:1
msgid "Creates a very simple svn repository with two commits."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.module_configuration:1
msgid "Reads the module configuration file from the mock ones prepared for tests and monkeypatches the right classes to hook it in."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mutable_config:1
msgid "Like config, but tests can modify the configuration."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mutable_database:1
msgid "For tests that need to modify the database instance."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mutable_mock_env_path:1
msgid "Fixture for mocking the internal spack environments directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.mutable_mock_packages:1
msgid "Function-scoped mock packages, for tests that need to modify them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.no_chdir:1
msgid "Ensure that no test changes Spack's working dirctory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.no_chdir:3
msgid "This prevents Spack tests (and therefore Spack commands) from changing the working directory and causing other tests to fail mysteriously. Tests should use ``working_dir`` or ``py.path``'s ``.as_cwd()`` instead of ``os.chdir`` to avoid failing this check."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.no_chdir:8
msgid "We assert that the working directory hasn't changed, unless the original wd somehow ceased to exist."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.remove_whatever_it_is:1
msgid "Type-agnostic remove."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/conftest.py:docstring of spack.test.conftest.repo_path:1
msgid "Session scoped RepoPath object pointing to the mock repository"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:96
msgid "spack.test.database module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database:1
msgid "These tests check the database is functioning properly, both in memory and in its file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database.test_005_db_exists:1
msgid "Make sure db cache file exists after creating."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database.test_010_all_install_sanity:1
msgid "Ensure that the install layout reflects what we think it does."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database.test_020_db_sanity:1
msgid "Make sure query() returns what's actually in the db."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database.test_025_reindex:1
msgid "Make sure reindex works and ref counts are valid."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database.test_040_ref_counts:1
msgid "Ensure that we got ref counts right when we read the DB."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database.test_050_basic_query:1
msgid "Ensure querying database is consistent with what is installed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database.test_add_to_upstream_after_downstream:1
msgid "An upstream DB can add a package after it is installed in the downstream DB. When a package is recorded as installed in both, the results should refer to the downstream DB."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/database.py:docstring of spack.test.database.usr_folder_exists:1
msgid "The ``/usr`` folder is assumed to be existing in some tests. This fixture makes it such that its existence is mocked, so we have no requirements on the system running tests."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:104
msgid "spack.test.directory\\_layout module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/directory_layout.py:docstring of spack.test.directory_layout:1
msgid "This test verifies that the Spack directory layout works properly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/directory_layout.py:docstring of spack.test.directory_layout.layout_and_dir:1
msgid "Returns a directory layout and the corresponding directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/directory_layout.py:docstring of spack.test.directory_layout.test_find:1
msgid "Test that finding specs within an install layout works."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/directory_layout.py:docstring of spack.test.directory_layout.test_handle_unknown_package:1
msgid "This test ensures that spack can at least do *some* operations with packages that are installed but that it does not know about.  This is actually not such an uncommon scenario with spack; it can happen when you switch from a git branch where you're working on a new package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/directory_layout.py:docstring of spack.test.directory_layout.test_handle_unknown_package:7
msgid "This test ensures that the directory layout stores enough information about installed packages' specs to uninstall or query them again if the package goes away."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/directory_layout.py:docstring of spack.test.directory_layout.test_read_and_write_spec:1
msgid "This goes through each package in spack and creates a directory for it.  It then ensures that the spec for the directory's installed package can be read back in consistently, and finally that the directory can be removed by the directory layout."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/directory_layout.py:docstring of spack.test.directory_layout.test_yaml_directory_layout_parameters:1
msgid "This tests the various parameters that can be used to configure the install location"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:112
msgid "spack.test.environment\\_modifications module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.env:1
msgid "Returns an empty EnvironmentModifications object."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.files_to_be_sourced:1
msgid "Returns a list of files to be sourced"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.miscellaneous_paths:1
msgid "Returns a list of paths, including system ones."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.prepare_environment_for_tests:1
msgid "Sets a few dummy variables in the current environment, that will be useful for the tests below."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_append_flags:1
msgid "Tests appending to a value in the environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_extend:1
msgid "Tests that we can construct a list of environment modifications starting from another list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_extra_arguments:1
msgid "Tests that we can attach extra arguments to any command."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_filter_system_paths:1
msgid "Tests that the filtering of system paths works as expected."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_path_manipulation:1
msgid "Tests manipulating list of paths in the environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_set:1
msgid "Tests setting values in the environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_set_path:1
msgid "Tests setting paths in an environment variable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_source_files:1
msgid "Tests the construction of a list of environment modifications that are the result of sourcing a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/environment_modifications.py:docstring of spack.test.environment_modifications.test_unset:1
msgid "Tests unsetting values in the environment."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:120
msgid "spack.test.flag\\_handlers module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:128
msgid "spack.test.git\\_fetch module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/git_fetch.py:docstring of spack.test.git_fetch.git_version:1
msgid "Tests GitFetchStrategy behavior for different git versions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/git_fetch.py:docstring of spack.test.git_fetch.git_version:3
msgid "GitFetchStrategy tries to optimize using features of newer git versions, but needs to work with older git versions.  To ensure code paths for old versions still work, we fake it out here and make it use the backward-compatibility code paths with newer git versions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/git_fetch.py:docstring of spack.test.git_fetch.test_fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/hg_fetch.py:docstring of spack.test.hg_fetch.test_fetch:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/svn_fetch.py:docstring of spack.test.svn_fetch.test_fetch:1
msgid "Tries to:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/git_fetch.py:docstring of spack.test.git_fetch.test_fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/hg_fetch.py:docstring of spack.test.hg_fetch.test_fetch:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/svn_fetch.py:docstring of spack.test.svn_fetch.test_fetch:3
msgid "Fetch the repo using a fetch strategy constructed with supplied args (they depend on type_of_test)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/git_fetch.py:docstring of spack.test.git_fetch.test_fetch:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/hg_fetch.py:docstring of spack.test.hg_fetch.test_fetch:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/svn_fetch.py:docstring of spack.test.svn_fetch.test_fetch:5
msgid "Check if the test_file is in the checked out repository."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/git_fetch.py:docstring of spack.test.git_fetch.test_fetch:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/hg_fetch.py:docstring of spack.test.hg_fetch.test_fetch:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/svn_fetch.py:docstring of spack.test.svn_fetch.test_fetch:6
msgid "Assert that the repository is at the revision supplied."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/git_fetch.py:docstring of spack.test.git_fetch.test_fetch:7
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/hg_fetch.py:docstring of spack.test.hg_fetch.test_fetch:7
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/svn_fetch.py:docstring of spack.test.svn_fetch.test_fetch:7
msgid "Add and remove some files, then reset the repo, and ensure it's all there again."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:136
msgid "spack.test.graph module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/graph.py:docstring of spack.test.graph.test_ascii_graph_mpileaks:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/graph.py:docstring of spack.test.graph.test_dynamic_dot_graph_mpileaks:1
msgid "Test dynamically graphing the mpileaks package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/graph.py:docstring of spack.test.graph.test_static_graph_mpileaks:1
msgid "Test a static spack graph for a simple package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/graph.py:docstring of spack.test.graph.test_topo_sort:1
msgid "Test topo sort gives correct order."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:144
msgid "spack.test.hg\\_fetch module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:152
msgid "spack.test.install module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/install.py:docstring of spack.test.install.MockInstallError:1
msgid "Bases: :class:`spack.error.SpackError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/install.py:docstring of spack.test.install.test_installed_upstream:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/install.py:docstring of spack.test.install.test_installed_upstream_external:1
msgid "Check that when a dependency package is recorded as installed in an upstream database that it is not reinstalled."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:160
msgid "spack.test.make\\_executable module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/make_executable.py:docstring of spack.test.make_executable:1
msgid "Tests for Spack's built-in parallel make support."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/make_executable.py:docstring of spack.test.make_executable:3
msgid "This just tests whether the right args are getting passed to make."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/make_executable.py:docstring of spack.test.make_executable.MakeExecutableTest:1
msgid "Bases: :class:`unittest.case.TestCase`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/make_executable.py:docstring of spack.test.make_executable.MakeExecutableTest.setUp:1
msgid "Hook method for setting up the test fixture before exercising it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/make_executable.py:docstring of spack.test.make_executable.MakeExecutableTest.tearDown:1
msgid "Hook method for deconstructing the test fixture after testing it."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:168
msgid "spack.test.mirror module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/mirror.py:docstring of spack.test.mirror.set_up_package:1
msgid "Set up a mock package to be mirrored. Each package needs us to:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/mirror.py:docstring of spack.test.mirror.set_up_package:4
msgid "Set up a mock repo/archive to fetch from."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/mirror.py:docstring of spack.test.mirror.set_up_package:5
msgid "Point the package's version args at that repo."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:176
msgid "spack.test.module\\_parsing module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:184
msgid "spack.test.multimethod module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/multimethod.py:docstring of spack.test.multimethod:1
msgid "Test for multi_method dispatch."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/multimethod.py:docstring of spack.test.multimethod.pkg_name:1
msgid "Make tests run on both multimethod and multimethod-inheritor."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/multimethod.py:docstring of spack.test.multimethod.pkg_name:3
msgid "This means we test all of our @when methods on a class that uses them directly, AND on a class that inherits them."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:192
msgid "spack.test.namespace\\_trie module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:200
msgid "spack.test.optional\\_deps module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/optional_deps.py:docstring of spack.test.optional_deps.spec_and_expected:1
msgid "Parameters for the normalization test."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:208
msgid "spack.test.package\\_hash module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_hash.py:docstring of spack.test.package_hash.test_all_same_but_archive_hash:1
msgid "Archive hash is not intended to be reflected in Package hash."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:216
msgid "spack.test.package\\_sanity module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity:1
msgid "This test does sanity checks on Spack's builtin package database."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity.check_repo:1
msgid "Get all packages in the builtin repo to make sure they work."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity.test_all_versions_are_lowercase:1
msgid "Spack package names must be lowercase, and use `-` instead of `_`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity.test_all_virtual_packages_have_default_providers:1
msgid "All virtual packages must have a default provider explicitly set."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity.test_docstring:1
msgid "Ensure that every package has a docstring."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity.test_get_all_mock_packages:1
msgid "Get the mock packages once each too."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity.test_get_all_packages:1
msgid "Get all packages once and make sure that works."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity.test_no_fixme:1
msgid "Packages should not contain any boilerplate such as FIXME or example.com."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/package_sanity.py:docstring of spack.test.package_sanity.test_package_version_consistency:1
msgid "Make sure all versions on builtin packages can produce a fetcher."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:224
msgid "spack.test.packages module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_git_top_level:1
msgid "Ensure that top-level git attribute can be used as a default."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_git_url_top_level_conflicts:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_git_url_top_level_git_versions:1
msgid "Test git fetch strategy inference when url is specified with git."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_git_url_top_level_url_versions:1
msgid "Test URL fetch strategy inference when url is specified with git."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_hg_top_level:1
msgid "Ensure that top-level hg attribute can be used as a default."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_no_extrapolate_without_url:1
msgid "Verify that we can't extrapolate versions for non-URL packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_svn_top_level:1
msgid "Ensure that top-level svn attribute can be used as a default."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_two_vcs_fetchers_top_level:1
msgid "Verify conflict when two VCS strategies are specified together."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packages.py:docstring of spack.test.packages.test_urls_for_versions:1
msgid "Version directive without a 'url' argument should use default url."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:232
msgid "spack.test.packaging module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/packaging.py:docstring of spack.test.packaging:1
msgid "This test checks the binary packaging infrastructure"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:240
msgid "spack.test.patch module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/patch.py:docstring of spack.test.patch.check_multi_dependency_patch_specs:1
msgid "Validate patches on dependencies of patch-several-dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/patch.py:docstring of spack.test.patch.test_conditional_patched_dependencies:1
msgid "Test whether conditional patched dependencies work."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/patch.py:docstring of spack.test.patch.test_conditional_patched_deps_with_conditions:1
msgid "Test whether conditional patched dependencies with conditions work."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/patch.py:docstring of spack.test.patch.test_multiple_patched_dependencies:1
msgid "Test whether multiple patched dependencies work."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/patch.py:docstring of spack.test.patch.test_nested_directives:1
msgid "Ensure pkg data structures are set up properly by nested directives."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/patch.py:docstring of spack.test.patch.test_patch_in_spec:1
msgid "Test whether patches in a package appear in the spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/patch.py:docstring of spack.test.patch.test_patched_dependency:1
msgid "Test whether patched dependencies work."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/patch.py:docstring of spack.test.patch.test_write_and_read_sub_dags_with_patched_deps:1
msgid "Test whether patched dependencies are still correct after writing and reading a sub-DAG of a concretized Spec."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:248
msgid "spack.test.pattern module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/pattern.py:docstring of spack.test.pattern.composite:1
msgid "Returns a composite that contains an instance of `implementation(1)` and one of `implementation(2)`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/pattern.py:docstring of spack.test.pattern.implementation:1
msgid "Returns an implementation of the interface"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/pattern.py:docstring of spack.test.pattern.interface:1
msgid "Returns the interface class for the composite."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:256
msgid "spack.test.permissions module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:264
msgid "spack.test.provider\\_index module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/provider_index.py:docstring of spack.test.provider_index:1
msgid "Tests for provider index cache files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/provider_index.py:docstring of spack.test.provider_index:3
msgid "Tests assume that mock packages provide this::"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:272
msgid "spack.test.python\\_version module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version:1
msgid "Check that Spack complies with minimum supported python versions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version:3
msgid "We ensure that all Spack files work with Python2 >= 2.6 and Python3 >= 3.0."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version:5
msgid "We'd like to drop 2.6 support at some point, but there are still many HPC systems that ship with RHEL6/CentOS 6, which have Python 2.6 as the default version.  Once those go away, we can likely drop 2.6 and increase the minimum supported Python 3 version, as well."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.check_python_versions:1
msgid "Check that a set of Python files works with supported Ptyhon versions"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.pyfiles:1
msgid "Generator that yields all the python files in the search paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.pyfiles:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_parse.py:docstring of spack.test.url_parse.test_url_parse_offset:0
msgid "Parameters"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.pyfiles:3
msgid "list of paths to search for python files"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.pyfiles:5
msgid "file paths to exclude from search"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.pyfiles:0
msgid "Yields"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.pyfiles:8
msgid "python files in the search path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.test_core_module_compatibility:1
msgid "Test that all core spack modules work with supported Python versions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/python_version.py:docstring of spack.test.python_version.test_package_module_compatibility:1
msgid "Test that all spack packages work with supported Python versions."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:280
msgid "spack.test.relocate module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/relocate.py:docstring of spack.test.relocate.source_file:1
msgid "Returns the path to a source file of a relocatable executable."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:288
msgid "spack.test.repo module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:296
msgid "spack.test.sbang module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/sbang.py:docstring of spack.test.sbang:1
msgid "Test that Spack's shebang filtering works correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/sbang.py:docstring of spack.test.sbang.ScriptDirectory:1
msgid "Directory full of test scripts to run sbang instrumentation on."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:304
msgid "spack.test.schema module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:312
msgid "spack.test.spack\\_yaml module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spack_yaml.py:docstring of spack.test.spack_yaml:1
msgid "Test Spack's custom YAML format."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spack_yaml.py:docstring of spack.test.spack_yaml.data:1
msgid "Returns the data loaded from a test file"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:320
msgid "spack.test.spec\\_dag module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag:1
msgid "These tests check Spec DAG operations using dummy packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.check_diamond_deptypes:1
msgid "Validate deptypes in dt-diamond spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.check_diamond_deptypes:3
msgid "This ensures that concretization works properly when two packages depend on the same dependency in different ways."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.test_concretize_deptypes:1
msgid "Ensure that dependency types are preserved after concretization."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.test_construct_spec_with_deptypes:1
msgid "Ensure that it is possible to construct a spec with explicit dependency types."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.test_copy_deptypes:1
msgid "Ensure that dependency types are preserved by spec copy."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.test_edge_traversals:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.test_traversal_directions:1
msgid "Make sure child and parent traversals of specs work."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.test_hash_bits:1
msgid "Ensure getting first n bits of a base32-encoded DAG hash works."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.test_normalize_diamond_deptypes:1
msgid "Ensure that dependency types are preserved even if the same thing is depended on in two different ways."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.TestSpecDag.test_normalize_twice:1
msgid "Make sure normalize can be run twice on the same spec, and that it is idempotent."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.saved_deps:1
msgid "Returns a dictionary to save the dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.set_dependency:1
msgid "Returns a function that alters the dependency information for a package in the ``saved_deps`` fixture."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.test_conditional_dep_with_user_constraints:1
msgid "This sets up packages X->Y such that X depends on Y conditionally. It then constructs a Spec with X but with no constraints on X, so that the initial normalization pass cannot determine whether the constraints are met to add the dependency; this checks whether a user-specified constraint on Y is applied properly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.test_test_deptype:1
msgid "Ensure that test-only dependencies are only included for specified packages in the following spec DAG::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_dag.py:docstring of spack.test.spec_dag.test_test_deptype:10
msgid "w->y deptypes are (link, build), w->x and y->z deptypes are (test)"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:328
msgid "spack.test.spec\\_semantics module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_semantics.py:docstring of spack.test.spec_semantics.TestSpecSematics:1
msgid "This tests satisfies(), constrain() and other semantic operations on specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_semantics.py:docstring of spack.test.spec_semantics.TestSpecSematics.test_satisfies_namespaced_dep:1
msgid "Ensure spec from same or unspecified namespace satisfies namespace constraint."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_semantics.py:docstring of spack.test.spec_semantics.TestSpecSematics.test_satisfies_same_spec_with_different_hash:1
msgid "Ensure that concrete specs are matched *exactly* by hash."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_semantics.py:docstring of spack.test.spec_semantics.TestSpecSematics.test_satisfies_single_valued_variant:1
msgid "Tests that the case reported in https://github.com/spack/spack/pull/2386#issuecomment-282147639 is handled correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_semantics.py:docstring of spack.test.spec_semantics.TestSpecSematics.test_satisfies_virtual_dep_with_virtual_constraint:1
msgid "Ensure we can satisfy virtual constraints when there are multiple vdep providers in the specs."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:336
msgid "spack.test.spec\\_set module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_basic:1
msgid "The \"include\" isn't required, but if it is present, we should only see specs mentioned there.  Also, if we include cdash and project properties, those should be captured and stored on the resulting CombinatorialSpecSet as attributes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_exclude:1
msgid "The exclude property isn't required, but if it appears, any specs mentioned there should not appear in the output specs"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_get_cdash_array:1
msgid "Make sure we can handle multiple cdash sites in a list"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_include_exclude_conflict:1
msgid "Exclude should override include"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_include_limited_packages:1
msgid "If we see the include key, it is a filter and only the specs mentioned there should actually be included."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_no_include:1
msgid "Make sure that without any exclude or include, we get the full cross- product of specs/versions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_packages_no_matrix:1
msgid "The matrix property is required, make sure we error out if it is missing"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_simple_spec_list:1
msgid "Make sure we can handle the slightly more concise syntax where we include the package name/version together and skip the extra keys in the dictionary."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_set.py:docstring of spack.test.spec_set.test_spec_set_with_specs:1
msgid "Make sure we only see the specs mentioned in the include"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:344
msgid "spack.test.spec\\_syntax module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_syntax.py:docstring of spack.test.spec_syntax.TestSpecSyntax.check_lex:1
msgid "Check that the provided spec parses to the provided token list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_syntax.py:docstring of spack.test.spec_syntax.TestSpecSyntax.check_parse:1
msgid "Assert that the provided spec is able to be parsed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_syntax.py:docstring of spack.test.spec_syntax.TestSpecSyntax.check_parse:3
msgid "If this is called with one argument, it assumes that the string is canonical (i.e., no spaces and ~ instead of - for variants) and that it will convert back to the string it came from."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_syntax.py:docstring of spack.test.spec_syntax.TestSpecSyntax.check_parse:8
msgid "If this is called with two arguments, the first argument is the expected canonical form and the second is a non-canonical input to be parsed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_syntax.py:docstring of spack.test.spec_syntax.TestSpecSyntax.test_nonexistent_hash:1
msgid "Ensure we get errors for nonexistant hashes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_syntax.py:docstring of spack.test.spec_syntax.TestSpecSyntax.test_redundant_spec:1
msgid "Check that redundant spec constraints raise errors."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_syntax.py:docstring of spack.test.spec_syntax.TestSpecSyntax.test_redundant_spec:3
msgid "TODO (TG): does this need to be an error? Or should concrete specs only raise errors if constraints cause a contradiction?"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:352
msgid "spack.test.spec\\_yaml module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_yaml.py:docstring of spack.test.spec_yaml:1
msgid "Test YAML serialization for specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_yaml.py:docstring of spack.test.spec_yaml:3
msgid "YAML format preserves DAG information in the spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_yaml.py:docstring of spack.test.spec_yaml.reverse_all_dicts:1
msgid "Descend into data and reverse all the dictionaries"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_yaml.py:docstring of spack.test.spec_yaml.test_ordered_read_not_required_for_consistent_dag_hash:1
msgid "Make sure ordered serialization isn't required to preserve hashes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_yaml.py:docstring of spack.test.spec_yaml.test_ordered_read_not_required_for_consistent_dag_hash:3
msgid "For consistent hashes, we require that YAML and json documents have their keys serialized in a deterministic order. However, we don't want to require them to be serialized in order. This ensures that is not required."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_yaml.py:docstring of spack.test.spec_yaml.test_using_ordered_dict:1
msgid "Checks that dicts are ordered"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/spec_yaml.py:docstring of spack.test.spec_yaml.test_using_ordered_dict:3
msgid "Necessary to make sure that dag_hash is stable across python versions and processes."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:360
msgid "spack.test.stage module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage:1
msgid "Test that the Stage class works correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.check_destroy:1
msgid "Figure out whether a stage was destroyed correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.check_setup:1
msgid "Figure out whether a stage was set up correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.failing_fetch_strategy:1
msgid "Returns a fetch strategy that fails."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.failing_search_fn:1
msgid "Returns a search function that fails! Always!"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.get_stage_path:1
msgid "Figure out where a stage should be living. This depends on whether it's named."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.mock_archive:1
msgid "Creates a mock archive with the structure expected by the tests"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.search_fn:1
msgid "Returns a search function that always succeeds."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/stage.py:docstring of spack.test.stage.tmpdir_for_stage:1
msgid "Uses a temporary directory for staging"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:368
msgid "spack.test.svn\\_fetch module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:376
msgid "spack.test.tengine module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/tengine.py:docstring of spack.test.tengine.TestContext.A:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/tengine.py:docstring of spack.test.tengine.TestContext.B:1
msgid "Bases: :class:`spack.tengine.Context`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/tengine.py:docstring of spack.test.tengine.TestContext.C:1
msgid "Bases: :class:`spack.test.tengine.A`, :class:`spack.test.tengine.B`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/tengine.py:docstring of spack.test.tengine.TestContext.test_to_dict:1
msgid "Tests that all the context properties in a hierarchy are considered when building the context dictionary."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/tengine.py:docstring of spack.test.tengine.TestTengineEnvironment.test_template_retrieval:1
msgid "Tests the template retrieval mechanism hooked into config files"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:384
msgid "spack.test.test\\_activations module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/test_activations.py:docstring of spack.test.test_activations.test_python_ignore_namespace_init_conflict:1
msgid "Test the view update logic in PythonPackage ignores conflicting instances of __init__ for packages which are in the same namespace."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/test_activations.py:docstring of spack.test.test_activations.test_python_keep_namespace_init:1
msgid "Test the view update logic in PythonPackage keeps the namespace __init__ file as long as one package in the namespace still exists."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/test_activations.py:docstring of spack.test.test_activations.test_python_namespace_conflict:1
msgid "Test the view update logic in PythonPackage reports an error when two python extensions with different namespaces have a conflicting __init__ file."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:392
msgid "spack.test.url\\_fetch module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_fetch.py:docstring of spack.test.url_fetch.test_fetch:1
msgid "Fetch an archive and make sure we can checksum it."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:400
msgid "spack.test.url\\_parse module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_parse.py:docstring of spack.test.url_parse:1
msgid "Tests Spack's ability to parse the name and version of a package based on its URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_parse.py:docstring of spack.test.url_parse.test_url_parse_offset:1
msgid "Tests that the name, version and offsets are computed correctly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_parse.py:docstring of spack.test.url_parse.test_url_parse_offset:3
msgid "expected name"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_parse.py:docstring of spack.test.url_parse.test_url_parse_offset:5
msgid "name offset"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_parse.py:docstring of spack.test.url_parse.test_url_parse_offset:7
msgid "expected version"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_parse.py:docstring of spack.test.url_parse.test_url_parse_offset:9
msgid "version offset"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_parse.py:docstring of spack.test.url_parse.test_url_parse_offset:11
msgid "url to be parsed"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:408
msgid "spack.test.url\\_substitution module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/url_substitution.py:docstring of spack.test.url_substitution:1
msgid "Tests Spack's ability to substitute a different version into a URL."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:416
msgid "spack.test.variant module"
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:424
msgid "spack.test.versions module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions:1
msgid "These version tests were taken from the RPM source code. We try to maintain compatibility with RPM's version semantics where it makes sense."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_canonical:1
msgid "Asserts that a redundant list is reduced to canonical form."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_does_not_satisfy:1
msgid "Asserts that 'v1' does not satisfy 'v2'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_in:1
msgid "Asserts that 'needle' is in 'haystack'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_no_overlap:1
msgid "Asserts that two version ranges do not overlap."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_not_in:1
msgid "Asserts that 'needle' is not in 'haystack'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_overlaps:1
msgid "Asserts that two version ranges overlaps."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_satisfies:1
msgid "Asserts that 'v1' satisfies 'v2'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_ver_eq:1
msgid "Asserts the results of comparisons when 'a' is equal to 'b'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_ver_gt:1
msgid "Asserts the results of comparisons when 'a' is greater than 'b'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.assert_ver_lt:1
msgid "Asserts the results of comparisons when 'a' is less than 'b'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.check_intersection:1
msgid "Asserts that 'a' intersect 'b' == 'expected'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/versions.py:docstring of spack.test.versions.check_union:1
msgid "Asserts that 'a' union 'b' == 'expected'."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:432
msgid "spack.test.views module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/views.py:docstring of spack.test.views.test_global_activation:1
msgid "This test ensures that views which are maintained inside of an extendee package's prefix are maintained as expected and are compatible with global activations prior to #7152."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:440
msgid "spack.test.web module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/test/web.py:docstring of spack.test.web:1
msgid "Tests for web.py."
msgstr ""

#: ../spack/lib/spack/docs/spack.test.rst:449
msgid "Module contents"
msgstr ""

