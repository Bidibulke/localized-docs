# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-27 13:31-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/mirrors.rst:10
msgid "Mirrors"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:12
msgid "Some sites may not have access to the internet for fetching packages. These sites will need a local repository of tarballs from which they can get their files.  Spack has support for this with *mirrors*.  A mirror is a URL that points to a directory, either on the local filesystem or on some server, containing tarballs for all of Spack's packages."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:19
msgid "Here's an example of a mirror's directory structure:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:43
msgid "The structure is very simple.  There is a top-level directory.  The second level directories are named after packages, and the third level contains tarballs for each package, named after each package."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:49
msgid "Archives are **not** named exactly the way they were in the package's fetch URL.  They have the form ``<name>-<version>.<extension>``, where ``<name>`` is Spack's name for the package, ``<version>`` is the version of the tarball, and ``<extension>`` is whatever format the package's fetch URL contains."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:55
msgid "In order to make mirror creation reasonably fast, we copy the tarball in its original format to the mirror directory, but we do not standardize on a particular compression algorithm, because this would potentially require expanding and re-compressing each archive."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:64
msgid "``spack mirror``"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:66
msgid "Mirrors are managed with the ``spack mirror`` command.  The help for ``spack mirror`` looks like this:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:71
msgid "The ``create`` command actually builds a mirror by fetching all of its packages from the internet and checksumming them."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:74
msgid "The other three commands are for managing mirror configuration.  They control the URL(s) from which Spack downloads its packages."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:81
msgid "``spack mirror create``"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:83
msgid "You can create a mirror using the ``spack mirror create`` command, assuming you're on a machine where you can access the internet."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:86
msgid "The command will iterate through all of Spack's packages and download the safe ones into a directory structure like the one above.  Here is what it looks like:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:121
msgid "Once this is done, you can tar up the ``spack-mirror-2014-06-24`` directory and copy it over to the machine you want it hosted on."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:126
msgid "Custom package sets"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:128
msgid "Normally, ``spack mirror create`` downloads all the archives it has checksums for.  If you want to only create a mirror for a subset of packages, you can do that by supplying a list of package specs on the command line after ``spack mirror create``.  For example, this command:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:138
msgid "Will create a mirror for libelf versions greater than or equal to 0.8.12 and boost versions greater than or equal to 1.44."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:143
msgid "Mirror files"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:145
msgid "If you have a *very* large number of packages you want to mirror, you can supply a file with specs in it, one per line:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:159
msgid "This is useful if there is a specific suite of software managed by your site."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:166
msgid "``spack mirror add``"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:168
msgid "Once you have a mirror, you need to let spack know about it.  This is relatively simple.  First, figure out the URL for the mirror.  If it's a directory, you can use a file URL like this one:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:176
msgid "That points to the directory on the local filesystem.  If it were on a web server, you could use a URL like this one:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:179
msgid "https://example.com/some/web-hosted/directory/spack-mirror-2014-06-24"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:181
msgid "Spack will use the URL as the root for all of the packages it fetches. You can tell your Spack installation to use that mirror like this:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:188
msgid "Each mirror has a name so that you can refer to it again later."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:194
msgid "``spack mirror list``"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:196
msgid "To see all the mirrors Spack knows about, run ``spack mirror list``:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:207
msgid "``spack mirror remove``"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:209
msgid "To remove a mirror by name, run:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:219
msgid "Mirror precedence"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:221
msgid "Adding a mirror really adds a line in ``~/.spack/mirrors.yaml``:"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:229
msgid "If you want to change the order in which mirrors are searched for packages, you can edit this file and reorder the sections.  Spack will search the topmost mirror first and the bottom-most mirror last."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:237
msgid "Local Default Cache"
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:239
msgid "Spack caches resources that are downloaded as part of installs. The cache is a valid spack mirror: it uses the same directory structure and naming scheme as other Spack mirrors (so it can be copied anywhere and referenced with a URL like other mirrors). The mirror is maintained locally (within the Spack installation directory) at :file:`var/spack/cache/`. It is always enabled (and is always searched first when attempting to retrieve files for an installation) but can be cleared with :ref:`clean <cmd-spack-clean>`; the cache directory can also be deleted manually without issue."
msgstr ""

#: ../spack/lib/spack/docs/mirrors.rst:248
msgid "Caching includes retrieved tarball archives and source control repositories, but only resources with an associated digest or commit ID (e.g. a revision number for SVN) will be cached."
msgstr ""

