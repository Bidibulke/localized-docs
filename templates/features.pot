# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-27 13:44-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/features.rst:8
msgid "Feature Overview"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:10
msgid "This is a high-level overview of features that make Spack different from other `package managers <http://en.wikipedia.org/wiki/Package_management_system>`_ and `port systems <http://en.wikipedia.org/wiki/Ports_collection>`_."
msgstr ""

#: ../spack/lib/spack/docs/features.rst:17
msgid "Simple package installation"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:19
msgid "Installing the default version of a package is simple. This will install the latest version of the ``mpileaks`` package and all of its dependencies:"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:28
msgid "Custom versions & configurations"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:30
msgid "Spack allows installation to be customized.  Users can specify the version, build compiler, compile-time options, and cross-compile platform, all on the command line."
msgstr ""

#: ../spack/lib/spack/docs/features.rst:54
msgid "Users can specify as many or few options as they care about. Spack will fill in the unspecified values with sensible defaults. The two listed syntaxes for variants are identical when the value is boolean."
msgstr ""

#: ../spack/lib/spack/docs/features.rst:60
msgid "Customize dependencies"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:62
msgid "Spack allows *dependencies* of a particular installation to be customized extensively.  Suppose that ``mpileaks`` depends indirectly on ``libelf`` and ``libdwarf``.  Using ``^``, users can add custom configurations for the dependencies:"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:74
msgid "Non-destructive installs"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:76
msgid "Spack installs every unique package/dependency configuration into its own prefix, so new installs will not break existing ones."
msgstr ""

#: ../spack/lib/spack/docs/features.rst:81
msgid "Packages can peacefully coexist"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:83
msgid "Spack avoids library misconfiguration by using ``RPATH`` to link dependencies.  When a user links a library or runs a program, it is tied to the dependencies it was built with, so there is no need to manipulate ``LD_LIBRARY_PATH`` at runtime."
msgstr ""

#: ../spack/lib/spack/docs/features.rst:90
msgid "Creating packages is easy"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:92
msgid "To create a new packages, all Spack needs is a URL for the source archive.  The ``spack create`` command will create a boilerplate package file, and the package authors can fill in specific build steps in pure Python."
msgstr ""

#: ../spack/lib/spack/docs/features.rst:97
msgid "For example, this command:"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:103
msgid "creates a simple python file:"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:130
msgid "It doesn't take much python coding to get from there to a working package:"
msgstr ""

#: ../spack/lib/spack/docs/features.rst:136
msgid "Spack also provides wrapper functions around common commands like ``configure``, ``make``, and ``cmake`` to make writing packages simple."
msgstr ""

